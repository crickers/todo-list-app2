import"/node_modules/core-js/modules/es.string.replace.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import canUseDOM from"/node_modules/rc-util/es/Dom/canUseDom.js";function makePrefixMap(styleProp,eventName){var prefixes={};return prefixes[styleProp.toLowerCase()]=eventName.toLowerCase(),prefixes["Webkit".concat(styleProp)]="webkit".concat(eventName),prefixes["Moz".concat(styleProp)]="moz".concat(eventName),prefixes["ms".concat(styleProp)]="MS".concat(eventName),prefixes["O".concat(styleProp)]="o".concat(eventName.toLowerCase()),prefixes}export function getVendorPrefixes(domSupport,win){var prefixes={animationend:makePrefixMap("Animation","AnimationEnd"),transitionend:makePrefixMap("Transition","TransitionEnd")};return domSupport&&(!("AnimationEvent"in win)&&delete prefixes.animationend.animation,!("TransitionEvent"in win)&&delete prefixes.transitionend.transition),prefixes}var vendorPrefixes=getVendorPrefixes(canUseDOM(),window),style={};if(canUseDOM()){var _document$createEleme=document.createElement("div");style=_document$createEleme.style}var prefixedEventNames={};export function getVendorPrefixedEventName(eventName){if(prefixedEventNames[eventName])return prefixedEventNames[eventName];var prefixMap=vendorPrefixes[eventName];if(prefixMap)for(var styleProp,stylePropList=Object.keys(prefixMap),len=stylePropList.length,i=0;i<len;i+=1)if(styleProp=stylePropList[i],Object.prototype.hasOwnProperty.call(prefixMap,styleProp)&&styleProp in style)return prefixedEventNames[eventName]=prefixMap[styleProp],prefixedEventNames[eventName];return""}var internalAnimationEndName=getVendorPrefixedEventName("animationend"),internalTransitionEndName=getVendorPrefixedEventName("transitionend");export var supportTransition=!!(internalAnimationEndName&&internalTransitionEndName);export var animationEndName=internalAnimationEndName||"animationend";export var transitionEndName=internalTransitionEndName||"transitionend";export function getTransitionName(transitionName,transitionType){if(!transitionName)return null;if("object"===_typeof(transitionName)){var type=transitionType.replace(/-\w/g,function(match){return match[1].toUpperCase()});return transitionName[type]}return"".concat(transitionName,"-").concat(transitionType)}