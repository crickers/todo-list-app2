import"/node_modules/core-js/modules/es.regexp.constructor.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import"/node_modules/core-js/modules/es.string.trim.js";import{convertHexToDecimal,hslToRgb,hsvToRgb,parseIntFromHex,rgbToRgb}from"/node_modules/@ctrl/tinycolor/dist/module/conversion.js";import{names}from"/node_modules/@ctrl/tinycolor/dist/module/css-color-names.js";import{boundAlpha,convertToPercentage}from"/node_modules/@ctrl/tinycolor/dist/module/util.js";export function inputToRGB(color){var rgb={r:0,g:0,b:0},a=1,s=null,v=null,l=null,ok=!1,format=!1;return"string"==typeof color&&(color=stringInputToObject(color)),"object"==typeof color&&(isValidCSSUnit(color.r)&&isValidCSSUnit(color.g)&&isValidCSSUnit(color.b)?(rgb=rgbToRgb(color.r,color.g,color.b),ok=!0,format="%"===(color.r+"").substr(-1)?"prgb":"rgb"):isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.v)?(s=convertToPercentage(color.s),v=convertToPercentage(color.v),rgb=hsvToRgb(color.h,s,v),ok=!0,format="hsv"):isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.l)&&(s=convertToPercentage(color.s),l=convertToPercentage(color.l),rgb=hslToRgb(color.h,s,l),ok=!0,format="hsl"),Object.prototype.hasOwnProperty.call(color,"a")&&(a=color.a)),a=boundAlpha(a),{ok:ok,format:color.format||format,r:Math.min(255,Math.max(rgb.r,0)),g:Math.min(255,Math.max(rgb.g,0)),b:Math.min(255,Math.max(rgb.b,0)),a:a}}var CSS_INTEGER="[-\\+]?\\d+%?",CSS_NUMBER="[-\\+]?\\d*\\.\\d+%?",CSS_UNIT="(?:"+CSS_NUMBER+")|(?:"+CSS_INTEGER+")",PERMISSIVE_MATCH3="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?",PERMISSIVE_MATCH4="[\\s|\\(]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")[,|\\s]+("+CSS_UNIT+")\\s*\\)?",matchers={CSS_UNIT:new RegExp(CSS_UNIT),rgb:new RegExp("rgb"+PERMISSIVE_MATCH3),rgba:new RegExp("rgba"+PERMISSIVE_MATCH4),hsl:new RegExp("hsl"+PERMISSIVE_MATCH3),hsla:new RegExp("hsla"+PERMISSIVE_MATCH4),hsv:new RegExp("hsv"+PERMISSIVE_MATCH3),hsva:new RegExp("hsva"+PERMISSIVE_MATCH4),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};export function stringInputToObject(color){if(color=color.trim().toLowerCase(),0===color.length)return!1;var named=!1;if(names[color])color=names[color],named=!0;else if("transparent"===color)return{r:0,g:0,b:0,a:0,format:"name"};var match=matchers.rgb.exec(color);return match?{r:match[1],g:match[2],b:match[3]}:(match=matchers.rgba.exec(color),match)?{r:match[1],g:match[2],b:match[3],a:match[4]}:(match=matchers.hsl.exec(color),match)?{h:match[1],s:match[2],l:match[3]}:(match=matchers.hsla.exec(color),match)?{h:match[1],s:match[2],l:match[3],a:match[4]}:(match=matchers.hsv.exec(color),match)?{h:match[1],s:match[2],v:match[3]}:(match=matchers.hsva.exec(color),match)?{h:match[1],s:match[2],v:match[3],a:match[4]}:(match=matchers.hex8.exec(color),match)?{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),a:convertHexToDecimal(match[4]),format:named?"name":"hex8"}:(match=matchers.hex6.exec(color),match)?{r:parseIntFromHex(match[1]),g:parseIntFromHex(match[2]),b:parseIntFromHex(match[3]),format:named?"name":"hex"}:(match=matchers.hex4.exec(color),match)?{r:parseIntFromHex(match[1]+match[1]),g:parseIntFromHex(match[2]+match[2]),b:parseIntFromHex(match[3]+match[3]),a:convertHexToDecimal(match[4]+match[4]),format:named?"name":"hex8"}:(match=matchers.hex3.exec(color),!!match&&{r:parseIntFromHex(match[1]+match[1]),g:parseIntFromHex(match[2]+match[2]),b:parseIntFromHex(match[3]+match[3]),format:named?"name":"hex"})}export function isValidCSSUnit(color){return!!matchers.CSS_UNIT.exec(color+"")}