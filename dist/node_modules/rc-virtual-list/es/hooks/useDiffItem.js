import"/node_modules/core-js/modules/es.symbol.description.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _iterableToArrayLimit(arr,i){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import React from"c:\\node_modules\\react\\index.js";import{findListDiffIndex}from"/node_modules/rc-virtual-list/es/utils/algorithmUtil.js";export default function useDiffItem(data,getKey,onDiff){var _React$useState=React.useState(data),_React$useState2=_slicedToArray(_React$useState,2),prevData=_React$useState2[0],setPrevData=_React$useState2[1],_React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),diffItem=_React$useState4[0],setDiffItem=_React$useState4[1];return React.useEffect(function(){var diff=findListDiffIndex(prevData||[],data||[],getKey);void 0!==(null===diff||void 0===diff?void 0:diff.index)&&(null===onDiff||void 0===onDiff?void 0:onDiff(diff.index),setDiffItem(data[diff.index])),setPrevData(data)},[data]),[diffItem]}