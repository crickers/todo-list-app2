import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.splice.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import shallowEqual from"/node_modules/shallowequal.js";import toArray from"/node_modules/rc-util/es/Children/toArray.js";import CollapsePanel from"/node_modules/rc-collapse/es/Panel.js";function getActiveKeysArray(activeKey){var currentActiveKey=activeKey;return Array.isArray(currentActiveKey)||(currentActiveKey=currentActiveKey?[currentActiveKey]:[]),currentActiveKey.map(function(key){return key+""})}var Collapse=function(_React$Component){function Collapse(props){var _this;_classCallCheck(this,Collapse),_this=_super.call(this,props),_this.onClickItem=function(key){var activeKey=_this.state.activeKey;if(_this.props.accordion)activeKey=activeKey[0]===key?[]:[key];else{activeKey=_toConsumableArray(activeKey);var index=activeKey.indexOf(key);-1<index?activeKey.splice(index,1):activeKey.push(key)}_this.setActiveKey(activeKey)},_this.getNewChild=function(child,index){if(!child)return null;var activeKey=_this.state.activeKey,_this$props=_this.props,prefixCls=_this$props.prefixCls,openMotion=_this$props.openMotion,accordion=_this$props.accordion,rootDestroyInactivePanel=_this$props.destroyInactivePanel,expandIcon=_this$props.expandIcon,collapsible=_this$props.collapsible,key=child.key||index+"",_child$props=child.props,header=_child$props.header,headerClass=_child$props.headerClass,destroyInactivePanel=_child$props.destroyInactivePanel,childCollapsible=_child$props.collapsible,isActive=!1;isActive=accordion?activeKey[0]===key:-1<activeKey.indexOf(key);var mergeCollapsible=null!==childCollapsible&&void 0!==childCollapsible?childCollapsible:collapsible,props={key:key,panelKey:key,header:header,headerClass:headerClass,isActive:isActive,prefixCls:prefixCls,destroyInactivePanel:null!==destroyInactivePanel&&void 0!==destroyInactivePanel?destroyInactivePanel:rootDestroyInactivePanel,openMotion:openMotion,accordion:accordion,children:child.props.children,onItemClick:"disabled"===mergeCollapsible?null:_this.onClickItem,expandIcon:expandIcon,collapsible:mergeCollapsible};return"string"==typeof child.type?child:React.cloneElement(child,props)},_this.getItems=function(){var children=_this.props.children;return toArray(children).map(_this.getNewChild)},_this.setActiveKey=function(activeKey){"activeKey"in _this.props||_this.setState({activeKey:activeKey}),_this.props.onChange(_this.props.accordion?activeKey[0]:activeKey)};var activeKey=props.activeKey,defaultActiveKey=props.defaultActiveKey,currentActiveKey=defaultActiveKey;return"activeKey"in props&&(currentActiveKey=activeKey),_this.state={activeKey:getActiveKeysArray(currentActiveKey)},_this}_inherits(Collapse,_React$Component);var _super=_createSuper(Collapse);return _createClass(Collapse,[{key:"shouldComponentUpdate",value:function shouldComponentUpdate(nextProps,nextState){return!shallowEqual(this.props,nextProps)||!shallowEqual(this.state,nextState)}},{key:"render",value:function render(){var _classNames,_this$props2=this.props,prefixCls=_this$props2.prefixCls,className=_this$props2.className,style=_this$props2.style,accordion=_this$props2.accordion,collapseClassName=classNames((_classNames={},_defineProperty(_classNames,prefixCls,!0),_defineProperty(_classNames,className,!!className),_classNames));return React.createElement("div",{className:collapseClassName,style:style,role:accordion?"tablist":null},this.getItems())}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(nextProps){var newState={};return"activeKey"in nextProps&&(newState.activeKey=getActiveKeysArray(nextProps.activeKey)),newState}}]),Collapse}(React.Component);Collapse.defaultProps={prefixCls:"rc-collapse",onChange:function onChange(){},accordion:!1,destroyInactivePanel:!1},Collapse.Panel=CollapsePanel;export default Collapse;