import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import{useRef,useEffect}from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import KeyCode from"/node_modules/rc-util/es/KeyCode.js";import contains from"/node_modules/rc-util/es/Dom/contains.js";import Mask from"/node_modules/rc-dialog/es/Dialog/Mask.js";import{getMotionName,getUUID}from"/node_modules/rc-dialog/es/util.js";import Content from"/node_modules/rc-dialog/es/Dialog/Content.js";export default function Dialog(props){function onInternalClose(e){null===onClose||void 0===onClose?void 0:onClose(e)}var _props$prefixCls=props.prefixCls,prefixCls=void 0===_props$prefixCls?"rc-dialog":_props$prefixCls,zIndex=props.zIndex,_props$visible=props.visible,visible=void 0!==_props$visible&&_props$visible,_props$keyboard=props.keyboard,keyboard=void 0===_props$keyboard||_props$keyboard,_props$focusTriggerAf=props.focusTriggerAfterClose,focusTriggerAfterClose=void 0===_props$focusTriggerAf||_props$focusTriggerAf,scrollLocker=props.scrollLocker,title=props.title,wrapStyle=props.wrapStyle,wrapClassName=props.wrapClassName,wrapProps=props.wrapProps,onClose=props.onClose,afterClose=props.afterClose,transitionName=props.transitionName,animation=props.animation,_props$closable=props.closable,closable=void 0===_props$closable||_props$closable,_props$mask=props.mask,mask=void 0===_props$mask||_props$mask,maskTransitionName=props.maskTransitionName,maskAnimation=props.maskAnimation,_props$maskClosable=props.maskClosable,maskClosable=void 0===_props$maskClosable||_props$maskClosable,maskStyle=props.maskStyle,maskProps=props.maskProps,lastOutSideActiveElementRef=useRef(),wrapperRef=useRef(),contentRef=useRef(),_React$useState=React.useState(visible),_React$useState2=_slicedToArray(_React$useState,2),animatedVisible=_React$useState2[0],setAnimatedVisible=_React$useState2[1],ariaIdRef=useRef();ariaIdRef.current||(ariaIdRef.current="rcDialogTitle".concat(getUUID()));var contentClickRef=useRef(!1),contentTimeoutRef=useRef(),onWrapperClick=null;return maskClosable&&(onWrapperClick=function onWrapperClick(e){contentClickRef.current?contentClickRef.current=!1:wrapperRef.current===e.target&&onInternalClose(e)}),useEffect(function(){return visible&&setAnimatedVisible(!0),function(){}},[visible]),useEffect(function(){return function(){clearTimeout(contentTimeoutRef.current)}},[]),useEffect(function(){return animatedVisible?(null===scrollLocker||void 0===scrollLocker?void 0:scrollLocker.lock(),null===scrollLocker||void 0===scrollLocker?void 0:scrollLocker.unLock):function(){}},[animatedVisible]),React.createElement("div",{className:"".concat(prefixCls,"-root")},React.createElement(Mask,{prefixCls:prefixCls,visible:mask&&visible,motionName:getMotionName(prefixCls,maskTransitionName,maskAnimation),style:_objectSpread({zIndex:zIndex},maskStyle),maskProps:maskProps}),React.createElement("div",_extends({tabIndex:-1,onKeyDown:function onWrapperKeyDown(e){return keyboard&&e.keyCode===KeyCode.ESC?(e.stopPropagation(),void onInternalClose(e)):void(visible&&e.keyCode===KeyCode.TAB&&contentRef.current.changeActive(!e.shiftKey))},className:classNames("".concat(prefixCls,"-wrap"),wrapClassName),ref:wrapperRef,onClick:onWrapperClick,role:"dialog","aria-labelledby":title?ariaIdRef.current:null,style:_objectSpread(_objectSpread({zIndex:zIndex},wrapStyle),{},{display:animatedVisible?null:"none"})},wrapProps),React.createElement(Content,_extends({},props,{onMouseDown:function onContentMouseDown(){clearTimeout(contentTimeoutRef.current),contentClickRef.current=!0},onMouseUp:function onContentMouseUp(){contentTimeoutRef.current=setTimeout(function(){contentClickRef.current=!1})},ref:contentRef,closable:closable,ariaId:ariaIdRef.current,prefixCls:prefixCls,visible:visible,onClose:onInternalClose,onVisibleChanged:function onDialogVisibleChanged(newVisible){if(!newVisible){if(setAnimatedVisible(!1),mask&&lastOutSideActiveElementRef.current&&focusTriggerAfterClose){try{lastOutSideActiveElementRef.current.focus({preventScroll:!0})}catch(e){}lastOutSideActiveElementRef.current=null}null===afterClose||void 0===afterClose?void 0:afterClose()}else if(!contains(wrapperRef.current,document.activeElement)){var _contentRef$current;lastOutSideActiveElementRef.current=document.activeElement,null===(_contentRef$current=contentRef.current)||void 0===_contentRef$current?void 0:_contentRef$current.focus()}},motionName:getMotionName(prefixCls,transitionName,animation)}))))}