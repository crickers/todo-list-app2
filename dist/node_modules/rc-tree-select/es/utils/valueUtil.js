import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.string.includes.js";import"/node_modules/core-js/modules/esnext.map.delete-all.js";import"/node_modules/core-js/modules/esnext.map.every.js";import"/node_modules/core-js/modules/esnext.map.filter.js";import"/node_modules/core-js/modules/esnext.map.find.js";import"/node_modules/core-js/modules/esnext.map.find-key.js";import"/node_modules/core-js/modules/esnext.map.includes.js";import"/node_modules/core-js/modules/esnext.map.key-of.js";import"/node_modules/core-js/modules/esnext.map.map-keys.js";import"/node_modules/core-js/modules/esnext.map.map-values.js";import"/node_modules/core-js/modules/esnext.map.merge.js";import"/node_modules/core-js/modules/esnext.map.reduce.js";import"/node_modules/core-js/modules/esnext.map.some.js";import"/node_modules/core-js/modules/esnext.map.update.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import{flattenTreeData}from"/node_modules/rc-tree/es/utils/treeUtil.js";import{fillLegacyProps}from"/node_modules/rc-tree-select/es/utils/legacyUtil.js";export function toArray(value){return Array.isArray(value)?value:value===void 0?[]:[value]}export function findValueOption(values,options){var optionMap=new Map;return options.forEach(function(flattenItem){var data=flattenItem.data;optionMap.set(data.value,data)}),values.map(function(val){return fillLegacyProps(optionMap.get(val))})}export function isValueDisabled(value,options){var option=findValueOption([value],options)[0];return!!option&&option.disabled}export function isCheckDisabled(node){return node.disabled||node.disableCheckbox||!1===node.checkable}function getLevel(_ref){for(var parent=_ref.parent,level=0,current=parent;current;)current=current.parent,level+=1;return level}export function flattenOptions(options){function fillKey(list){return(list||[]).map(function(node){var value=node.value,key=node.key,children=node.children,clone=_objectSpread(_objectSpread({},node),{},{key:"key"in node?key:value});return children&&(clone.children=fillKey(children)),clone})}var flattenList=flattenTreeData(fillKey(options),!0);return flattenList.map(function(node){return{key:node.data.key,data:node.data,level:getLevel(node)}})}function getDefaultFilterOption(optionFilterProp){return function(searchValue,dataNode){var value=dataNode[optionFilterProp];return(value+"").toLowerCase().includes((searchValue+"").toLowerCase())}}export function filterOptions(searchValue,options,_ref2){function dig(list){var keepAll=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];return list.map(function(dataNode){var children=dataNode.children,match=keepAll||filterOptionFunc(searchValue,fillLegacyProps(dataNode)),childList=dig(children||[],match);return match||childList.length?_objectSpread(_objectSpread({},dataNode),{},{children:childList}):null}).filter(function(node){return node})}var optionFilterProp=_ref2.optionFilterProp,filterOption=_ref2.filterOption;if(!1===filterOption)return options;var filterOptionFunc;return filterOptionFunc="function"==typeof filterOption?filterOption:getDefaultFilterOption(optionFilterProp),dig(options)}export function getRawValueLabeled(values,prevValue,getEntityByValue,getLabelProp){var valueMap=new Map;return toArray(prevValue).forEach(function(item){item&&"object"===_typeof(item)&&"value"in item&&valueMap.set(item.value,item)}),values.map(function(val){var item={value:val},entity=getEntityByValue(val,"select",!0),label=entity?getLabelProp(entity.data):val;if(valueMap.has(val)){var labeledValue=valueMap.get(val);item.label="label"in labeledValue?labeledValue.label:label,"halfChecked"in labeledValue&&(item.halfChecked=labeledValue.halfChecked)}else item.label=label;return item})}export function addValue(rawValues,value){var values=new Set(rawValues);return values.add(value),Array.from(values)}export function removeValue(rawValues,value){var values=new Set(rawValues);return values.delete(value),Array.from(values)}