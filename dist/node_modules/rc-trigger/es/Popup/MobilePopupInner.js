import"/node_modules/core-js/modules/es.object.assign.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import React from"c:\\node_modules\\react\\index.js";import CSSMotion from"/node_modules/rc-motion.js";import classNames from"/node_modules/classnames.js";var MobilePopupInner=React.forwardRef(function(props,ref){var prefixCls=props.prefixCls,visible=props.visible,zIndex=props.zIndex,children=props.children,_props$mobile=props.mobile;_props$mobile=void 0===_props$mobile?{}:_props$mobile;var popupClassName=_props$mobile.popupClassName,popupStyle=_props$mobile.popupStyle,_props$mobile$popupMo=_props$mobile.popupMotion,popupMotion=void 0===_props$mobile$popupMo?{}:_props$mobile$popupMo,popupRender=_props$mobile.popupRender,elementRef=React.useRef();React.useImperativeHandle(ref,function(){return{forceAlign:function forceAlign(){},getElement:function getElement(){return elementRef.current}}});var mergedStyle=_objectSpread({zIndex:zIndex},popupStyle),childNode=children;return 1<React.Children.count(children)&&(childNode=React.createElement("div",{className:"".concat(prefixCls,"-content")},children)),popupRender&&(childNode=popupRender(childNode)),React.createElement(CSSMotion,Object.assign({visible:visible,ref:elementRef,removeOnLeave:!0},popupMotion),function(_ref,motionRef){var motionClassName=_ref.className,motionStyle=_ref.style,mergedClassName=classNames(prefixCls,popupClassName,motionClassName);return React.createElement("div",{ref:motionRef,className:mergedClassName,style:_objectSpread(_objectSpread({},motionStyle),mergedStyle)},childNode)})});MobilePopupInner.displayName="MobilePopupInner";export default MobilePopupInner;