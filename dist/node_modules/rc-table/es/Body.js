import React from"c:\\node_modules\\react\\index.js";import BodyRow from"/node_modules/rc-table/es/Body/BodyRow.js";import TableContext from"/node_modules/rc-table/es/context/TableContext.js";import ExpandedRow from"/node_modules/rc-table/es/Body/ExpandedRow.js";import BodyContext from"/node_modules/rc-table/es/context/BodyContext.js";import{getColumnsKey}from"/node_modules/rc-table/es/utils/valueUtil.js";import ResizeContext from"/node_modules/rc-table/es/context/ResizeContext.js";import MeasureCell from"/node_modules/rc-table/es/Body/MeasureCell.js";function Body(_ref){var data=_ref.data,getRowKey=_ref.getRowKey,measureColumnWidth=_ref.measureColumnWidth,expandedKeys=_ref.expandedKeys,onRow=_ref.onRow,rowExpandable=_ref.rowExpandable,emptyNode=_ref.emptyNode,childrenColumnName=_ref.childrenColumnName,_React$useContext=React.useContext(ResizeContext),onColumnResize=_React$useContext.onColumnResize,_React$useContext2=React.useContext(TableContext),prefixCls=_React$useContext2.prefixCls,getComponent=_React$useContext2.getComponent,_React$useContext3=React.useContext(BodyContext),fixHeader=_React$useContext3.fixHeader,horizonScroll=_React$useContext3.horizonScroll,flattenColumns=_React$useContext3.flattenColumns,componentWidth=_React$useContext3.componentWidth;return React.useMemo(function(){var rows,WrapperComponent=getComponent(["body","wrapper"],"tbody"),trComponent=getComponent(["body","row"],"tr"),tdComponent=getComponent(["body","cell"],"td");rows=data.length?data.map(function(record,index){var key=getRowKey(record,index);return React.createElement(BodyRow,{key:key,rowKey:key,record:record,recordKey:key,index:index,rowComponent:trComponent,cellComponent:tdComponent,expandedKeys:expandedKeys,onRow:onRow,getRowKey:getRowKey,rowExpandable:rowExpandable,childrenColumnName:childrenColumnName})}):React.createElement(ExpandedRow,{expanded:!0,className:"".concat(prefixCls,"-placeholder"),prefixCls:prefixCls,fixHeader:fixHeader,fixColumn:horizonScroll,horizonScroll:horizonScroll,component:trComponent,componentWidth:componentWidth,cellComponent:tdComponent,colSpan:flattenColumns.length},emptyNode);var columnsKey=getColumnsKey(flattenColumns);return React.createElement(WrapperComponent,{className:"".concat(prefixCls,"-tbody")},measureColumnWidth&&React.createElement("tr",{"aria-hidden":"true",className:"".concat(prefixCls,"-measure-row"),style:{height:0,fontSize:0}},columnsKey.map(function(columnKey){return React.createElement(MeasureCell,{key:columnKey,columnKey:columnKey,onColumnResize:onColumnResize})})),rows)},[data,prefixCls,onRow,measureColumnWidth,expandedKeys,getRowKey,getComponent,componentWidth,emptyNode,flattenColumns])}var MemoBody=React.memo(Body);MemoBody.displayName="Body";export default MemoBody;