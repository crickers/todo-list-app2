import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import React from"c:\\node_modules\\react\\index.js";import ResizeObserver from"/node_modules/rc-resize-observer.js";import omit from"/node_modules/rc-util/es/omit.js";import classNames from"/node_modules/classnames.js";import calculateNodeHeight from"/node_modules/rc-textarea/es/calculateNodeHeight.js";var RESIZE_STATUS;(function(RESIZE_STATUS){RESIZE_STATUS[RESIZE_STATUS.NONE=0]="NONE",RESIZE_STATUS[RESIZE_STATUS.RESIZING=1]="RESIZING",RESIZE_STATUS[RESIZE_STATUS.RESIZED=2]="RESIZED"})(RESIZE_STATUS||(RESIZE_STATUS={}));var ResizableTextArea=function(_React$Component){function ResizableTextArea(props){var _this;return _classCallCheck(this,ResizableTextArea),_this=_super.call(this,props),_this.saveTextArea=function(textArea){_this.textArea=textArea},_this.handleResize=function(size){var resizeStatus=_this.state.resizeStatus,_this$props=_this.props,autoSize=_this$props.autoSize,onResize=_this$props.onResize;resizeStatus!==RESIZE_STATUS.NONE||("function"==typeof onResize&&onResize(size),autoSize&&_this.resizeOnNextFrame())},_this.resizeOnNextFrame=function(){cancelAnimationFrame(_this.nextFrameActionId),_this.nextFrameActionId=requestAnimationFrame(_this.resizeTextarea)},_this.resizeTextarea=function(){var autoSize=_this.props.autoSize;if(autoSize&&_this.textArea){var minRows=autoSize.minRows,maxRows=autoSize.maxRows,textareaStyles=calculateNodeHeight(_this.textArea,!1,minRows,maxRows);_this.setState({textareaStyles:textareaStyles,resizeStatus:RESIZE_STATUS.RESIZING},function(){cancelAnimationFrame(_this.resizeFrameId),_this.resizeFrameId=requestAnimationFrame(function(){_this.setState({resizeStatus:RESIZE_STATUS.RESIZED},function(){_this.resizeFrameId=requestAnimationFrame(function(){_this.setState({resizeStatus:RESIZE_STATUS.NONE}),_this.fixFirefoxAutoScroll()})})})})}},_this.renderTextArea=function(){var _this$props2=_this.props,_this$props2$prefixCl=_this$props2.prefixCls,prefixCls=void 0===_this$props2$prefixCl?"rc-textarea":_this$props2$prefixCl,autoSize=_this$props2.autoSize,onResize=_this$props2.onResize,className=_this$props2.className,disabled=_this$props2.disabled,_this$state=_this.state,textareaStyles=_this$state.textareaStyles,resizeStatus=_this$state.resizeStatus,otherProps=omit(_this.props,["prefixCls","onPressEnter","autoSize","defaultValue","onResize"]),cls=classNames(prefixCls,className,_defineProperty({},"".concat(prefixCls,"-disabled"),disabled));"value"in otherProps&&(otherProps.value=otherProps.value||"");var style=_objectSpread(_objectSpread(_objectSpread({},_this.props.style),textareaStyles),resizeStatus===RESIZE_STATUS.RESIZING?{overflowX:"hidden",overflowY:"hidden"}:null);return React.createElement(ResizeObserver,{onResize:_this.handleResize,disabled:!(autoSize||onResize)},React.createElement("textarea",_extends({},otherProps,{className:cls,style:style,ref:_this.saveTextArea})))},_this.state={textareaStyles:{},resizeStatus:RESIZE_STATUS.NONE},_this}_inherits(ResizableTextArea,_React$Component);var _super=_createSuper(ResizableTextArea);return _createClass(ResizableTextArea,[{key:"componentDidMount",value:function componentDidMount(){this.resizeTextarea()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){prevProps.value!==this.props.value&&this.resizeTextarea()}},{key:"componentWillUnmount",value:function componentWillUnmount(){cancelAnimationFrame(this.nextFrameActionId),cancelAnimationFrame(this.resizeFrameId)}},{key:"fixFirefoxAutoScroll",value:function fixFirefoxAutoScroll(){try{if(document.activeElement===this.textArea){var currentStart=this.textArea.selectionStart,currentEnd=this.textArea.selectionEnd;this.textArea.setSelectionRange(currentStart,currentEnd)}}catch(e){}}},{key:"render",value:function render(){return this.renderTextArea()}}]),ResizableTextArea}(React.Component);export default ResizableTextArea;