import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import{useState,useRef}from"c:\\node_modules\\react\\index.js";var MIN_SWIPE_DISTANCE=.1,STOP_SWIPE_DISTANCE=.01,REFRESH_INTERVAL=20,SPEED_OFF_MULTIPLE=Math.pow(.995,REFRESH_INTERVAL);export default function useTouchMove(ref,onOffset){var _useState=useState(),_useState2=_slicedToArray(_useState,2),touchPosition=_useState2[0],setTouchPosition=_useState2[1],_useState3=useState(0),_useState4=_slicedToArray(_useState3,2),lastTimestamp=_useState4[0],setLastTimestamp=_useState4[1],_useState5=useState(0),_useState6=_slicedToArray(_useState5,2),lastTimeDiff=_useState6[0],setLastTimeDiff=_useState6[1],_useState7=useState(),_useState8=_slicedToArray(_useState7,2),lastOffset=_useState8[0],setLastOffset=_useState8[1],motionRef=useRef(),lastWheelDirectionRef=useRef(),touchEventsRef=useRef(null);touchEventsRef.current={onTouchStart:function onTouchStart(e){var _e$touches$=e.touches[0],screenX=_e$touches$.screenX,screenY=_e$touches$.screenY;setTouchPosition({x:screenX,y:screenY}),window.clearInterval(motionRef.current)},onTouchMove:function onTouchMove(e){if(touchPosition){e.preventDefault();var _e$touches$2=e.touches[0],screenX=_e$touches$2.screenX,screenY=_e$touches$2.screenY;setTouchPosition({x:screenX,y:screenY});var offsetX=screenX-touchPosition.x,offsetY=screenY-touchPosition.y;onOffset(offsetX,offsetY);var now=Date.now();setLastTimestamp(now),setLastTimeDiff(now-lastTimestamp),setLastOffset({x:offsetX,y:offsetY})}},onTouchEnd:function onTouchEnd(){if(touchPosition&&(setTouchPosition(null),setLastOffset(null),lastOffset)){var distanceX=lastOffset.x/lastTimeDiff,distanceY=lastOffset.y/lastTimeDiff,absX=Math.abs(distanceX),absY=Math.abs(distanceY);if(Math.max(absX,absY)<MIN_SWIPE_DISTANCE)return;var currentX=distanceX,currentY=distanceY;motionRef.current=window.setInterval(function(){return Math.abs(currentX)<STOP_SWIPE_DISTANCE&&Math.abs(currentY)<STOP_SWIPE_DISTANCE?void window.clearInterval(motionRef.current):void(currentX*=SPEED_OFF_MULTIPLE,currentY*=SPEED_OFF_MULTIPLE,onOffset(currentX*REFRESH_INTERVAL,currentY*REFRESH_INTERVAL))},REFRESH_INTERVAL)}},onWheel:function onWheel(e){var deltaX=e.deltaX,deltaY=e.deltaY,mixed=0,absX=Math.abs(deltaX),absY=Math.abs(deltaY);absX===absY?mixed="x"===lastWheelDirectionRef.current?deltaX:deltaY:absX>absY?(mixed=deltaX,lastWheelDirectionRef.current="x"):(mixed=deltaY,lastWheelDirectionRef.current="y"),onOffset(-mixed,-mixed)&&e.preventDefault()}},React.useEffect(function(){function onProxyTouchMove(e){touchEventsRef.current.onTouchMove(e)}function onProxyTouchEnd(e){touchEventsRef.current.onTouchEnd(e)}return document.addEventListener("touchmove",onProxyTouchMove,{passive:!1}),document.addEventListener("touchend",onProxyTouchEnd,{passive:!1}),ref.current.addEventListener("touchstart",function onProxyTouchStart(e){touchEventsRef.current.onTouchStart(e)},{passive:!1}),ref.current.addEventListener("wheel",function onProxyWheel(e){touchEventsRef.current.onWheel(e)}),function(){document.removeEventListener("touchmove",onProxyTouchMove),document.removeEventListener("touchend",onProxyTouchEnd)}},[])}