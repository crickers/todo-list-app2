import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.array.splice.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import VirtualList from"/node_modules/rc-virtual-list.js";import MotionTreeNode from"/node_modules/rc-tree/es/MotionTreeNode.js";import{findExpandedKeys,getExpandRange}from"/node_modules/rc-tree/es/utils/diffUtil.js";import{getTreeNodeProps,getKey}from"/node_modules/rc-tree/es/utils/treeUtil.js";var HIDDEN_STYLE={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0},noop=function noop(){};export var MOTION_KEY="RC_TREE_MOTION_".concat(Math.random());var MotionNode={key:MOTION_KEY};export var MotionEntity={key:MOTION_KEY,level:0,index:0,pos:"0",node:MotionNode};var MotionFlattenData={parent:null,children:[],pos:MotionEntity.pos,data:MotionNode,isStart:[],isEnd:[]};export function getMinimumRangeTransitionRange(list,virtual,height,itemHeight){return!1!==virtual&&height?list.slice(0,Math.ceil(height/itemHeight)+1):list}function itemKey(item){var key=item.data.key,pos=item.pos;return getKey(key,pos)}function getAccessibilityPath(item){for(var path=item.data.key+"",current=item;current.parent;)current=current.parent,path="".concat(current.data.key," > ").concat(path);return path}var RefNodeList=function RefNodeList(props,ref){function onMotionEnd(){setPrevData(data),setTransitionData(data),setTransitionRange([]),setMotionType(null),onListChangeEnd()}var prefixCls=props.prefixCls,data=props.data,selectable=props.selectable,checkable=props.checkable,expandedKeys=props.expandedKeys,selectedKeys=props.selectedKeys,checkedKeys=props.checkedKeys,loadedKeys=props.loadedKeys,loadingKeys=props.loadingKeys,halfCheckedKeys=props.halfCheckedKeys,keyEntities=props.keyEntities,disabled=props.disabled,dragging=props.dragging,dragOverNodeKey=props.dragOverNodeKey,dropPosition=props.dropPosition,motion=props.motion,height=props.height,itemHeight=props.itemHeight,virtual=props.virtual,focusable=props.focusable,activeItem=props.activeItem,focused=props.focused,tabIndex=props.tabIndex,onKeyDown=props.onKeyDown,onFocus=props.onFocus,onBlur=props.onBlur,onActiveChange=props.onActiveChange,onListChangeStart=props.onListChangeStart,onListChangeEnd=props.onListChangeEnd,domProps=_objectWithoutProperties(props,["prefixCls","data","selectable","checkable","expandedKeys","selectedKeys","checkedKeys","loadedKeys","loadingKeys","halfCheckedKeys","keyEntities","disabled","dragging","dragOverNodeKey","dropPosition","motion","height","itemHeight","virtual","focusable","activeItem","focused","tabIndex","onKeyDown","onFocus","onBlur","onActiveChange","onListChangeStart","onListChangeEnd"]),listRef=React.useRef(null),indentMeasurerRef=React.useRef(null);React.useImperativeHandle(ref,function(){return{scrollTo:function scrollTo(scroll){listRef.current.scrollTo(scroll)},getIndentWidth:function getIndentWidth(){return indentMeasurerRef.current.offsetWidth}}});var _React$useState=React.useState(expandedKeys),_React$useState2=_slicedToArray(_React$useState,2),prevExpandedKeys=_React$useState2[0],setPrevExpandedKeys=_React$useState2[1],_React$useState3=React.useState(data),_React$useState4=_slicedToArray(_React$useState3,2),prevData=_React$useState4[0],setPrevData=_React$useState4[1],_React$useState5=React.useState(data),_React$useState6=_slicedToArray(_React$useState5,2),transitionData=_React$useState6[0],setTransitionData=_React$useState6[1],_React$useState7=React.useState([]),_React$useState8=_slicedToArray(_React$useState7,2),transitionRange=_React$useState8[0],setTransitionRange=_React$useState8[1],_React$useState9=React.useState(null),_React$useState10=_slicedToArray(_React$useState9,2),motionType=_React$useState10[0],setMotionType=_React$useState10[1];React.useEffect(function(){setPrevExpandedKeys(expandedKeys);var diffExpanded=findExpandedKeys(prevExpandedKeys,expandedKeys);if(!(null!==diffExpanded.key))prevData!==data&&(setPrevData(data),setTransitionData(data));else if(diffExpanded.add){var keyIndex=prevData.findIndex(function(_ref){var key=_ref.data.key;return key===diffExpanded.key}),rangeNodes=getMinimumRangeTransitionRange(getExpandRange(prevData,data,diffExpanded.key),virtual,height,itemHeight),newTransitionData=prevData.slice();newTransitionData.splice(keyIndex+1,0,MotionFlattenData),setTransitionData(newTransitionData),setTransitionRange(rangeNodes),setMotionType("show")}else{var _keyIndex=data.findIndex(function(_ref2){var key=_ref2.data.key;return key===diffExpanded.key}),_rangeNodes=getMinimumRangeTransitionRange(getExpandRange(data,prevData,diffExpanded.key),virtual,height,itemHeight),_newTransitionData=data.slice();_newTransitionData.splice(_keyIndex+1,0,MotionFlattenData),setTransitionData(_newTransitionData),setTransitionRange(_rangeNodes),setMotionType("hide")}},[expandedKeys,data]),React.useEffect(function(){dragging||onMotionEnd()},[dragging]);var mergedData=motion?transitionData:data,treeNodeRequiredProps={expandedKeys:expandedKeys,selectedKeys:selectedKeys,loadedKeys:loadedKeys,loadingKeys:loadingKeys,checkedKeys:checkedKeys,halfCheckedKeys:halfCheckedKeys,dragOverNodeKey:dragOverNodeKey,dropPosition:dropPosition,keyEntities:keyEntities};return React.createElement(React.Fragment,null,focused&&activeItem&&React.createElement("span",{style:HIDDEN_STYLE,"aria-live":"assertive"},getAccessibilityPath(activeItem)),React.createElement("div",{role:"tree"},React.createElement("input",{style:HIDDEN_STYLE,disabled:!1===focusable||disabled,tabIndex:!1===focusable?null:tabIndex,onKeyDown:onKeyDown,onFocus:onFocus,onBlur:onBlur,value:"",onChange:noop})),React.createElement("div",{className:"".concat(prefixCls,"-treenode"),"aria-hidden":!0,style:{position:"absolute",pointerEvents:"none",visibility:"hidden",height:0,overflow:"hidden"}},React.createElement("div",{className:"".concat(prefixCls,"-indent")},React.createElement("div",{ref:indentMeasurerRef,className:"".concat(prefixCls,"-indent-unit")}))),React.createElement(VirtualList,_extends({},domProps,{data:mergedData,itemKey:itemKey,height:height,fullHeight:!1,virtual:virtual,itemHeight:itemHeight,prefixCls:"".concat(prefixCls,"-list"),ref:listRef}),function(treeNode){var pos=treeNode.pos,_treeNode$data=treeNode.data,key=_treeNode$data.key,restProps=_objectWithoutProperties(_treeNode$data,["key"]),isStart=treeNode.isStart,isEnd=treeNode.isEnd,mergedKey=getKey(key,pos);delete restProps.children;var treeNodeProps=getTreeNodeProps(mergedKey,treeNodeRequiredProps);return React.createElement(MotionTreeNode,_extends({},restProps,treeNodeProps,{active:!!activeItem&&key===activeItem.data.key,pos:pos,data:treeNode.data,isStart:isStart,isEnd:isEnd,motion:motion,motionNodes:key===MOTION_KEY?transitionRange:null,motionType:motionType,onMotionStart:onListChangeStart,onMotionEnd:onMotionEnd,treeNodeRequiredProps:treeNodeRequiredProps,onMouseMove:function onMouseMove(){onActiveChange(null)}}))}))},NodeList=React.forwardRef(RefNodeList);NodeList.displayName="NodeList";export default NodeList;