import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/esnext.map.delete-all.js";import"/node_modules/core-js/modules/esnext.map.every.js";import"/node_modules/core-js/modules/esnext.map.filter.js";import"/node_modules/core-js/modules/esnext.map.find.js";import"/node_modules/core-js/modules/esnext.map.find-key.js";import"/node_modules/core-js/modules/esnext.map.includes.js";import"/node_modules/core-js/modules/esnext.map.key-of.js";import"/node_modules/core-js/modules/esnext.map.map-keys.js";import"/node_modules/core-js/modules/esnext.map.map-values.js";import"/node_modules/core-js/modules/esnext.map.merge.js";import"/node_modules/core-js/modules/esnext.map.reduce.js";import"/node_modules/core-js/modules/esnext.map.some.js";import"/node_modules/core-js/modules/esnext.map.update.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import warning from"/node_modules/rc-util/es/warning.js";function removeFromCheckedKeys(halfCheckedKeys,checkedKeys){var filteredKeys=new Set;return halfCheckedKeys.forEach(function(key){checkedKeys.has(key)||filteredKeys.add(key)}),filteredKeys}export function isCheckDisabled(node){var _ref=node||{},disabled=_ref.disabled,disableCheckbox=_ref.disableCheckbox,checkable=_ref.checkable;return!!(disabled||disableCheckbox)||!1===checkable}function fillConductCheck(keys,levelEntities,maxLevel,syntheticGetCheckDisabled){for(var entities,checkedKeys=new Set(keys),halfCheckedKeys=new Set,level=0;level<=maxLevel;level+=1)entities=levelEntities.get(level)||new Set,entities.forEach(function(entity){var key=entity.key,node=entity.node,_entity$children=entity.children,children=void 0===_entity$children?[]:_entity$children;checkedKeys.has(key)&&!syntheticGetCheckDisabled(node)&&children.filter(function(childEntity){return!syntheticGetCheckDisabled(childEntity.node)}).forEach(function(childEntity){checkedKeys.add(childEntity.key)})});for(var _entities,visitedKeys=new Set,_level=maxLevel;0<=_level;_level-=1)_entities=levelEntities.get(_level)||new Set,_entities.forEach(function(entity){var parent=entity.parent,node=entity.node;if(!(syntheticGetCheckDisabled(node)||!entity.parent||visitedKeys.has(entity.parent.key))){if(syntheticGetCheckDisabled(entity.parent.node))return void visitedKeys.add(parent.key);var allChecked=!0,partialChecked=!1;(parent.children||[]).filter(function(childEntity){return!syntheticGetCheckDisabled(childEntity.node)}).forEach(function(_ref2){var key=_ref2.key,checked=checkedKeys.has(key);allChecked&&!checked&&(allChecked=!1),!partialChecked&&(checked||halfCheckedKeys.has(key))&&(partialChecked=!0)}),allChecked&&checkedKeys.add(parent.key),partialChecked&&halfCheckedKeys.add(parent.key),visitedKeys.add(parent.key)}});return{checkedKeys:Array.from(checkedKeys),halfCheckedKeys:Array.from(removeFromCheckedKeys(halfCheckedKeys,checkedKeys))}}function cleanConductCheck(keys,halfKeys,levelEntities,maxLevel,syntheticGetCheckDisabled){for(var entities,checkedKeys=new Set(keys),halfCheckedKeys=new Set(halfKeys),level=0;level<=maxLevel;level+=1)entities=levelEntities.get(level)||new Set,entities.forEach(function(entity){var key=entity.key,node=entity.node,_entity$children2=entity.children,children=void 0===_entity$children2?[]:_entity$children2;checkedKeys.has(key)||halfCheckedKeys.has(key)||syntheticGetCheckDisabled(node)||children.filter(function(childEntity){return!syntheticGetCheckDisabled(childEntity.node)}).forEach(function(childEntity){checkedKeys.delete(childEntity.key)})});halfCheckedKeys=new Set;for(var _entities2,visitedKeys=new Set,_level2=maxLevel;0<=_level2;_level2-=1)_entities2=levelEntities.get(_level2)||new Set,_entities2.forEach(function(entity){var parent=entity.parent,node=entity.node;if(!(syntheticGetCheckDisabled(node)||!entity.parent||visitedKeys.has(entity.parent.key))){if(syntheticGetCheckDisabled(entity.parent.node))return void visitedKeys.add(parent.key);var allChecked=!0,partialChecked=!1;(parent.children||[]).filter(function(childEntity){return!syntheticGetCheckDisabled(childEntity.node)}).forEach(function(_ref3){var key=_ref3.key,checked=checkedKeys.has(key);allChecked&&!checked&&(allChecked=!1),!partialChecked&&(checked||halfCheckedKeys.has(key))&&(partialChecked=!0)}),allChecked||checkedKeys.delete(parent.key),partialChecked&&halfCheckedKeys.add(parent.key),visitedKeys.add(parent.key)}});return{checkedKeys:Array.from(checkedKeys),halfCheckedKeys:Array.from(removeFromCheckedKeys(halfCheckedKeys,checkedKeys))}}export function conductCheck(keyList,checked,keyEntities,getCheckDisabled){var syntheticGetCheckDisabled,warningMissKeys=[];syntheticGetCheckDisabled=getCheckDisabled?getCheckDisabled:isCheckDisabled;var keys=new Set(keyList.filter(function(key){var hasEntity=!!keyEntities[key];return hasEntity||warningMissKeys.push(key),hasEntity})),levelEntities=new Map,maxLevel=0;Object.keys(keyEntities).forEach(function(key){var entity=keyEntities[key],level=entity.level,levelSet=levelEntities.get(level);levelSet||(levelSet=new Set,levelEntities.set(level,levelSet)),levelSet.add(entity),maxLevel=Math.max(maxLevel,level)}),warning(!warningMissKeys.length,"Tree missing follow keys: ".concat(warningMissKeys.slice(0,100).map(function(key){return"'".concat(key,"'")}).join(", ")));var result;return result=!0===checked?fillConductCheck(keys,levelEntities,maxLevel,syntheticGetCheckDisabled):cleanConductCheck(keys,checked.halfCheckedKeys,levelEntities,maxLevel,syntheticGetCheckDisabled),result}