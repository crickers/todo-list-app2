import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/esnext.map.delete-all.js";import"/node_modules/core-js/modules/esnext.map.every.js";import"/node_modules/core-js/modules/esnext.map.filter.js";import"/node_modules/core-js/modules/esnext.map.find.js";import"/node_modules/core-js/modules/esnext.map.find-key.js";import"/node_modules/core-js/modules/esnext.map.includes.js";import"/node_modules/core-js/modules/esnext.map.key-of.js";import"/node_modules/core-js/modules/esnext.map.map-keys.js";import"/node_modules/core-js/modules/esnext.map.map-values.js";import"/node_modules/core-js/modules/esnext.map.merge.js";import"/node_modules/core-js/modules/esnext.map.reduce.js";import"/node_modules/core-js/modules/esnext.map.some.js";import"/node_modules/core-js/modules/esnext.map.update.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import toArray from"/node_modules/rc-util/es/Children/toArray.js";import warning from"/node_modules/rc-util/es/warning.js";import{getPosition,isTreeNode}from"/node_modules/rc-tree/es/util.js";export function getKey(key,pos){return null!==key&&void 0!==key?key:pos}export function warningWithoutKey(){function dig(list){var path=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"";(list||[]).forEach(function(treeNode){var key=treeNode.key,children=treeNode.children;warning(null!==key&&key!==void 0,"Tree node must have a certain key: [".concat(path).concat(key,"]"));var recordKey=key+"";warning(!keys.has(recordKey)||null===key||key===void 0,"Same 'key' exist in the Tree: ".concat(recordKey)),keys.set(recordKey,!0),dig(children,"".concat(path).concat(recordKey," > "))})}var treeData=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[],keys=new Map;dig(treeData)}export function convertTreeToData(rootNodes){function dig(node){var treeNodes=toArray(node);return treeNodes.map(function(treeNode){if(!isTreeNode(treeNode))return warning(!treeNode,"Tree/TreeNode can only accept TreeNode as children."),null;var key=treeNode.key,_treeNode$props=treeNode.props,children=_treeNode$props.children,rest=_objectWithoutProperties(_treeNode$props,["children"]),dataNode=_objectSpread({key:key},rest),parsedChildren=dig(children);return parsedChildren.length&&(dataNode.children=parsedChildren),dataNode}).filter(function(dataNode){return dataNode})}return dig(rootNodes)}export function flattenTreeData(){function dig(list){var parent=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return list.map(function(treeNode,index){var pos=getPosition(parent?parent.pos:"0",index),mergedKey=getKey(treeNode.key,pos),flattenNode=_objectSpread(_objectSpread({},treeNode),{},{parent:parent,pos:pos,children:null,data:treeNode,isStart:[].concat(_toConsumableArray(parent?parent.isStart:[]),[0===index]),isEnd:[].concat(_toConsumableArray(parent?parent.isEnd:[]),[index===list.length-1])});return flattenList.push(flattenNode),flattenNode.children=!0===expandedKeys||expandedKeySet.has(mergedKey)?dig(treeNode.children||[],flattenNode):[],flattenNode})}var treeNodeList=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],expandedKeys=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],expandedKeySet=new Set(!0===expandedKeys?[]:expandedKeys),flattenList=[];return dig(treeNodeList),flattenList}export function traverseDataNodes(dataNodes,callback,config){function processNode(node,index,parent){var children=node?node[childrenPropName]:dataNodes,pos=node?getPosition(parent.pos,index):"0";if(node){var key=syntheticGetKey(node,pos),data={node:node,index:index,pos:pos,key:key,parentPos:parent.node?parent.pos:null,level:parent.level+1};callback(data)}children&&children.forEach(function(subNode,subIndex){processNode(subNode,subIndex,{node:node,pos:pos,level:parent?parent.level+1:-1})})}var childrenPropName,externalGetKey=null,configType=_typeof(config);"function"===configType||"string"===configType?externalGetKey=config:config&&"object"===configType&&(childrenPropName=config.childrenPropName,externalGetKey=config.externalGetKey),childrenPropName=childrenPropName||"children";var syntheticGetKey;externalGetKey?"string"==typeof externalGetKey?syntheticGetKey=function syntheticGetKey(node){return node[externalGetKey]}:"function"==typeof externalGetKey&&(syntheticGetKey=function syntheticGetKey(node){return externalGetKey(node)}):syntheticGetKey=function syntheticGetKey(node,pos){return getKey(node.key,pos)},processNode(null)}export function convertDataToEntities(dataNodes){var _ref=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},initWrapper=_ref.initWrapper,processEntity=_ref.processEntity,onProcessFinished=_ref.onProcessFinished,externalGetKey=_ref.externalGetKey,childrenPropName=_ref.childrenPropName,legacyExternalGetKey=2<arguments.length?arguments[2]:void 0,posEntities={},keyEntities={},wrapper={posEntities:posEntities,keyEntities:keyEntities};return initWrapper&&(wrapper=initWrapper(wrapper)||wrapper),traverseDataNodes(dataNodes,function(item){var node=item.node,index=item.index,pos=item.pos,key=item.key,parentPos=item.parentPos,level=item.level,entity={node:node,index:index,key:key,pos:pos,level:level},mergedKey=getKey(key,pos);posEntities[pos]=entity,keyEntities[mergedKey]=entity,entity.parent=posEntities[parentPos],entity.parent&&(entity.parent.children=entity.parent.children||[],entity.parent.children.push(entity)),processEntity&&processEntity(entity,wrapper)},{externalGetKey:externalGetKey||legacyExternalGetKey,childrenPropName:childrenPropName}),onProcessFinished&&onProcessFinished(wrapper),wrapper}export function getTreeNodeProps(key,_ref2){var expandedKeys=_ref2.expandedKeys,selectedKeys=_ref2.selectedKeys,loadedKeys=_ref2.loadedKeys,loadingKeys=_ref2.loadingKeys,checkedKeys=_ref2.checkedKeys,halfCheckedKeys=_ref2.halfCheckedKeys,dragOverNodeKey=_ref2.dragOverNodeKey,dropPosition=_ref2.dropPosition,keyEntities=_ref2.keyEntities,entity=keyEntities[key],treeNodeProps={eventKey:key,expanded:-1!==expandedKeys.indexOf(key),selected:-1!==selectedKeys.indexOf(key),loaded:-1!==loadedKeys.indexOf(key),loading:-1!==loadingKeys.indexOf(key),checked:-1!==checkedKeys.indexOf(key),halfChecked:-1!==halfCheckedKeys.indexOf(key),pos:(entity?entity.pos:"")+"",dragOver:dragOverNodeKey===key&&0===dropPosition,dragOverGapTop:dragOverNodeKey===key&&-1===dropPosition,dragOverGapBottom:dragOverNodeKey===key&&1===dropPosition};return treeNodeProps}export function convertNodePropsToEventData(props){var data=props.data,expanded=props.expanded,selected=props.selected,checked=props.checked,loaded=props.loaded,loading=props.loading,halfChecked=props.halfChecked,dragOver=props.dragOver,dragOverGapTop=props.dragOverGapTop,dragOverGapBottom=props.dragOverGapBottom,pos=props.pos,active=props.active,eventData=_objectSpread(_objectSpread({},data),{},{expanded:expanded,selected:selected,checked:checked,loaded:loaded,loading:loading,halfChecked:halfChecked,dragOver:dragOver,dragOverGapTop:dragOverGapTop,dragOverGapBottom:dragOverGapBottom,pos:pos,active:active});return"props"in eventData||Object.defineProperty(eventData,"props",{get:function get(){return warning(!1,"Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`."),props}}),eventData}