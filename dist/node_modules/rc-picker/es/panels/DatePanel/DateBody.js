import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import React from"c:\\node_modules\\react\\index.js";import{WEEK_DAY_COUNT,getWeekStartDate,isSameDate,isSameMonth,formatValue}from"/node_modules/rc-picker/es/utils/dateUtil.js";import RangeContext from"/node_modules/rc-picker/es/RangeContext.js";import useCellClassName from"/node_modules/rc-picker/es/hooks/useCellClassName.js";import PanelBody from"/node_modules/rc-picker/es/panels/PanelBody.js";function DateBody(props){var prefixCls=props.prefixCls,generateConfig=props.generateConfig,prefixColumn=props.prefixColumn,locale=props.locale,rowCount=props.rowCount,viewDate=props.viewDate,value=props.value,dateRender=props.dateRender,_React$useContext=React.useContext(RangeContext),rangedValue=_React$useContext.rangedValue,hoverRangedValue=_React$useContext.hoverRangedValue,baseDate=getWeekStartDate(locale.locale,generateConfig,viewDate),cellPrefixCls="".concat(prefixCls,"-cell"),weekFirstDay=generateConfig.locale.getWeekFirstDay(locale.locale),today=generateConfig.getNow(),headerCells=[],weekDaysLocale=locale.shortWeekDays||(generateConfig.locale.getShortWeekDays?generateConfig.locale.getShortWeekDays(locale.locale):[]);prefixColumn&&headerCells.push(React.createElement("th",{key:"empty","aria-label":"empty cell"}));for(var i=0;i<WEEK_DAY_COUNT;i+=1)headerCells.push(React.createElement("th",{key:i},weekDaysLocale[(i+weekFirstDay)%WEEK_DAY_COUNT]));var getCellClassName=useCellClassName({cellPrefixCls:cellPrefixCls,today:today,value:value,generateConfig:generateConfig,rangedValue:prefixColumn?null:rangedValue,hoverRangedValue:prefixColumn?null:hoverRangedValue,isSameCell:function isSameCell(current,target){return isSameDate(generateConfig,current,target)},isInView:function isInView(date){return isSameMonth(generateConfig,date,viewDate)},offsetCell:function offsetCell(date,offset){return generateConfig.addDate(date,offset)}}),getCellNode=dateRender?function(date){return dateRender(date,today)}:void 0;return React.createElement(PanelBody,_extends({},props,{rowNum:rowCount,colNum:WEEK_DAY_COUNT,baseDate:baseDate,getCellNode:getCellNode,getCellText:generateConfig.getDate,getCellClassName:getCellClassName,getCellDate:generateConfig.addDate,titleCell:function titleCell(date){return formatValue(date,{locale:locale,format:"YYYY-MM-DD",generateConfig:generateConfig})},headerCells:headerCells}))}export default DateBody;