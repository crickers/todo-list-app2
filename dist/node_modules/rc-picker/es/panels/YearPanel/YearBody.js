import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import React from"c:\\node_modules\\react\\index.js";import{YEAR_DECADE_COUNT}from"c:\\node_modules\\index.js";import useCellClassName from"/node_modules/rc-picker/es/hooks/useCellClassName.js";import{formatValue,isSameYear}from"/node_modules/rc-picker/es/utils/dateUtil.js";import RangeContext from"/node_modules/rc-picker/es/RangeContext.js";import PanelBody from"/node_modules/rc-picker/es/panels/PanelBody.js";export var YEAR_COL_COUNT=3;var YEAR_ROW_COUNT=4;function YearBody(props){var prefixCls=props.prefixCls,value=props.value,viewDate=props.viewDate,locale=props.locale,generateConfig=props.generateConfig,_React$useContext=React.useContext(RangeContext),rangedValue=_React$useContext.rangedValue,hoverRangedValue=_React$useContext.hoverRangedValue,yearPrefixCls="".concat(prefixCls,"-cell"),yearNumber=generateConfig.getYear(viewDate),startYear=Math.floor(yearNumber/YEAR_DECADE_COUNT)*YEAR_DECADE_COUNT,baseYear=generateConfig.setYear(viewDate,startYear-Math.ceil((YEAR_COL_COUNT*YEAR_ROW_COUNT-YEAR_DECADE_COUNT)/2)),getCellClassName=useCellClassName({cellPrefixCls:yearPrefixCls,value:value,generateConfig:generateConfig,rangedValue:rangedValue,hoverRangedValue:hoverRangedValue,isSameCell:function isSameCell(current,target){return isSameYear(generateConfig,current,target)},isInView:function isInView(date){var currentYearNumber=generateConfig.getYear(date);return startYear<=currentYearNumber&&currentYearNumber<=startYear+YEAR_DECADE_COUNT-1},offsetCell:function offsetCell(date,offset){return generateConfig.addYear(date,offset)}});return React.createElement(PanelBody,_extends({},props,{rowNum:YEAR_ROW_COUNT,colNum:YEAR_COL_COUNT,baseDate:baseYear,getCellText:generateConfig.getYear,getCellClassName:getCellClassName,getCellDate:generateConfig.addYear,titleCell:function titleCell(date){return formatValue(date,{locale:locale,format:"YYYY",generateConfig:generateConfig})}}))}export default YearBody;