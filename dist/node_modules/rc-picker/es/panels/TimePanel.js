import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import TimeHeader from"/node_modules/rc-picker/es/panels/TimePanel/TimeHeader.js";import TimeBody from"/node_modules/rc-picker/es/panels/TimePanel/TimeBody.js";import{createKeyDownHandler}from"/node_modules/rc-picker/es/utils/uiUtil.js";var countBoolean=function countBoolean(boolList){return boolList.filter(function(bool){return!1!==bool}).length};function TimePanel(props){var generateConfig=props.generateConfig,_props$format=props.format,format=void 0===_props$format?"HH:mm:ss":_props$format,prefixCls=props.prefixCls,active=props.active,operationRef=props.operationRef,showHour=props.showHour,showMinute=props.showMinute,showSecond=props.showSecond,_props$use12Hours=props.use12Hours,use12Hours=void 0!==_props$use12Hours&&_props$use12Hours,onSelect=props.onSelect,value=props.value,panelPrefixCls="".concat(prefixCls,"-time-panel"),bodyOperationRef=React.useRef(),_React$useState=React.useState(-1),_React$useState2=_slicedToArray(_React$useState,2),activeColumnIndex=_React$useState2[0],setActiveColumnIndex=_React$useState2[1],columnsCount=countBoolean([showHour,showMinute,showSecond,use12Hours]);return operationRef.current={onKeyDown:function onKeyDown(event){return createKeyDownHandler(event,{onLeftRight:function onLeftRight(diff){setActiveColumnIndex((activeColumnIndex+diff+columnsCount)%columnsCount)},onUpDown:function onUpDown(diff){-1===activeColumnIndex?setActiveColumnIndex(0):bodyOperationRef.current&&bodyOperationRef.current.onUpDown(diff)},onEnter:function onEnter(){onSelect(value||generateConfig.getNow(),"key"),setActiveColumnIndex(-1)}})},onBlur:function onBlur(){setActiveColumnIndex(-1)}},React.createElement("div",{className:classNames(panelPrefixCls,_defineProperty({},"".concat(panelPrefixCls,"-active"),active))},React.createElement(TimeHeader,_extends({},props,{format:format,prefixCls:prefixCls})),React.createElement(TimeBody,_extends({},props,{prefixCls:prefixCls,activeColumnIndex:activeColumnIndex,operationRef:bodyOperationRef})))}export default TimePanel;