import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import warning from"/node_modules/rc-util/es/warning.js";import useMergedState from"/node_modules/rc-util/es/hooks/useMergedState.js";import PickerPanel from"/node_modules/rc-picker/es/PickerPanel.js";import PickerTrigger from"/node_modules/rc-picker/es/PickerTrigger.js";import{formatValue,isEqual,parseValue}from"/node_modules/rc-picker/es/utils/dateUtil.js";import getDataOrAriaProps,{toArray}from"/node_modules/rc-picker/es/utils/miscUtil.js";import PanelContext from"/node_modules/rc-picker/es/PanelContext.js";import{getDefaultFormat,getInputSize,elementsContains}from"/node_modules/rc-picker/es/utils/uiUtil.js";import usePickerInput from"/node_modules/rc-picker/es/hooks/usePickerInput.js";import useTextValueMapping from"/node_modules/rc-picker/es/hooks/useTextValueMapping.js";import useValueTexts from"/node_modules/rc-picker/es/hooks/useValueTexts.js";import useHoverValue from"/node_modules/rc-picker/es/hooks/useHoverValue.js";function InnerPicker(props){var _classNames2,_props$prefixCls=props.prefixCls,prefixCls=void 0===_props$prefixCls?"rc-picker":_props$prefixCls,id=props.id,tabIndex=props.tabIndex,style=props.style,className=props.className,dropdownClassName=props.dropdownClassName,dropdownAlign=props.dropdownAlign,popupStyle=props.popupStyle,transitionName=props.transitionName,generateConfig=props.generateConfig,locale=props.locale,inputReadOnly=props.inputReadOnly,allowClear=props.allowClear,autoFocus=props.autoFocus,showTime=props.showTime,_props$picker=props.picker,picker=void 0===_props$picker?"date":_props$picker,format=props.format,use12Hours=props.use12Hours,value=props.value,defaultValue=props.defaultValue,open=props.open,defaultOpen=props.defaultOpen,defaultOpenValue=props.defaultOpenValue,suffixIcon=props.suffixIcon,clearIcon=props.clearIcon,disabled=props.disabled,disabledDate=props.disabledDate,placeholder=props.placeholder,getPopupContainer=props.getPopupContainer,pickerRef=props.pickerRef,panelRender=props.panelRender,onChange=props.onChange,onOpenChange=props.onOpenChange,onFocus=props.onFocus,onBlur=props.onBlur,onMouseDown=props.onMouseDown,onMouseUp=props.onMouseUp,onMouseEnter=props.onMouseEnter,onMouseLeave=props.onMouseLeave,onContextMenu=props.onContextMenu,onClick=props.onClick,_onKeyDown=props.onKeyDown,_onSelect=props.onSelect,direction=props.direction,_props$autoComplete=props.autoComplete,autoComplete=void 0===_props$autoComplete?"off":_props$autoComplete,inputRef=React.useRef(null),needConfirmButton="date"===picker&&!!showTime||"time"===picker,formatList=toArray(getDefaultFormat(format,picker,showTime,use12Hours)),panelDivRef=React.useRef(null),inputDivRef=React.useRef(null),_useMergedState=useMergedState(null,{value:value,defaultValue:defaultValue}),_useMergedState2=_slicedToArray(_useMergedState,2),mergedValue=_useMergedState2[0],setInnerValue=_useMergedState2[1],_React$useState=React.useState(mergedValue),_React$useState2=_slicedToArray(_React$useState,2),selectedValue=_React$useState2[0],setSelectedValue=_React$useState2[1],operationRef=React.useRef(null),_useMergedState3=useMergedState(!1,{value:open,defaultValue:defaultOpen,postState:function postState(postOpen){return!disabled&&postOpen},onChange:function onChange(newOpen){onOpenChange&&onOpenChange(newOpen),!newOpen&&operationRef.current&&operationRef.current.onClose&&operationRef.current.onClose()}}),_useMergedState4=_slicedToArray(_useMergedState3,2),mergedOpen=_useMergedState4[0],triggerInnerOpen=_useMergedState4[1],_useValueTexts=useValueTexts(selectedValue,{formatList:formatList,generateConfig:generateConfig,locale:locale}),_useValueTexts2=_slicedToArray(_useValueTexts,2),valueTexts=_useValueTexts2[0],firstValueText=_useValueTexts2[1],_useTextValueMapping=useTextValueMapping({valueTexts:valueTexts,onTextChange:function onTextChange(newText){var inputDate=parseValue(newText,{locale:locale,formatList:formatList,generateConfig:generateConfig});!inputDate||disabledDate&&disabledDate(inputDate)||setSelectedValue(inputDate)}}),_useTextValueMapping2=_slicedToArray(_useTextValueMapping,3),text=_useTextValueMapping2[0],triggerTextChange=_useTextValueMapping2[1],resetText=_useTextValueMapping2[2],triggerChange=function triggerChange(newValue){setSelectedValue(newValue),setInnerValue(newValue),onChange&&!isEqual(generateConfig,mergedValue,newValue)&&onChange(newValue,newValue?formatValue(newValue,{generateConfig:generateConfig,locale:locale,format:formatList[0]}):"")},triggerOpen=function triggerOpen(newOpen){disabled&&newOpen||triggerInnerOpen(newOpen)},_usePickerInput=usePickerInput({blurToCancel:needConfirmButton,open:mergedOpen,value:text,triggerOpen:triggerOpen,forwardKeyDown:function forwardKeyDown(e){return mergedOpen&&operationRef.current&&operationRef.current.onKeyDown?operationRef.current.onKeyDown(e):(warning(!1,"Picker not correct forward KeyDown operation. Please help to fire issue about this."),!1)},isClickOutside:function isClickOutside(target){return!elementsContains([panelDivRef.current,inputDivRef.current],target)},onSubmit:function onSubmit(){return!(disabledDate&&disabledDate(selectedValue))&&(triggerChange(selectedValue),triggerOpen(!1),resetText(),!0)},onCancel:function onCancel(){triggerOpen(!1),setSelectedValue(mergedValue),resetText()},onKeyDown:function onKeyDown(e,preventDefault){null===_onKeyDown||void 0===_onKeyDown?void 0:_onKeyDown(e,preventDefault)},onFocus:onFocus,onBlur:onBlur}),_usePickerInput2=_slicedToArray(_usePickerInput,2),inputProps=_usePickerInput2[0],_usePickerInput2$=_usePickerInput2[1],focused=_usePickerInput2$.focused,typing=_usePickerInput2$.typing;React.useEffect(function(){mergedOpen||(setSelectedValue(mergedValue),valueTexts.length&&""!==valueTexts[0]?firstValueText!==text&&resetText():triggerTextChange(""))},[mergedOpen,valueTexts]),React.useEffect(function(){mergedOpen||resetText()},[picker]),React.useEffect(function(){setSelectedValue(mergedValue)},[mergedValue]),pickerRef&&(pickerRef.current={focus:function focus(){inputRef.current&&inputRef.current.focus()},blur:function blur(){inputRef.current&&inputRef.current.blur()}});var _useHoverValue=useHoverValue(text,{formatList:formatList,generateConfig:generateConfig,locale:locale}),_useHoverValue2=_slicedToArray(_useHoverValue,3),hoverValue=_useHoverValue2[0],onEnter=_useHoverValue2[1],onLeave=_useHoverValue2[2],panelProps=_objectSpread(_objectSpread({},props),{},{className:void 0,style:void 0,pickerValue:void 0,onPickerValueChange:void 0,onChange:null}),panelNode=React.createElement(PickerPanel,_extends({},panelProps,{generateConfig:generateConfig,className:classNames(_defineProperty({},"".concat(prefixCls,"-panel-focused"),!typing)),value:selectedValue,locale:locale,tabIndex:-1,onSelect:function onSelect(date){null===_onSelect||void 0===_onSelect?void 0:_onSelect(date),setSelectedValue(date)},direction:direction,onPanelChange:function onPanelChange(viewDate,mode){var onPanelChange=props.onPanelChange;onLeave(!0),null===onPanelChange||void 0===onPanelChange?void 0:onPanelChange(viewDate,mode)}}));panelRender&&(panelNode=panelRender(panelNode));var suffixNode,panel=React.createElement("div",{className:"".concat(prefixCls,"-panel-container"),onMouseDown:function onMouseDown(e){e.preventDefault()}},panelNode);suffixIcon&&(suffixNode=React.createElement("span",{className:"".concat(prefixCls,"-suffix")},suffixIcon));var clearNode;allowClear&&mergedValue&&!disabled&&(clearNode=React.createElement("span",{onMouseDown:function onMouseDown(e){e.preventDefault(),e.stopPropagation()},onMouseUp:function onMouseUp(e){e.preventDefault(),e.stopPropagation(),triggerChange(null),triggerOpen(!1)},className:"".concat(prefixCls,"-clear")},clearIcon||React.createElement("span",{className:"".concat(prefixCls,"-clear-btn")})));var popupPlacement="rtl"===direction?"bottomRight":"bottomLeft";return React.createElement(PanelContext.Provider,{value:{operationRef:operationRef,hideHeader:"time"===picker,panelRef:panelDivRef,onSelect:function onContextSelect(date,type){"submit"!==type&&("key"===type||needConfirmButton)||(triggerChange(date),triggerOpen(!1))},open:mergedOpen,defaultOpenValue:defaultOpenValue,onDateMouseEnter:onEnter,onDateMouseLeave:onLeave}},React.createElement(PickerTrigger,{visible:mergedOpen,popupElement:panel,popupStyle:popupStyle,prefixCls:prefixCls,dropdownClassName:dropdownClassName,dropdownAlign:dropdownAlign,getPopupContainer:getPopupContainer,transitionName:transitionName,popupPlacement:popupPlacement,direction:direction},React.createElement("div",{className:classNames(prefixCls,className,(_classNames2={},_defineProperty(_classNames2,"".concat(prefixCls,"-disabled"),disabled),_defineProperty(_classNames2,"".concat(prefixCls,"-focused"),focused),_defineProperty(_classNames2,"".concat(prefixCls,"-rtl"),"rtl"===direction),_classNames2)),style:style,onMouseDown:onMouseDown,onMouseUp:function onInternalMouseUp(){onMouseUp&&onMouseUp.apply(void 0,arguments),inputRef.current&&(inputRef.current.focus(),triggerOpen(!0))},onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave,onContextMenu:onContextMenu,onClick:onClick},React.createElement("div",{className:classNames("".concat(prefixCls,"-input"),_defineProperty({},"".concat(prefixCls,"-input-placeholder"),!!hoverValue)),ref:inputDivRef},React.createElement("input",_extends({id:id,tabIndex:tabIndex,disabled:disabled,readOnly:inputReadOnly||"function"==typeof formatList[0]||!typing,value:hoverValue||text,onChange:function onChange(e){triggerTextChange(e.target.value)},autoFocus:autoFocus,placeholder:placeholder,ref:inputRef,title:text},inputProps,{size:getInputSize(picker,formatList[0],generateConfig)},getDataOrAriaProps(props),{autoComplete:autoComplete})),suffixNode,clearNode))))}var Picker=function(_React$Component){function Picker(){var _this;return _classCallCheck(this,Picker),_this=_super.apply(this,arguments),_this.pickerRef=React.createRef(),_this.focus=function(){_this.pickerRef.current&&_this.pickerRef.current.focus()},_this.blur=function(){_this.pickerRef.current&&_this.pickerRef.current.blur()},_this}_inherits(Picker,_React$Component);var _super=_createSuper(Picker);return _createClass(Picker,[{key:"render",value:function render(){return React.createElement(InnerPicker,_extends({},this.props,{pickerRef:this.pickerRef}))}}]),Picker}(React.Component);export default Picker;