import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.slice.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import{tuple}from"/node_modules/antd/es/_util/type.js";import Pagination from"/node_modules/antd/es/pagination.js";import ListItem from"/node_modules/antd/es/transfer/ListItem.js";export var OmitProps=tuple("handleFilter","handleClear","checkedKeys");function parsePagination(pagination){if(!pagination)return null;var defaultPagination={pageSize:10};return"object"===_typeof(pagination)?_extends(_extends({},defaultPagination),pagination):defaultPagination}var ListBody=function(_React$Component){function ListBody(){var _this;return _classCallCheck(this,ListBody),_this=_super.apply(this,arguments),_this.state={current:1},_this.onItemSelect=function(item){var _this$props=_this.props,onItemSelect=_this$props.onItemSelect,selectedKeys=_this$props.selectedKeys,checked=0<=selectedKeys.indexOf(item.key);onItemSelect(item.key,!checked)},_this.onItemRemove=function(item){var onItemRemove=_this.props.onItemRemove;null===onItemRemove||void 0===onItemRemove?void 0:onItemRemove([item.key])},_this.onPageChange=function(current){_this.setState({current:current})},_this.getItems=function(){var current=_this.state.current,_this$props2=_this.props,pagination=_this$props2.pagination,filteredRenderItems=_this$props2.filteredRenderItems,mergedPagination=parsePagination(pagination),displayItems=filteredRenderItems;return mergedPagination&&(displayItems=filteredRenderItems.slice((current-1)*mergedPagination.pageSize,current*mergedPagination.pageSize)),displayItems},_this}_inherits(ListBody,_React$Component);var _super=_createSuper(ListBody);return _createClass(ListBody,[{key:"render",value:function render(){var _this2=this,current=this.state.current,_this$props3=this.props,prefixCls=_this$props3.prefixCls,onScroll=_this$props3.onScroll,filteredRenderItems=_this$props3.filteredRenderItems,selectedKeys=_this$props3.selectedKeys,globalDisabled=_this$props3.disabled,showRemove=_this$props3.showRemove,pagination=_this$props3.pagination,mergedPagination=parsePagination(pagination),paginationNode=null;return mergedPagination&&(paginationNode=React.createElement(Pagination,{simple:!0,size:"small",disabled:globalDisabled,className:"".concat(prefixCls,"-pagination"),total:filteredRenderItems.length,pageSize:mergedPagination.pageSize,current:current,onChange:this.onPageChange})),React.createElement(React.Fragment,null,React.createElement("ul",{className:classNames("".concat(prefixCls,"-content"),_defineProperty({},"".concat(prefixCls,"-content-show-remove"),showRemove)),onScroll:onScroll},this.getItems().map(function(_ref){var renderedEl=_ref.renderedEl,renderedText=_ref.renderedText,item=_ref.item,disabled=item.disabled,checked=0<=selectedKeys.indexOf(item.key);return React.createElement(ListItem,{disabled:globalDisabled||disabled,key:item.key,item:item,renderedText:renderedText,renderedEl:renderedEl,checked:checked,prefixCls:prefixCls,onClick:_this2.onItemSelect,onRemove:_this2.onItemRemove,showRemove:showRemove})})),paginationNode)}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(_ref2,_ref3){var filteredRenderItems=_ref2.filteredRenderItems,pagination=_ref2.pagination,current=_ref3.current,mergedPagination=parsePagination(pagination);if(mergedPagination){var maxPageCount=Math.ceil(filteredRenderItems.length/mergedPagination.pageSize);if(current>maxPageCount)return{current:maxPageCount}}return null}}]),ListBody}(React.Component);export default ListBody;