import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/esnext.map.delete-all.js";import"/node_modules/core-js/modules/esnext.map.every.js";import"/node_modules/core-js/modules/esnext.map.filter.js";import"/node_modules/core-js/modules/esnext.map.find.js";import"/node_modules/core-js/modules/esnext.map.find-key.js";import"/node_modules/core-js/modules/esnext.map.includes.js";import"/node_modules/core-js/modules/esnext.map.key-of.js";import"/node_modules/core-js/modules/esnext.map.map-keys.js";import"/node_modules/core-js/modules/esnext.map.map-values.js";import"/node_modules/core-js/modules/esnext.map.merge.js";import"/node_modules/core-js/modules/esnext.map.reduce.js";import"/node_modules/core-js/modules/esnext.map.some.js";import"/node_modules/core-js/modules/esnext.map.update.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";export var responsiveArray=["xxl","xl","lg","md","sm","xs"];export var responsiveMap={xs:"(max-width: 575px)",sm:"(min-width: 576px)",md:"(min-width: 768px)",lg:"(min-width: 992px)",xl:"(min-width: 1200px)",xxl:"(min-width: 1600px)"};var subscribers=new Map,subUid=-1,screens={},responsiveObserve={matchHandlers:{},dispatch:function dispatch(pointMap){return screens=pointMap,subscribers.forEach(function(func){return func(screens)}),1<=subscribers.size},subscribe:function subscribe(func){return subscribers.size||this.register(),subUid+=1,subscribers.set(subUid,func),func(screens),subUid},unsubscribe:function unsubscribe(token){subscribers["delete"](token),subscribers.size||this.unregister()},unregister:function unregister(){var _this=this;Object.keys(responsiveMap).forEach(function(screen){var matchMediaQuery=responsiveMap[screen],handler=_this.matchHandlers[matchMediaQuery];null===handler||void 0===handler?void 0:handler.mql.removeListener(null===handler||void 0===handler?void 0:handler.listener)}),subscribers.clear()},register:function register(){var _this2=this;Object.keys(responsiveMap).forEach(function(screen){var matchMediaQuery=responsiveMap[screen],listener=function listener(_ref){var matches=_ref.matches;_this2.dispatch(_extends(_extends({},screens),_defineProperty({},screen,matches)))},mql=window.matchMedia(matchMediaQuery);mql.addListener(listener),_this2.matchHandlers[matchMediaQuery]={mql:mql,listener:listener},listener(mql)})}};export default responsiveObserve;