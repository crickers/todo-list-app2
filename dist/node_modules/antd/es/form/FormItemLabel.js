import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.string.replace.js";import"/node_modules/core-js/modules/es.string.trim.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import QuestionCircleOutlined from"/node_modules/@ant-design/icons/es/icons/QuestionCircleOutlined.js";import Col from"/node_modules/antd/es/grid/col.js";import{FormContext}from"/node_modules/antd/es/form/context.js";import{useLocaleReceiver}from"/node_modules/antd/es/locale-provider/LocaleReceiver.js";import defaultLocale from"/node_modules/antd/es/locale/default.js";import Tooltip from"/node_modules/antd/es/tooltip.js";function toTooltipProps(tooltip){return tooltip?"object"!==_typeof(tooltip)||React.isValidElement(tooltip)?{title:tooltip}:tooltip:null}var FormItemLabel=function FormItemLabel(_ref){var prefixCls=_ref.prefixCls,label=_ref.label,htmlFor=_ref.htmlFor,labelCol=_ref.labelCol,labelAlign=_ref.labelAlign,colon=_ref.colon,required=_ref.required,requiredMark=_ref.requiredMark,tooltip=_ref.tooltip,_useLocaleReceiver=useLocaleReceiver("Form"),_useLocaleReceiver2=_slicedToArray(_useLocaleReceiver,1),formLocale=_useLocaleReceiver2[0];return label?React.createElement(FormContext.Consumer,{key:"label"},function(_ref2){var _classNames,_a,vertical=_ref2.vertical,contextLabelAlign=_ref2.labelAlign,contextLabelCol=_ref2.labelCol,contextColon=_ref2.colon,mergedLabelCol=labelCol||contextLabelCol||{},labelClsBasic="".concat(prefixCls,"-item-label"),labelColClassName=classNames(labelClsBasic,"left"===(labelAlign||contextLabelAlign)&&"".concat(labelClsBasic,"-left"),mergedLabelCol.className),labelChildren=label,computedColon=!0===colon||!1!==contextColon&&!1!==colon;computedColon&&!vertical&&"string"==typeof label&&""!==label.trim()&&(labelChildren=label.replace(/[:|ï¼š]\s*$/,""));var tooltipProps=toTooltipProps(tooltip);if(tooltipProps){var _tooltipProps$icon=tooltipProps.icon,icon=void 0===_tooltipProps$icon?React.createElement(QuestionCircleOutlined,null):_tooltipProps$icon,restTooltipProps=__rest(tooltipProps,["icon"]),tooltipNode=React.createElement(Tooltip,restTooltipProps,React.cloneElement(icon,{className:"".concat(prefixCls,"-item-tooltip")}));labelChildren=React.createElement(React.Fragment,null,labelChildren,tooltipNode)}"optional"!==requiredMark||required||(labelChildren=React.createElement(React.Fragment,null,labelChildren,React.createElement("span",{className:"".concat(prefixCls,"-item-optional")},(null===formLocale||void 0===formLocale?void 0:formLocale.optional)||(null===(_a=defaultLocale.Form)||void 0===_a?void 0:_a.optional))));var labelClassName=classNames((_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-item-required"),required),_defineProperty(_classNames,"".concat(prefixCls,"-item-required-mark-optional"),"optional"===requiredMark),_defineProperty(_classNames,"".concat(prefixCls,"-item-no-colon"),!computedColon),_classNames));return React.createElement(Col,_extends({},mergedLabelCol,{className:labelColClassName}),React.createElement("label",{htmlFor:htmlFor,className:labelClassName,title:"string"==typeof label?label:""},labelChildren))}):null};export default FormItemLabel;