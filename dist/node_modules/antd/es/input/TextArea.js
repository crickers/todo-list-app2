import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.slice.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import RcTextArea from"/node_modules/rc-textarea.js";import omit from"/node_modules/rc-util/es/omit.js";import classNames from"/node_modules/classnames.js";import useMergedState from"/node_modules/rc-util/es/hooks/useMergedState.js";import ClearableLabeledInput from"/node_modules/antd/es/input/ClearableLabeledInput.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import{fixControlledValue,resolveOnChange,triggerFocus}from"/node_modules/antd/es/input/Input.js";import SizeContext from"/node_modules/antd/es/config-provider/SizeContext.js";var TextArea=React.forwardRef(function(_a,ref){var _classNames,customizePrefixCls=_a.prefixCls,_a$bordered=_a.bordered,bordered=!(void 0!==_a$bordered)||_a$bordered,_a$showCount=_a.showCount,showCount=void 0!==_a$showCount&&_a$showCount,maxLength=_a.maxLength,className=_a.className,style=_a.style,customizeSize=_a.size,props=__rest(_a,["prefixCls","bordered","showCount","maxLength","className","style","size"]),_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,size=React.useContext(SizeContext),innerRef=React.useRef(null),clearableInputRef=React.useRef(null),_useMergedState=useMergedState(props.defaultValue,{value:props.value}),_useMergedState2=_slicedToArray(_useMergedState,2),value=_useMergedState2[0],setValue=_useMergedState2[1],prevValue=React.useRef(props.value);React.useEffect(function(){(props.value!==void 0||prevValue.current!==props.value)&&(setValue(props.value),prevValue.current=props.value)},[props.value,prevValue.current]);var handleSetValue=function handleSetValue(val,callback){props.value===void 0&&(setValue(val),null===callback||void 0===callback?void 0:callback())},prefixCls=getPrefixCls("input",customizePrefixCls);React.useImperativeHandle(ref,function(){var _a;return{resizableTextArea:null===(_a=innerRef.current)||void 0===_a?void 0:_a.resizableTextArea,focus:function focus(option){var _a,_b;triggerFocus(null===(_b=null===(_a=innerRef.current)||void 0===_a?void 0:_a.resizableTextArea)||void 0===_b?void 0:_b.textArea,option)},blur:function blur(){var _a;return null===(_a=innerRef.current)||void 0===_a?void 0:_a.blur()}}});var textArea=React.createElement(RcTextArea,_extends({},omit(props,["allowClear"]),{maxLength:maxLength,className:classNames((_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-borderless"),!bordered),_defineProperty(_classNames,className,className&&!showCount),_defineProperty(_classNames,"".concat(prefixCls,"-sm"),"small"===size||"small"===customizeSize),_defineProperty(_classNames,"".concat(prefixCls,"-lg"),"large"===size||"large"===customizeSize),_classNames)),style:showCount?void 0:style,prefixCls:prefixCls,onChange:function handleChange(e){handleSetValue(e.target.value),resolveOnChange(innerRef.current,e,props.onChange)},ref:innerRef})),val=fixControlledValue(value),hasMaxLength=0<+maxLength;val=hasMaxLength?_toConsumableArray(val).slice(0,maxLength).join(""):val;var textareaNode=React.createElement(ClearableLabeledInput,_extends({},props,{prefixCls:prefixCls,direction:direction,inputType:"text",value:val,element:textArea,handleReset:function handleReset(e){handleSetValue("",function(){var _a;null===(_a=innerRef.current)||void 0===_a?void 0:_a.focus()}),resolveOnChange(innerRef.current,e,props.onChange)},ref:clearableInputRef,bordered:bordered}));if(showCount){var valueLength=_toConsumableArray(val).length,dataCount="";return dataCount="object"===_typeof(showCount)?showCount.formatter({count:valueLength,maxLength:maxLength}):"".concat(valueLength).concat(hasMaxLength?" / ".concat(maxLength):""),React.createElement("div",{className:classNames("".concat(prefixCls,"-textarea"),_defineProperty({},"".concat(prefixCls,"-textarea-rtl"),"rtl"===direction),"".concat(prefixCls,"-textarea-show-count"),className),style:style,"data-count":dataCount},textareaNode)}return textareaNode});export default TextArea;