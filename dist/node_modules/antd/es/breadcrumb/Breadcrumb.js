import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.regexp.constructor.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import"/node_modules/core-js/modules/es.string.replace.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import toArray from"/node_modules/rc-util/es/Children/toArray.js";import BreadcrumbItem from"/node_modules/antd/es/breadcrumb/BreadcrumbItem.js";import BreadcrumbSeparator from"/node_modules/antd/es/breadcrumb/BreadcrumbSeparator.js";import Menu from"/node_modules/antd/es/menu.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import devWarning from"/node_modules/antd/es/_util/devWarning.js";import{cloneElement}from"/node_modules/antd/es/_util/reactNode.js";function getBreadcrumbName(route,params){if(!route.breadcrumbName)return null;var paramsKeys=Object.keys(params).join("|"),name=route.breadcrumbName.replace(new RegExp(":(".concat(paramsKeys,")"),"g"),function(replacement,key){return params[key]||replacement});return name}function defaultItemRender(route,params,routes,paths){var isLastItem=routes.indexOf(route)===routes.length-1,name=getBreadcrumbName(route,params);return isLastItem?React.createElement("span",null,name):React.createElement("a",{href:"#/".concat(paths.join("/"))},name)}var getPath=function getPath(path,params){return path=(path||"").replace(/^\//,""),Object.keys(params).forEach(function(key){path=path.replace(":".concat(key),params[key])}),path},addChildPath=function addChildPath(paths){var childPath=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"",params=2<arguments.length?arguments[2]:void 0,originalPaths=_toConsumableArray(paths),path=getPath(childPath,params);return path&&originalPaths.push(path),originalPaths},Breadcrumb=function Breadcrumb(_a){var crumbs,customizePrefixCls=_a.prefixCls,_a$separator=_a.separator,separator=void 0===_a$separator?"/":_a$separator,style=_a.style,className=_a.className,routes=_a.routes,children=_a.children,_a$itemRender=_a.itemRender,itemRender=void 0===_a$itemRender?defaultItemRender:_a$itemRender,_a$params=_a.params,params=void 0===_a$params?{}:_a$params,restProps=__rest(_a,["prefixCls","separator","style","className","routes","children","itemRender","params"]),_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,prefixCls=getPrefixCls("breadcrumb",customizePrefixCls);if(routes&&0<routes.length){var paths=[];crumbs=routes.map(function(route){var path=getPath(route.path,params);path&&paths.push(path);var overlay;return route.children&&route.children.length&&(overlay=React.createElement(Menu,null,route.children.map(function(child){return React.createElement(Menu.Item,{key:child.path||child.breadcrumbName},itemRender(child,params,routes,addChildPath(paths,child.path,params)))}))),React.createElement(BreadcrumbItem,{overlay:overlay,separator:separator,key:path||route.breadcrumbName},itemRender(route,params,routes,paths))})}else children&&(crumbs=toArray(children).map(function(element,index){return element?(devWarning(element.type&&(!0===element.type.__ANT_BREADCRUMB_ITEM||!0===element.type.__ANT_BREADCRUMB_SEPARATOR),"Breadcrumb","Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children"),cloneElement(element,{separator:separator,key:index})):element}));var breadcrumbClassName=classNames(prefixCls,_defineProperty({},"".concat(prefixCls,"-rtl"),"rtl"===direction),className);return React.createElement("div",_extends({className:breadcrumbClassName,style:style},restProps),crumbs)};Breadcrumb.Item=BreadcrumbItem,Breadcrumb.Separator=BreadcrumbSeparator;export default Breadcrumb;