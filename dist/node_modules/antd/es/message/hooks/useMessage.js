import"/node_modules/core-js/modules/es.promise.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import useRCNotification from"/node_modules/rc-notification/es/useNotification.js";import{ConfigConsumer}from"/node_modules/antd/es/config-provider.js";import{attachTypeApi,getKeyThenIncreaseKey}from"c:\\index.js";export default function createUseMessage(getRcNotificationInstance,getRCNoticeProps){return function useMessage(){function notify(args){var customizePrefixCls=args.prefixCls,mergedPrefixCls=getPrefixCls("message",customizePrefixCls),target=args.key||getKeyThenIncreaseKey(),closePromise=new Promise(function(resolve){var callback=function callback(){return"function"==typeof args.onClose&&args.onClose(),resolve(!0)};getRcNotificationInstance(_extends(_extends({},args),{prefixCls:mergedPrefixCls}),function(_ref){var prefixCls=_ref.prefixCls,instance=_ref.instance;innerInstance=instance,hookNotify(getRCNoticeProps(_extends(_extends({},args),{key:target,onClose:callback}),prefixCls))})}),result=function result(){innerInstance&&innerInstance.removeNotice(target)};return result.then=function(filled,rejected){return closePromise.then(filled,rejected)},result.promise=closePromise,result}var getPrefixCls,innerInstance=null,_useRCNotification=useRCNotification({add:function add(noticeProps,holderCallback){null===innerInstance||void 0===innerInstance?void 0:innerInstance.component.add(noticeProps,holderCallback)}}),_useRCNotification2=_slicedToArray(_useRCNotification,2),hookNotify=_useRCNotification2[0],holder=_useRCNotification2[1],hookApiRef=React.useRef({});return hookApiRef.current.open=notify,["success","info","warning","error","loading"].forEach(function(type){return attachTypeApi(hookApiRef.current,type)}),[hookApiRef.current,React.createElement(ConfigConsumer,{key:"holder"},function(context){return getPrefixCls=context.getPrefixCls,holder})]}}