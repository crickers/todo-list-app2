import"/node_modules/core-js/modules/es.array.index-of.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";var _this=this,__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import ExclamationCircleFilled from"/node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js";import KeyCode from"/node_modules/rc-util/es/KeyCode.js";import Tooltip from"/node_modules/antd/es/tooltip.js";import Button from"/node_modules/antd/es/button.js";import{convertLegacyProps}from"/node_modules/antd/es/button/button.js";import LocaleReceiver from"/node_modules/antd/es/locale-provider/LocaleReceiver.js";import defaultLocale from"/node_modules/antd/es/locale/default.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import{getRenderPropValue}from"/node_modules/antd/es/_util/getRenderPropValue.js";import{cloneElement}from"/node_modules/antd/es/_util/reactNode.js";var Popconfirm=React.forwardRef(function(props,ref){var _React$useState=React.useState(props.visible),_React$useState2=_slicedToArray(_React$useState,2),visible=_React$useState2[0],setVisible=_React$useState2[1];React.useEffect(function(){"visible"in props&&setVisible(props.visible)},[props.visible]),React.useEffect(function(){"defaultVisible"in props&&setVisible(props.defaultVisible)},[props.defaultVisible]);var settingVisible=function settingVisible(value,e){"visible"in props||setVisible(value),props.onVisibleChange&&props.onVisibleChange(value,e)},onConfirm=function onConfirm(e){settingVisible(!1,e),props.onConfirm&&props.onConfirm.call(_this,e)},onCancel=function onCancel(e){settingVisible(!1,e),props.onCancel&&props.onCancel.call(_this,e)},_onKeyDown=function onKeyDown(e){e.keyCode===KeyCode.ESC&&visible&&settingVisible(!1,e)},renderOverlay=function renderOverlay(prefixCls,popconfirmLocale){var okButtonProps=props.okButtonProps,cancelButtonProps=props.cancelButtonProps,title=props.title,cancelText=props.cancelText,okText=props.okText,okType=props.okType,icon=props.icon;return React.createElement("div",{className:"".concat(prefixCls,"-inner-content")},React.createElement("div",{className:"".concat(prefixCls,"-message")},icon,React.createElement("div",{className:"".concat(prefixCls,"-message-title")},getRenderPropValue(title))),React.createElement("div",{className:"".concat(prefixCls,"-buttons")},React.createElement(Button,_extends({onClick:onCancel,size:"small"},cancelButtonProps),cancelText||popconfirmLocale.cancelText),React.createElement(Button,_extends({onClick:onConfirm},convertLegacyProps(okType),{size:"small"},okButtonProps),okText||popconfirmLocale.okText)))},_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,customizePrefixCls=props.prefixCls,placement=props.placement,children=props.children,overlayClassName=props.overlayClassName,restProps=__rest(props,["prefixCls","placement","children","overlayClassName"]),prefixCls=getPrefixCls("popover",customizePrefixCls),prefixClsConfirm=getPrefixCls("popconfirm",customizePrefixCls),overlayClassNames=classNames(prefixClsConfirm,overlayClassName),overlay=React.createElement(LocaleReceiver,{componentName:"Popconfirm",defaultLocale:defaultLocale.Popconfirm},function(popconfirmLocale){return renderOverlay(prefixCls,popconfirmLocale)});return React.createElement(Tooltip,_extends({},restProps,{prefixCls:prefixCls,placement:placement,onVisibleChange:function onVisibleChange(value){var disabled=props.disabled;disabled||settingVisible(value)},visible:visible,overlay:overlay,overlayClassName:overlayClassNames,ref:ref}),cloneElement(children,{onKeyDown:function onKeyDown(e){var _a,_b;React.isValidElement(children)&&(null===(_b=null===children||void 0===children?void 0:(_a=children.props).onKeyDown)||void 0===_b?void 0:_b.call(_a,e)),_onKeyDown(e)}}))});Popconfirm.defaultProps={transitionName:"zoom-big",placement:"top",trigger:"click",okType:"primary",icon:React.createElement(ExclamationCircleFilled,null),disabled:!1};export default Popconfirm;