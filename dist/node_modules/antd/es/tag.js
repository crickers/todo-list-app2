import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.regexp.constructor.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import omit from"/node_modules/rc-util/es/omit.js";import CloseOutlined from"/node_modules/@ant-design/icons/es/icons/CloseOutlined.js";import CheckableTag from"/node_modules/antd/es/tag/CheckableTag.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import{PresetColorTypes,PresetStatusColorTypes}from"/node_modules/antd/es/_util/colors.js";import Wave from"/node_modules/antd/es/_util/wave.js";var PresetColorRegex=new RegExp("^(".concat(PresetColorTypes.join("|"),")(-inverse)?$")),PresetStatusColorRegex=new RegExp("^(".concat(PresetStatusColorTypes.join("|"),")$")),InternalTag=function InternalTag(_a,ref){var _classNames,customizePrefixCls=_a.prefixCls,className=_a.className,style=_a.style,children=_a.children,icon=_a.icon,color=_a.color,onClose=_a.onClose,closeIcon=_a.closeIcon,_a$closable=_a.closable,closable=void 0!==_a$closable&&_a$closable,props=__rest(_a,["prefixCls","className","style","children","icon","color","onClose","closeIcon","closable"]),_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,_React$useState=React.useState(!0),_React$useState2=_slicedToArray(_React$useState,2),visible=_React$useState2[0],setVisible=_React$useState2[1];React.useEffect(function(){"visible"in props&&setVisible(props.visible)},[props.visible]);var isPresetColor=function isPresetColor(){return!!color&&(PresetColorRegex.test(color)||PresetStatusColorRegex.test(color))},tagStyle=_extends({backgroundColor:color&&!isPresetColor()?color:void 0},style),presetColor=isPresetColor(),prefixCls=getPrefixCls("tag",customizePrefixCls),tagClassName=classNames(prefixCls,(_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-").concat(color),presetColor),_defineProperty(_classNames,"".concat(prefixCls,"-has-color"),color&&!presetColor),_defineProperty(_classNames,"".concat(prefixCls,"-hidden"),!visible),_defineProperty(_classNames,"".concat(prefixCls,"-rtl"),"rtl"===direction),_classNames),className),handleCloseClick=function handleCloseClick(e){e.stopPropagation(),onClose&&onClose(e);e.defaultPrevented||!("visible"in props)&&setVisible(!1)},isNeedWave="onClick"in props||children&&"a"===children.type,tagProps=omit(props,["visible"]),iconNode=icon||null,kids=iconNode?React.createElement(React.Fragment,null,iconNode,React.createElement("span",null,children)):children,tagNode=React.createElement("span",_extends({},tagProps,{ref:ref,className:tagClassName,style:tagStyle}),kids,function renderCloseIcon(){return closable?closeIcon?React.createElement("span",{className:"".concat(prefixCls,"-close-icon"),onClick:handleCloseClick},closeIcon):React.createElement(CloseOutlined,{className:"".concat(prefixCls,"-close-icon"),onClick:handleCloseClick}):null}());return isNeedWave?React.createElement(Wave,null,tagNode):tagNode},Tag=React.forwardRef(InternalTag);Tag.displayName="Tag",Tag.CheckableTag=CheckableTag;export default Tag;