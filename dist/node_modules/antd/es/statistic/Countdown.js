import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import React from"c:\\node_modules\\react\\index.js";import Statistic from"/node_modules/antd/es/statistic/Statistic.js";import{formatCountdown}from"/node_modules/antd/es/statistic/utils.js";import{cloneElement}from"/node_modules/antd/es/_util/reactNode.js";var REFRESH_INTERVAL=1e3/30;function getTime(value){return new Date(value).getTime()}var Countdown=function(_React$Component){function Countdown(){var _this;return _classCallCheck(this,Countdown),_this=_super.apply(this,arguments),_this.syncTimer=function(){var value=_this.props.value,timestamp=getTime(value);timestamp>=Date.now()?_this.startTimer():_this.stopTimer()},_this.startTimer=function(){_this.countdownId||(_this.countdownId=window.setInterval(function(){_this.forceUpdate()},REFRESH_INTERVAL))},_this.stopTimer=function(){var _this$props=_this.props,onFinish=_this$props.onFinish,value=_this$props.value;if(_this.countdownId){clearInterval(_this.countdownId),_this.countdownId=void 0;var timestamp=getTime(value);onFinish&&timestamp<Date.now()&&onFinish()}},_this.formatCountdown=function(value,config){var format=_this.props.format;return formatCountdown(value,_extends(_extends({},config),{format:format}))},_this.valueRender=function(node){return cloneElement(node,{title:void 0})},_this}_inherits(Countdown,_React$Component);var _super=_createSuper(Countdown);return _createClass(Countdown,[{key:"componentDidMount",value:function componentDidMount(){this.syncTimer()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.syncTimer()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.stopTimer()}},{key:"render",value:function render(){return React.createElement(Statistic,_extends({valueRender:this.valueRender},this.props,{formatter:this.formatCountdown}))}}]),Countdown}(React.Component);Countdown.defaultProps={format:"HH:mm:ss"};export default Countdown;