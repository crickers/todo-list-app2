import"/node_modules/core-js/modules/es.object.assign.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import React from"c:\\node_modules\\react\\index.js";import arrayTreeFilter from"/node_modules/array-tree-filter.js";var Menus=function(_React$Component){function Menus(){var _this;return _classCallCheck(this,Menus),_this=_super.apply(this,arguments),_this.menuItems={},_this.saveMenuItem=function(index){return function(node){_this.menuItems[index]=node}},_this}_inherits(Menus,_React$Component);var _super=_createSuper(Menus);return _createClass(Menus,[{key:"componentDidMount",value:function componentDidMount(){this.scrollActiveItemToView()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){!prevProps.visible&&this.props.visible&&this.scrollActiveItemToView()}},{key:"getFieldName",value:function getFieldName(name){var _this$props=this.props,fieldNames=_this$props.fieldNames,defaultFieldNames=_this$props.defaultFieldNames;return fieldNames[name]||defaultFieldNames[name]}},{key:"getOption",value:function getOption(option,menuIndex){var _this$props2=this.props,prefixCls=_this$props2.prefixCls,expandTrigger=_this$props2.expandTrigger,expandIcon=_this$props2.expandIcon,loadingIcon=_this$props2.loadingIcon,onSelect=this.props.onSelect.bind(this,option,menuIndex),onItemDoubleClick=this.props.onItemDoubleClick.bind(this,option,menuIndex),expandProps={onClick:onSelect,onDoubleClick:onItemDoubleClick},menuItemCls="".concat(prefixCls,"-menu-item"),expandIconNode=null,hasChildren=option[this.getFieldName("children")]&&0<option[this.getFieldName("children")].length;(hasChildren||!1===option.isLeaf)&&(menuItemCls+=" ".concat(prefixCls,"-menu-item-expand"),!option.loading&&(expandIconNode=React.createElement("span",{className:"".concat(prefixCls,"-menu-item-expand-icon")},expandIcon))),"hover"===expandTrigger&&(hasChildren||!1===option.isLeaf)&&(expandProps={onMouseEnter:this.delayOnSelect.bind(this,onSelect),onMouseLeave:this.delayOnSelect.bind(this),onClick:onSelect}),this.isActiveOption(option,menuIndex)&&(menuItemCls+=" ".concat(prefixCls,"-menu-item-active"),expandProps.ref=this.saveMenuItem(menuIndex)),option.disabled&&(menuItemCls+=" ".concat(prefixCls,"-menu-item-disabled"));var loadingIconNode=null;option.loading&&(menuItemCls+=" ".concat(prefixCls,"-menu-item-loading"),loadingIconNode=loadingIcon||null);var title="";return"title"in option?title=option.title:"string"==typeof option[this.getFieldName("label")]&&(title=option[this.getFieldName("label")]),React.createElement("li",Object.assign({key:option[this.getFieldName("value")],className:menuItemCls,title:title},expandProps,{role:"menuitem",onMouseDown:function onMouseDown(e){return e.preventDefault()}}),option[this.getFieldName("label")],expandIconNode,loadingIconNode)}},{key:"getActiveOptions",value:function getActiveOptions(values){var _this2=this,options=this.props.options,activeValue=values||this.props.activeValue;return arrayTreeFilter(options,function(o,level){return o[_this2.getFieldName("value")]===activeValue[level]},{childrenKeyName:this.getFieldName("children")})}},{key:"getShowOptions",value:function getShowOptions(){var _this3=this,options=this.props.options,result=this.getActiveOptions().map(function(activeOption){return activeOption[_this3.getFieldName("children")]}).filter(function(activeOption){return!!activeOption});return result.unshift(options),result}},{key:"delayOnSelect",value:function delayOnSelect(onSelect){for(var _this4=this,_len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];this.delayTimer&&(clearTimeout(this.delayTimer),this.delayTimer=null),"function"==typeof onSelect&&(this.delayTimer=window.setTimeout(function(){onSelect(args),_this4.delayTimer=null},150))}},{key:"scrollActiveItemToView",value:function scrollActiveItemToView(){for(var itemComponent,optionsLength=this.getShowOptions().length,i=0;i<optionsLength;i++)itemComponent=this.menuItems[i],itemComponent&&itemComponent.parentElement&&(itemComponent.parentElement.scrollTop=itemComponent.offsetTop)}},{key:"isActiveOption",value:function isActiveOption(option,menuIndex){var _this$props$activeVal=this.props.activeValue,activeValue=void 0===_this$props$activeVal?[]:_this$props$activeVal;return activeValue[menuIndex]===option[this.getFieldName("value")]}},{key:"render",value:function render(){var _this5=this,_this$props3=this.props,prefixCls=_this$props3.prefixCls,dropdownMenuColumnStyle=_this$props3.dropdownMenuColumnStyle;return React.createElement("div",null,this.getShowOptions().map(function(options,menuIndex){return React.createElement("ul",{className:"".concat(prefixCls,"-menu"),key:menuIndex,style:dropdownMenuColumnStyle},options.map(function(option){return _this5.getOption(option,menuIndex)}))}))}}]),Menus}(React.Component);Menus.defaultProps={options:[],value:[],activeValue:[],onSelect:function onSelect(){},prefixCls:"rc-cascader-menus",visible:!1,expandTrigger:"click"};export default Menus;