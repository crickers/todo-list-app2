import"/node_modules/core-js/modules/es.promise.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import React from"c:\\node_modules\\react\\index.js";import findDOMNode from"/node_modules/rc-util/es/Dom/findDOMNode.js";import toArray from"/node_modules/rc-util/es/Children/toArray.js";import warning from"/node_modules/rc-util/es/warning.js";import{composeRef,supportRef}from"/node_modules/rc-util/es/ref.js";import ResizeObserver from"/node_modules/resize-observer-polyfill.js";var INTERNAL_PREFIX_KEY="rc-observer-key",ReactResizeObserver=function(_React$Component){function ReactResizeObserver(){var _this;return _classCallCheck(this,ReactResizeObserver),_this=_super.apply(this,arguments),_this.resizeObserver=null,_this.childNode=null,_this.currentElement=null,_this.state={width:0,height:0,offsetHeight:0,offsetWidth:0},_this.onResize=function(entries){var onResize=_this.props.onResize,target=entries[0].target,_target$getBoundingCl=target.getBoundingClientRect(),width=_target$getBoundingCl.width,height=_target$getBoundingCl.height,offsetWidth=target.offsetWidth,offsetHeight=target.offsetHeight,fixedWidth=Math.floor(width),fixedHeight=Math.floor(height);if(_this.state.width!==fixedWidth||_this.state.height!==fixedHeight||_this.state.offsetWidth!==offsetWidth||_this.state.offsetHeight!==offsetHeight){var size={width:fixedWidth,height:fixedHeight,offsetWidth:offsetWidth,offsetHeight:offsetHeight};_this.setState(size),onResize&&Promise.resolve().then(function(){onResize(_objectSpread(_objectSpread({},size),{},{offsetWidth:offsetWidth,offsetHeight:offsetHeight}),target)})}},_this.setChildNode=function(node){_this.childNode=node},_this}_inherits(ReactResizeObserver,_React$Component);var _super=_createSuper(ReactResizeObserver);return _createClass(ReactResizeObserver,[{key:"componentDidMount",value:function componentDidMount(){this.onComponentUpdated()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.onComponentUpdated()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.destroyObserver()}},{key:"onComponentUpdated",value:function onComponentUpdated(){var disabled=this.props.disabled;if(disabled)return void this.destroyObserver();var element=findDOMNode(this.childNode||this),elementChanged=element!==this.currentElement;elementChanged&&(this.destroyObserver(),this.currentElement=element),!this.resizeObserver&&element&&(this.resizeObserver=new ResizeObserver(this.onResize),this.resizeObserver.observe(element))}},{key:"destroyObserver",value:function destroyObserver(){this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null)}},{key:"render",value:function render(){var children=this.props.children,childNodes=toArray(children);if(1<childNodes.length)warning(!1,"Find more than one child node with `children` in ResizeObserver. Will only observe first one.");else if(0===childNodes.length)return warning(!1,"`children` of ResizeObserver is empty. Nothing is in observe."),null;var childNode=childNodes[0];if(React.isValidElement(childNode)&&supportRef(childNode)){var ref=childNode.ref;childNodes[0]=React.cloneElement(childNode,{ref:composeRef(ref,this.setChildNode)})}return 1===childNodes.length?childNodes[0]:childNodes.map(function(node,index){return!React.isValidElement(node)||"key"in node&&null!==node.key?node:React.cloneElement(node,{key:"".concat(INTERNAL_PREFIX_KEY,"-").concat(index)})})}}]),ReactResizeObserver}(React.Component);ReactResizeObserver.displayName="ResizeObserver";export default ReactResizeObserver;