import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import{useState}from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import pickAttrs from"/node_modules/rc-util/es/pickAttrs.js";import Overflow from"/node_modules/rc-overflow.js";import TransBtn from"/node_modules/rc-select/es/TransBtn.js";import Input from"/node_modules/rc-select/es/Selector/Input.js";import useLayoutEffect from"/node_modules/rc-select/es/hooks/useLayoutEffect.js";var onPreventMouseDown=function onPreventMouseDown(event){event.preventDefault(),event.stopPropagation()},SelectSelector=function SelectSelector(props){function defaultRenderSelector(content,itemDisabled,closable,onClose){return React.createElement("span",{className:classNames("".concat(selectionPrefixCls,"-item"),_defineProperty({},"".concat(selectionPrefixCls,"-item-disabled"),itemDisabled))},React.createElement("span",{className:"".concat(selectionPrefixCls,"-item-content")},content),closable&&React.createElement(TransBtn,{className:"".concat(selectionPrefixCls,"-item-remove"),onMouseDown:onPreventMouseDown,onClick:onClose,customizeIcon:removeIcon},"\xD7"))}function customizeRenderSelector(value,content,itemDisabled,closable,onClose){return React.createElement("span",{onMouseDown:function onMouseDown(e){onPreventMouseDown(e),onToggleOpen(!0)}},tagRender({label:content,value:value,disabled:itemDisabled,closable:closable,onClose:onClose}))}var id=props.id,prefixCls=props.prefixCls,values=props.values,open=props.open,searchValue=props.searchValue,inputRef=props.inputRef,placeholder=props.placeholder,disabled=props.disabled,mode=props.mode,showSearch=props.showSearch,autoFocus=props.autoFocus,autoComplete=props.autoComplete,accessibilityIndex=props.accessibilityIndex,tabIndex=props.tabIndex,removeIcon=props.removeIcon,maxTagCount=props.maxTagCount,maxTagTextLength=props.maxTagTextLength,_props$maxTagPlacehol=props.maxTagPlaceholder,maxTagPlaceholder=void 0===_props$maxTagPlacehol?function(omittedValues){return"+ ".concat(omittedValues.length," ...")}:_props$maxTagPlacehol,tagRender=props.tagRender,onToggleOpen=props.onToggleOpen,onSelect=props.onSelect,onInputChange=props.onInputChange,onInputPaste=props.onInputPaste,onInputKeyDown=props.onInputKeyDown,onInputMouseDown=props.onInputMouseDown,onInputCompositionStart=props.onInputCompositionStart,onInputCompositionEnd=props.onInputCompositionEnd,measureRef=React.useRef(null),_useState=useState(0),_useState2=_slicedToArray(_useState,2),inputWidth=_useState2[0],setInputWidth=_useState2[1],_useState3=useState(!1),_useState4=_slicedToArray(_useState3,2),focused=_useState4[0],setFocused=_useState4[1],selectionPrefixCls="".concat(prefixCls,"-selection"),inputValue=open||"tags"===mode?searchValue:"";useLayoutEffect(function(){setInputWidth(measureRef.current.scrollWidth)},[inputValue]);var inputNode=React.createElement("div",{className:"".concat(selectionPrefixCls,"-search"),style:{width:inputWidth},onFocus:function onFocus(){setFocused(!0)},onBlur:function onBlur(){setFocused(!1)}},React.createElement(Input,{ref:inputRef,open:open,prefixCls:prefixCls,id:id,inputElement:null,disabled:disabled,autoFocus:autoFocus,autoComplete:autoComplete,editable:"tags"===mode||showSearch&&(open||focused),accessibilityIndex:accessibilityIndex,value:inputValue,onKeyDown:onInputKeyDown,onMouseDown:onInputMouseDown,onChange:onInputChange,onPaste:onInputPaste,onCompositionStart:onInputCompositionStart,onCompositionEnd:onInputCompositionEnd,tabIndex:tabIndex,attrs:pickAttrs(props,!0)}),React.createElement("span",{ref:measureRef,className:"".concat(selectionPrefixCls,"-search-mirror"),"aria-hidden":!0},inputValue,"\xA0")),selectionNode=React.createElement(Overflow,{prefixCls:"".concat(selectionPrefixCls,"-overflow"),data:values,renderItem:function renderItem(_ref){var itemDisabled=_ref.disabled,label=_ref.label,value=_ref.value,closable=!disabled&&!itemDisabled,displayLabel=label;if("number"==typeof maxTagTextLength&&("string"==typeof label||"number"==typeof label)){var strLabel=displayLabel+"";strLabel.length>maxTagTextLength&&(displayLabel="".concat(strLabel.slice(0,maxTagTextLength),"..."))}var onClose=function onClose(event){event&&event.stopPropagation(),onSelect(value,{selected:!1})};return"function"==typeof tagRender?customizeRenderSelector(value,displayLabel,itemDisabled,closable,onClose):defaultRenderSelector(displayLabel,itemDisabled,closable,onClose)},renderRest:function renderRest(omittedValues){var content="function"==typeof maxTagPlaceholder?maxTagPlaceholder(omittedValues):maxTagPlaceholder;return defaultRenderSelector(content,!1)},suffix:inputNode,itemKey:"key",maxCount:maxTagCount});return React.createElement(React.Fragment,null,selectionNode,!values.length&&!inputValue&&React.createElement("span",{className:"".concat(selectionPrefixCls,"-placeholder")},placeholder))};export default SelectSelector;