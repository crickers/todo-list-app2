import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.reduce.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.array.sort.js";import"/node_modules/core-js/modules/es.string.includes.js";import"/node_modules/core-js/modules/es.string.split.js";import"/node_modules/core-js/modules/es.string.trim.js";import"/node_modules/core-js/modules/esnext.map.delete-all.js";import"/node_modules/core-js/modules/esnext.map.every.js";import"/node_modules/core-js/modules/esnext.map.filter.js";import"/node_modules/core-js/modules/esnext.map.find.js";import"/node_modules/core-js/modules/esnext.map.find-key.js";import"/node_modules/core-js/modules/esnext.map.includes.js";import"/node_modules/core-js/modules/esnext.map.key-of.js";import"/node_modules/core-js/modules/esnext.map.map-keys.js";import"/node_modules/core-js/modules/esnext.map.map-values.js";import"/node_modules/core-js/modules/esnext.map.merge.js";import"/node_modules/core-js/modules/esnext.map.reduce.js";import"/node_modules/core-js/modules/esnext.map.some.js";import"/node_modules/core-js/modules/esnext.map.update.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toArray from"/node_modules/@babel/runtime/helpers/esm/toArray.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import warning from"/node_modules/rc-util/es/warning.js";import{toArray}from"/node_modules/rc-select/es/utils/commonUtil.js";function getKey(data,index){var value,key=data.key;return"value"in data&&(value=data.value),null!==key&&void 0!==key?key:void 0===value?"rc-index-key-".concat(index):value}export function flattenOptions(options){function dig(list,isGroupOption){list.forEach(function(data){isGroupOption||!("options"in data)?flattenList.push({key:getKey(data,flattenList.length),groupOption:isGroupOption,data:data}):(flattenList.push({key:getKey(data,flattenList.length),group:!0,data:data}),dig(data.options,!0))})}var flattenList=[];return dig(options,!1),flattenList}function injectPropsWithOption(option){var newOption=_objectSpread({},option);return"props"in newOption||Object.defineProperty(newOption,"props",{get:function get(){return warning(!1,"Return type is option instead of Option instance. Please read value directly instead of reading from `props`."),newOption}}),newOption}export function findValueOption(values,options){var _ref=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_ref$prevValueOptions=_ref.prevValueOptions,prevValueOptions=void 0===_ref$prevValueOptions?[]:_ref$prevValueOptions,optionMap=new Map;return options.forEach(function(flattenItem){if(!flattenItem.group){var data=flattenItem.data;optionMap.set(data.value,data)}}),values.map(function(val){var option=optionMap.get(val);return option||(option=_objectSpread({},prevValueOptions.find(function(opt){return opt._INTERNAL_OPTION_VALUE_===val}))),injectPropsWithOption(option)})}export var getLabeledValue=function getLabeledValue(value,_ref2){var options=_ref2.options,prevValueMap=_ref2.prevValueMap,labelInValue=_ref2.labelInValue,optionLabelProp=_ref2.optionLabelProp,item=findValueOption([value],options)[0],result={value:value},prevValItem=labelInValue?prevValueMap.get(value):void 0;return prevValItem&&"object"===_typeof(prevValItem)&&"label"in prevValItem?(result.label=prevValItem.label,item&&"string"==typeof prevValItem.label&&"string"==typeof item[optionLabelProp]&&prevValItem.label.trim()!==item[optionLabelProp].trim()&&warning(!1,"`label` of `value` is not same as `label` in Select options.")):item&&optionLabelProp in item?result.label=item[optionLabelProp]:(result.label=value,result.isCacheable=!0),result.key=result.value,result};function toRawString(content){return toArray(content).join("")}function getFilterFunction(optionFilterProp){return function(searchValue,option){var lowerSearchText=searchValue.toLowerCase();if("options"in option)return toRawString(option.label).toLowerCase().includes(lowerSearchText);var rawValue=option[optionFilterProp],value=toRawString(rawValue).toLowerCase();return value.includes(lowerSearchText)}}export function filterOptions(searchValue,options,_ref3){var filterFunc,optionFilterProp=_ref3.optionFilterProp,filterOption=_ref3.filterOption,filteredOptions=[];return!1===filterOption?_toConsumableArray(options):(filterFunc="function"==typeof filterOption?filterOption:getFilterFunction(optionFilterProp),options.forEach(function(item){if("options"in item){var matchGroup=filterFunc(searchValue,item);if(matchGroup)filteredOptions.push(item);else{var subOptions=item.options.filter(function(subItem){return filterFunc(searchValue,subItem)});subOptions.length&&filteredOptions.push(_objectSpread(_objectSpread({},item),{},{options:subOptions}))}return}filterFunc(searchValue,injectPropsWithOption(item))&&filteredOptions.push(item)}),filteredOptions)}export function getSeparatedContent(text,tokens){function separate(str,_ref4){var _ref5=_toArray(_ref4),token=_ref5[0],restTokens=_ref5.slice(1);if(!token)return[str];var list=str.split(token);return match=match||1<list.length,list.reduce(function(prevList,unitStr){return[].concat(_toConsumableArray(prevList),_toConsumableArray(separate(unitStr,restTokens)))},[]).filter(function(unit){return unit})}if(!tokens||!tokens.length)return null;var match=!1,list=separate(text,tokens);return match?list:null}export function isValueDisabled(value,options){var option=findValueOption([value],options)[0];return option.disabled}export function fillOptionsWithMissingValue(options,value,optionLabelProp,labelInValue){var values=toArray(value).slice().sort(),cloneOptions=_toConsumableArray(options),optionValues=new Set;return options.forEach(function(opt){opt.options?opt.options.forEach(function(subOpt){optionValues.add(subOpt.value)}):optionValues.add(opt.value)}),values.forEach(function(item){var val=labelInValue?item.value:item;if(!optionValues.has(val)){var _ref6;cloneOptions.push(labelInValue?(_ref6={},_defineProperty(_ref6,optionLabelProp,item.label),_defineProperty(_ref6,"value",val),_ref6):{value:val})}}),cloneOptions}