import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.sort.js";import"/node_modules/core-js/modules/es.array.splice.js";import"/node_modules/core-js/modules/es.object.assign.js";import"/node_modules/core-js/modules/es.string.includes.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import{useState,useRef,useEffect,useMemo}from"c:\\node_modules\\react\\index.js";import KeyCode from"/node_modules/rc-util/es/KeyCode.js";import classNames from"/node_modules/classnames.js";import useMergedState from"/node_modules/rc-util/es/hooks/useMergedState.js";import Selector from"/node_modules/rc-select/es/Selector.js";import SelectTrigger from"/node_modules/rc-select/es/SelectTrigger.js";import{INTERNAL_PROPS_MARK}from"/node_modules/rc-select/es/interface/generator.js";import{toInnerValue,toOuterValues,removeLastEnabledValue,getUUID}from"/node_modules/rc-select/es/utils/commonUtil.js";import TransBtn from"/node_modules/rc-select/es/TransBtn.js";import useLock from"/node_modules/rc-select/es/hooks/useLock.js";import useDelayReset from"/node_modules/rc-select/es/hooks/useDelayReset.js";import useLayoutEffect from"/node_modules/rc-select/es/hooks/useLayoutEffect.js";import{getSeparatedContent}from"/node_modules/rc-select/es/utils/valueUtil.js";import useSelectTriggerControl from"/node_modules/rc-select/es/hooks/useSelectTriggerControl.js";import useCacheDisplayValue from"/node_modules/rc-select/es/hooks/useCacheDisplayValue.js";import useCacheOptions from"/node_modules/rc-select/es/hooks/useCacheOptions.js";var DEFAULT_OMIT_PROPS=["removeIcon","placeholder","autoFocus","maxTagCount","maxTagTextLength","maxTagPlaceholder","choiceTransitionName","onInputKeyDown","tabIndex"];export default function generateSelector(config){var defaultPrefixCls=config.prefixCls,OptionList=config.components.optionList,convertChildrenToData=config.convertChildrenToData,flattenOptions=config.flattenOptions,getLabeledValue=config.getLabeledValue,filterOptions=config.filterOptions,isValueDisabled=config.isValueDisabled,findValueOption=config.findValueOption,warningProps=config.warningProps,fillOptionsWithMissingValue=config.fillOptionsWithMissingValue,omitDOMProps=config.omitDOMProps,RefSelect=React.forwardRef(function Select(props,ref){var _classNames2,_props$prefixCls=props.prefixCls,prefixCls=void 0===_props$prefixCls?defaultPrefixCls:_props$prefixCls,className=props.className,id=props.id,open=props.open,defaultOpen=props.defaultOpen,options=props.options,children=props.children,mode=props.mode,value=props.value,defaultValue=props.defaultValue,labelInValue=props.labelInValue,showSearch=props.showSearch,inputValue=props.inputValue,searchValue=props.searchValue,filterOption=props.filterOption,filterSort=props.filterSort,_props$optionFilterPr=props.optionFilterProp,optionFilterProp=void 0===_props$optionFilterPr?"value":_props$optionFilterPr,_props$autoClearSearc=props.autoClearSearchValue,autoClearSearchValue=!(void 0!==_props$autoClearSearc)||_props$autoClearSearc,onSearch=props.onSearch,allowClear=props.allowClear,clearIcon=props.clearIcon,showArrow=props.showArrow,inputIcon=props.inputIcon,menuItemSelectedIcon=props.menuItemSelectedIcon,disabled=props.disabled,loading=props.loading,defaultActiveFirstOption=props.defaultActiveFirstOption,_props$notFoundConten=props.notFoundContent,notFoundContent=void 0===_props$notFoundConten?"Not Found":_props$notFoundConten,optionLabelProp=props.optionLabelProp,backfill=props.backfill,tabIndex=props.tabIndex,getInputElement=props.getInputElement,getPopupContainer=props.getPopupContainer,_props$listHeight=props.listHeight,listHeight=void 0===_props$listHeight?200:_props$listHeight,_props$listItemHeight=props.listItemHeight,listItemHeight=void 0===_props$listItemHeight?20:_props$listItemHeight,animation=props.animation,transitionName=props.transitionName,virtual=props.virtual,dropdownStyle=props.dropdownStyle,dropdownClassName=props.dropdownClassName,dropdownMatchSelectWidth=props.dropdownMatchSelectWidth,dropdownRender=props.dropdownRender,dropdownAlign=props.dropdownAlign,_props$showAction=props.showAction,showAction=void 0===_props$showAction?[]:_props$showAction,direction=props.direction,tokenSeparators=props.tokenSeparators,tagRender=props.tagRender,onPopupScroll=props.onPopupScroll,onDropdownVisibleChange=props.onDropdownVisibleChange,onFocus=props.onFocus,onBlur=props.onBlur,onKeyUp=props.onKeyUp,onKeyDown=props.onKeyDown,onMouseDown=props.onMouseDown,onChange=props.onChange,onSelect=props.onSelect,onDeselect=props.onDeselect,onClear=props.onClear,_props$internalProps=props.internalProps,internalProps=void 0===_props$internalProps?{}:_props$internalProps,restProps=_objectWithoutProperties(props,["prefixCls","className","id","open","defaultOpen","options","children","mode","value","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","filterSort","optionFilterProp","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","notFoundContent","optionLabelProp","backfill","tabIndex","getInputElement","getPopupContainer","listHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","showAction","direction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","onClear","internalProps"]),useInternalProps=internalProps.mark===INTERNAL_PROPS_MARK,domProps=omitDOMProps?omitDOMProps(restProps):restProps;DEFAULT_OMIT_PROPS.forEach(function(prop){delete domProps[prop]});var containerRef=useRef(null),triggerRef=useRef(null),selectorRef=useRef(null),listRef=useRef(null),tokenWithEnter=useMemo(function(){return(tokenSeparators||[]).some(function(tokenSeparator){return["\n","\r\n"].includes(tokenSeparator)})},[tokenSeparators]),_useDelayReset=useDelayReset(),_useDelayReset2=_slicedToArray(_useDelayReset,3),mockFocused=_useDelayReset2[0],setMockFocused=_useDelayReset2[1],cancelSetMockFocused=_useDelayReset2[2],_useState=useState(),_useState2=_slicedToArray(_useState,2),innerId=_useState2[0],setInnerId=_useState2[1];useEffect(function(){setInnerId("rc_select_".concat(getUUID()))},[]);var mergedId=id||innerId,mergedOptionLabelProp=optionLabelProp;mergedOptionLabelProp===void 0&&(mergedOptionLabelProp=options?"label":"children");var mergedLabelInValue="combobox"!==mode&&labelInValue,isMultiple="tags"===mode||"multiple"===mode,mergedShowSearch=showSearch===void 0?isMultiple||"combobox"===mode:showSearch,selectorDomRef=useRef(null);React.useImperativeHandle(ref,function(){var _listRef$current;return{focus:selectorRef.current.focus,blur:selectorRef.current.blur,scrollTo:null===(_listRef$current=listRef.current)||void 0===_listRef$current?void 0:_listRef$current.scrollTo}});var _useMergedState=useMergedState(defaultValue,{value:value}),_useMergedState2=_slicedToArray(_useMergedState,2),mergedValue=_useMergedState2[0],setMergedValue=_useMergedState2[1],_useMemo=useMemo(function(){return toInnerValue(mergedValue,{labelInValue:mergedLabelInValue,combobox:"combobox"===mode})},[mergedValue,mergedLabelInValue]),_useMemo2=_slicedToArray(_useMemo,2),mergedRawValue=_useMemo2[0],mergedValueMap=_useMemo2[1],rawValues=useMemo(function(){return new Set(mergedRawValue)},[mergedRawValue]),_useState3=useState(null),_useState4=_slicedToArray(_useState3,2),activeValue=_useState4[0],setActiveValue=_useState4[1],_useState5=useState(""),_useState6=_slicedToArray(_useState5,2),innerSearchValue=_useState6[0],setInnerSearchValue=_useState6[1],mergedSearchValue=innerSearchValue;"combobox"===mode&&mergedValue!==void 0?mergedSearchValue=mergedValue:searchValue===void 0?inputValue&&(mergedSearchValue=inputValue):mergedSearchValue=searchValue;var mergedOptions=useMemo(function(){var newOptions=options;return void 0===newOptions&&(newOptions=convertChildrenToData(children)),"tags"===mode&&fillOptionsWithMissingValue&&(newOptions=fillOptionsWithMissingValue(newOptions,mergedValue,mergedOptionLabelProp,labelInValue)),newOptions||[]},[options,children,mode,mergedValue]),mergedFlattenOptions=useMemo(function(){return flattenOptions(mergedOptions,props)},[mergedOptions]),getValueOption=useCacheOptions(mergedFlattenOptions),displayOptions=useMemo(function(){if(!mergedSearchValue||!mergedShowSearch)return _toConsumableArray(mergedOptions);var filteredOptions=filterOptions(mergedSearchValue,mergedOptions,{optionFilterProp:optionFilterProp,filterOption:"combobox"===mode&&void 0===filterOption?function(){return!0}:filterOption});return"tags"===mode&&filteredOptions.every(function(opt){return opt[optionFilterProp]!==mergedSearchValue})&&filteredOptions.unshift({value:mergedSearchValue,label:mergedSearchValue,key:"__RC_SELECT_TAG_PLACEHOLDER__"}),filterSort&&Array.isArray(filteredOptions)?_toConsumableArray(filteredOptions).sort(filterSort):filteredOptions},[mergedOptions,mergedSearchValue,mode,mergedShowSearch,filterSort]),displayFlattenOptions=useMemo(function(){return flattenOptions(displayOptions,props)},[displayOptions]);useEffect(function(){listRef.current&&listRef.current.scrollTo&&listRef.current.scrollTo(0)},[mergedSearchValue]);var displayValues=useMemo(function(){var tmpValues=mergedRawValue.map(function(val){var valueOptions=getValueOption([val]),displayValue=getLabeledValue(val,{options:valueOptions,prevValueMap:mergedValueMap,labelInValue:mergedLabelInValue,optionLabelProp:mergedOptionLabelProp});return _objectSpread(_objectSpread({},displayValue),{},{disabled:isValueDisabled(val,valueOptions)})});return mode||1!==tmpValues.length||null!==tmpValues[0].value||null!==tmpValues[0].label?tmpValues:[]},[mergedValue,mergedOptions,mode]);displayValues=useCacheDisplayValue(displayValues);var triggerSelect=function triggerSelect(newValue,isSelect,source){var newValueOption=getValueOption([newValue]),outOption=findValueOption([newValue],newValueOption)[0];if(!internalProps.skipTriggerSelect){var selectValue=mergedLabelInValue?getLabeledValue(newValue,{options:newValueOption,prevValueMap:mergedValueMap,labelInValue:mergedLabelInValue,optionLabelProp:mergedOptionLabelProp}):newValue;isSelect&&onSelect?onSelect(selectValue,outOption):!isSelect&&onDeselect&&onDeselect(selectValue,outOption)}useInternalProps&&(isSelect&&internalProps.onRawSelect?internalProps.onRawSelect(newValue,outOption,source):!isSelect&&internalProps.onRawDeselect&&internalProps.onRawDeselect(newValue,outOption,source))},_useState7=useState([]),_useState8=_slicedToArray(_useState7,2),prevValueOptions=_useState8[0],setPrevValueOptions=_useState8[1],triggerChange=function triggerChange(newRawValues){if(!(useInternalProps&&internalProps.skipTriggerChange)){var newRawValuesOptions=getValueOption(newRawValues),outValues=toOuterValues(Array.from(newRawValues),{labelInValue:mergedLabelInValue,options:newRawValuesOptions,getLabeledValue:getLabeledValue,prevValueMap:mergedValueMap,optionLabelProp:mergedOptionLabelProp}),outValue=isMultiple?outValues:outValues[0];if(onChange&&(0!==mergedRawValue.length||0!==outValues.length)){var outOptions=findValueOption(newRawValues,newRawValuesOptions,{prevValueOptions:prevValueOptions});setPrevValueOptions(outOptions.map(function(option,index){var clone=_objectSpread({},option);return Object.defineProperty(clone,"_INTERNAL_OPTION_VALUE_",{get:function get(){return newRawValues[index]}}),clone})),onChange(outValue,isMultiple?outOptions:outOptions[0])}setMergedValue(outValue)}},onInternalSelect=function onInternalSelect(newValue,_ref){var selected=_ref.selected,source=_ref.source;if(!disabled){var newRawValue;isMultiple?(newRawValue=new Set(mergedRawValue),selected?newRawValue.add(newValue):newRawValue.delete(newValue)):(newRawValue=new Set,newRawValue.add(newValue)),(isMultiple||!isMultiple&&Array.from(mergedRawValue)[0]!==newValue)&&triggerChange(Array.from(newRawValue)),triggerSelect(newValue,!isMultiple||selected,source),"combobox"===mode?(setInnerSearchValue(newValue+""),setActiveValue("")):(!isMultiple||autoClearSearchValue)&&(setInnerSearchValue(""),setActiveValue(""))}},customizeInputElement="combobox"===mode&&getInputElement&&getInputElement()||null,_useMergedState3=useMergedState(void 0,{defaultValue:defaultOpen,value:open}),_useMergedState4=_slicedToArray(_useMergedState3,2),innerOpen=_useMergedState4[0],setInnerOpen=_useMergedState4[1],mergedOpen=innerOpen,emptyListContent=!notFoundContent&&!displayOptions.length;(disabled||emptyListContent&&mergedOpen&&"combobox"===mode)&&(mergedOpen=!1);var triggerOpen=!emptyListContent&&mergedOpen,onToggleOpen=function onToggleOpen(newOpen){var nextOpen=newOpen===void 0?!mergedOpen:newOpen;innerOpen===nextOpen||disabled||(setInnerOpen(nextOpen),onDropdownVisibleChange&&onDropdownVisibleChange(nextOpen))};useSelectTriggerControl([containerRef.current,triggerRef.current&&triggerRef.current.getPopupElement()],triggerOpen,onToggleOpen);var triggerSearch=function triggerSearch(searchText,fromTyping,isCompositing){var ret=!0,newSearchText=searchText;setActiveValue(null);var patchLabels=isCompositing?null:getSeparatedContent(searchText,tokenSeparators),patchRawValues=patchLabels;if("combobox"===mode)fromTyping&&triggerChange([newSearchText]);else if(patchLabels){newSearchText="","tags"!==mode&&(patchRawValues=patchLabels.map(function(label){var item=mergedFlattenOptions.find(function(_ref2){var data=_ref2.data;return data[mergedOptionLabelProp]===label});return item?item.data.value:null}).filter(function(val){return null!==val}));var newRawValues=Array.from(new Set([].concat(_toConsumableArray(mergedRawValue),_toConsumableArray(patchRawValues))));triggerChange(newRawValues),newRawValues.forEach(function(newRawValue){triggerSelect(newRawValue,!0,"input")}),onToggleOpen(!1),ret=!1}return setInnerSearchValue(newSearchText),onSearch&&mergedSearchValue!==newSearchText&&onSearch(newSearchText),ret};useEffect(function(){innerOpen&&!!disabled&&setInnerOpen(!1)},[disabled]),useEffect(function(){mergedOpen||isMultiple||"combobox"===mode||triggerSearch("",!1,!1)},[mergedOpen]);var _useLock=useLock(),_useLock2=_slicedToArray(_useLock,2),getClearLock=_useLock2[0],setClearLock=_useLock2[1],onInternalKeyDown=function onInternalKeyDown(event){var clearLock=getClearLock(),which=event.which;if(mergedOpen||which!==KeyCode.ENTER||onToggleOpen(!0),setClearLock(!!mergedSearchValue),which===KeyCode.BACKSPACE&&!clearLock&&isMultiple&&!mergedSearchValue&&mergedRawValue.length){var removeInfo=removeLastEnabledValue(displayValues,mergedRawValue);null!==removeInfo.removedValue&&(triggerChange(removeInfo.values),triggerSelect(removeInfo.removedValue,!1,"input"))}for(var _len=arguments.length,rest=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)rest[_key-1]=arguments[_key];if(mergedOpen&&listRef.current){var _listRef$current2;(_listRef$current2=listRef.current).onKeyDown.apply(_listRef$current2,[event].concat(rest))}onKeyDown&&onKeyDown.apply(void 0,[event].concat(rest))},onInternalKeyUp=function onInternalKeyUp(event){for(var _len2=arguments.length,rest=Array(1<_len2?_len2-1:0),_key2=1;_key2<_len2;_key2++)rest[_key2-1]=arguments[_key2];if(mergedOpen&&listRef.current){var _listRef$current3;(_listRef$current3=listRef.current).onKeyUp.apply(_listRef$current3,[event].concat(rest))}onKeyUp&&onKeyUp.apply(void 0,[event].concat(rest))},focusRef=useRef(!1),onContainerBlur=function onContainerBlur(){setMockFocused(!1,function(){focusRef.current=!1,onToggleOpen(!1)});disabled||(mergedSearchValue&&("tags"===mode?(triggerSearch("",!1,!1),triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue),[mergedSearchValue]))))):"multiple"===mode&&setInnerSearchValue("")),onBlur&&onBlur.apply(void 0,arguments))},activeTimeoutIds=[];useEffect(function(){return function(){activeTimeoutIds.forEach(function(timeoutId){return clearTimeout(timeoutId)}),activeTimeoutIds.splice(0,activeTimeoutIds.length)}},[]);var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),accessibilityIndex=_useState10[0],setAccessibilityIndex=_useState10[1],mergedDefaultActiveFirstOption=defaultActiveFirstOption===void 0?"combobox"!==mode:defaultActiveFirstOption,_useState11=useState(null),_useState12=_slicedToArray(_useState11,2),containerWidth=_useState12[0],setContainerWidth=_useState12[1],_useState13=useState({}),_useState14=_slicedToArray(_useState13,2),forceUpdate=_useState14[1];useLayoutEffect(function(){if(triggerOpen){var newWidth=Math.ceil(containerRef.current.offsetWidth);containerWidth!==newWidth&&setContainerWidth(newWidth)}},[triggerOpen]);var clearNode,popupNode=React.createElement(OptionList,{ref:listRef,prefixCls:prefixCls,id:mergedId,open:mergedOpen,childrenAsData:!options,options:displayOptions,flattenOptions:displayFlattenOptions,multiple:isMultiple,values:rawValues,height:listHeight,itemHeight:listItemHeight,onSelect:function onInternalOptionSelect(newValue,info){onInternalSelect(newValue,_objectSpread(_objectSpread({},info),{},{source:"option"}))},onToggleOpen:onToggleOpen,onActiveValue:function onActiveValue(active,index){var _ref3=2<arguments.length&&arguments[2]!==void 0?arguments[2]:{},_ref3$source=_ref3.source,source=void 0===_ref3$source?"keyboard":_ref3$source;setAccessibilityIndex(index),backfill&&"combobox"===mode&&null!==active&&"keyboard"===source&&setActiveValue(active+"")},defaultActiveFirstOption:mergedDefaultActiveFirstOption,notFoundContent:notFoundContent,onScroll:onPopupScroll,searchValue:mergedSearchValue,menuItemSelectedIcon:menuItemSelectedIcon,virtual:!1!==virtual&&!1!==dropdownMatchSelectWidth,onMouseEnter:function onPopupMouseEnter(){forceUpdate({})}}),onClearMouseDown=function onClearMouseDown(){useInternalProps&&internalProps.onClear&&internalProps.onClear(),onClear&&onClear(),triggerChange([]),triggerSearch("",!1,!1)};!disabled&&allowClear&&(mergedRawValue.length||mergedSearchValue)&&(clearNode=React.createElement(TransBtn,{className:"".concat(prefixCls,"-clear"),onMouseDown:onClearMouseDown,customizeIcon:clearIcon},"\xD7"));var arrowNode,mergedShowArrow=showArrow===void 0?loading||!isMultiple&&"combobox"!==mode:showArrow;mergedShowArrow&&(arrowNode=React.createElement(TransBtn,{className:classNames("".concat(prefixCls,"-arrow"),_defineProperty({},"".concat(prefixCls,"-arrow-loading"),loading)),customizeIcon:inputIcon,customizeIconProps:{loading:loading,searchValue:mergedSearchValue,open:mergedOpen,focused:mockFocused,showSearch:mergedShowSearch}}));var mergedClassName=classNames(prefixCls,className,(_classNames2={},_defineProperty(_classNames2,"".concat(prefixCls,"-focused"),mockFocused),_defineProperty(_classNames2,"".concat(prefixCls,"-multiple"),isMultiple),_defineProperty(_classNames2,"".concat(prefixCls,"-single"),!isMultiple),_defineProperty(_classNames2,"".concat(prefixCls,"-allow-clear"),allowClear),_defineProperty(_classNames2,"".concat(prefixCls,"-show-arrow"),mergedShowArrow),_defineProperty(_classNames2,"".concat(prefixCls,"-disabled"),disabled),_defineProperty(_classNames2,"".concat(prefixCls,"-loading"),loading),_defineProperty(_classNames2,"".concat(prefixCls,"-open"),mergedOpen),_defineProperty(_classNames2,"".concat(prefixCls,"-customize-input"),customizeInputElement),_defineProperty(_classNames2,"".concat(prefixCls,"-show-search"),mergedShowSearch),_classNames2));return React.createElement("div",Object.assign({className:mergedClassName},domProps,{ref:containerRef,onMouseDown:function onInternalMouseDown(event){var target=event.target,popupElement=triggerRef.current&&triggerRef.current.getPopupElement();if(popupElement&&popupElement.contains(target)){var timeoutId=setTimeout(function(){var index=activeTimeoutIds.indexOf(timeoutId);-1!==index&&activeTimeoutIds.splice(index,1),cancelSetMockFocused(),popupElement.contains(document.activeElement)||selectorRef.current.focus()});activeTimeoutIds.push(timeoutId)}if(onMouseDown){for(var _len3=arguments.length,restArgs=Array(1<_len3?_len3-1:0),_key3=1;_key3<_len3;_key3++)restArgs[_key3-1]=arguments[_key3];onMouseDown.apply(void 0,[event].concat(restArgs))}},onKeyDown:onInternalKeyDown,onKeyUp:onInternalKeyUp,onFocus:function onContainerFocus(){setMockFocused(!0),disabled||(onFocus&&!focusRef.current&&onFocus.apply(void 0,arguments),showAction.includes("focus")&&onToggleOpen(!0)),focusRef.current=!0},onBlur:onContainerBlur}),mockFocused&&!mergedOpen&&React.createElement("span",{style:{width:0,height:0,display:"flex",overflow:"hidden",opacity:0},"aria-live":"polite"},"".concat(mergedRawValue.join(", "))),React.createElement(SelectTrigger,{ref:triggerRef,disabled:disabled,prefixCls:prefixCls,visible:triggerOpen,popupElement:popupNode,containerWidth:containerWidth,animation:animation,transitionName:transitionName,dropdownStyle:dropdownStyle,dropdownClassName:dropdownClassName,direction:direction,dropdownMatchSelectWidth:dropdownMatchSelectWidth,dropdownRender:dropdownRender,dropdownAlign:dropdownAlign,getPopupContainer:getPopupContainer,empty:!mergedOptions.length,getTriggerDOMNode:function getTriggerDOMNode(){return selectorDomRef.current}},React.createElement(Selector,Object.assign({},props,{domRef:selectorDomRef,prefixCls:prefixCls,inputElement:customizeInputElement,ref:selectorRef,id:mergedId,showSearch:mergedShowSearch,mode:mode,accessibilityIndex:accessibilityIndex,multiple:isMultiple,tagRender:tagRender,values:displayValues,open:mergedOpen,onToggleOpen:onToggleOpen,searchValue:mergedSearchValue,activeValue:activeValue,onSearch:triggerSearch,onSearchSubmit:function onSearchSubmit(searchText){var newRawValues=Array.from(new Set([].concat(_toConsumableArray(mergedRawValue),[searchText])));triggerChange(newRawValues),newRawValues.forEach(function(newRawValue){triggerSelect(newRawValue,!0,"input")}),setInnerSearchValue("")},onSelect:function onInternalSelectionSelect(newValue,info){onInternalSelect(newValue,_objectSpread(_objectSpread({},info),{},{source:"selection"}))},tokenWithEnter:tokenWithEnter}))),arrowNode,clearNode)});return RefSelect}