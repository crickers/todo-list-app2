import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.object.assign.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import KeyCode from"/node_modules/rc-util/es/KeyCode.js";import pickAttrs from"/node_modules/rc-util/es/pickAttrs.js";import useMemo from"/node_modules/rc-util/es/hooks/useMemo.js";import classNames from"/node_modules/classnames.js";import List from"/node_modules/rc-virtual-list.js";import TransBtn from"/node_modules/rc-select/es/TransBtn.js";var OptionList=function OptionList(_ref,ref){function renderItem(index){var item=memoFlattenOptions[index];if(!item)return null;var itemData=item.data||{},value=itemData.value,label=itemData.label,children=itemData.children,attrs=pickAttrs(itemData,!0),mergedLabel=childrenAsData?children:label;return item?React.createElement("div",Object.assign({"aria-label":"string"==typeof mergedLabel?mergedLabel:null},attrs,{key:index,role:"option",id:"".concat(id,"_list_").concat(index),"aria-selected":values.has(value)}),value):null}var prefixCls=_ref.prefixCls,id=_ref.id,flattenOptions=_ref.flattenOptions,childrenAsData=_ref.childrenAsData,values=_ref.values,searchValue=_ref.searchValue,multiple=_ref.multiple,defaultActiveFirstOption=_ref.defaultActiveFirstOption,height=_ref.height,itemHeight=_ref.itemHeight,notFoundContent=_ref.notFoundContent,open=_ref.open,menuItemSelectedIcon=_ref.menuItemSelectedIcon,virtual=_ref.virtual,onSelect=_ref.onSelect,onToggleOpen=_ref.onToggleOpen,onActiveValue=_ref.onActiveValue,onScroll=_ref.onScroll,onMouseEnter=_ref.onMouseEnter,itemPrefixCls="".concat(prefixCls,"-item"),memoFlattenOptions=useMemo(function(){return flattenOptions},[open,flattenOptions],function(prev,next){return next[0]&&prev[1]!==next[1]}),listRef=React.useRef(null),onListMouseDown=function onListMouseDown(event){event.preventDefault()},scrollIntoView=function scrollIntoView(index){listRef.current&&listRef.current.scrollTo({index:index})},getEnabledActiveIndex=function getEnabledActiveIndex(index){for(var offset=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,len=memoFlattenOptions.length,i=0;i<len;i+=1){var current=(index+i*offset+len)%len,_memoFlattenOptions$c=memoFlattenOptions[current],group=_memoFlattenOptions$c.group,data=_memoFlattenOptions$c.data;if(!group&&!data.disabled)return current}return-1},_React$useState=React.useState(function(){return getEnabledActiveIndex(0)}),_React$useState2=_slicedToArray(_React$useState,2),activeIndex=_React$useState2[0],setActiveIndex=_React$useState2[1],setActive=function setActive(index){var fromKeyboard=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];setActiveIndex(index);var info={source:fromKeyboard?"keyboard":"mouse"},flattenItem=memoFlattenOptions[index];return flattenItem?void onActiveValue(flattenItem.data.value,index,info):void onActiveValue(null,-1,info)};React.useEffect(function(){setActive(!1===defaultActiveFirstOption?-1:getEnabledActiveIndex(0))},[memoFlattenOptions.length,searchValue]),React.useEffect(function(){var timeoutId=setTimeout(function(){if(!multiple&&open&&1===values.size){var value=Array.from(values)[0],index=memoFlattenOptions.findIndex(function(_ref2){var data=_ref2.data;return data.value===value});setActive(index),scrollIntoView(index)}});if(open){var _listRef$current;null===(_listRef$current=listRef.current)||void 0===_listRef$current?void 0:_listRef$current.scrollTo(void 0)}return function(){return clearTimeout(timeoutId)}},[open]);var onSelectValue=function onSelectValue(value){void 0!==value&&onSelect(value,{selected:!values.has(value)}),multiple||onToggleOpen(!1)};return React.useImperativeHandle(ref,function(){return{onKeyDown:function onKeyDown(event){var which=event.which;switch(which){case KeyCode.UP:case KeyCode.DOWN:{var offset=0;if(which===KeyCode.UP?offset=-1:which===KeyCode.DOWN&&(offset=1),0!=offset){var nextActiveIndex=getEnabledActiveIndex(activeIndex+offset,offset);scrollIntoView(nextActiveIndex),setActive(nextActiveIndex,!0)}break}case KeyCode.ENTER:{var item=memoFlattenOptions[activeIndex];item&&!item.data.disabled?onSelectValue(item.data.value):onSelectValue(void 0),open&&event.preventDefault();break}case KeyCode.ESC:onToggleOpen(!1),open&&event.stopPropagation();}},onKeyUp:function onKeyUp(){},scrollTo:function scrollTo(index){scrollIntoView(index)}}}),0===memoFlattenOptions.length?React.createElement("div",{role:"listbox",id:"".concat(id,"_list"),className:"".concat(itemPrefixCls,"-empty"),onMouseDown:onListMouseDown},notFoundContent):React.createElement(React.Fragment,null,React.createElement("div",{role:"listbox",id:"".concat(id,"_list"),style:{height:0,width:0,overflow:"hidden"}},renderItem(activeIndex-1),renderItem(activeIndex),renderItem(activeIndex+1)),React.createElement(List,{itemKey:"key",ref:listRef,data:memoFlattenOptions,height:height,itemHeight:itemHeight,fullHeight:!1,onMouseDown:onListMouseDown,onScroll:onScroll,virtual:virtual,onMouseEnter:onMouseEnter},function(_ref3,itemIndex){var _classNames,group=_ref3.group,groupOption=_ref3.groupOption,data=_ref3.data,label=data.label,key=data.key;if(group)return React.createElement("div",{className:classNames(itemPrefixCls,"".concat(itemPrefixCls,"-group"))},void 0===label?key:label);var disabled=data.disabled,value=data.value,title=data.title,children=data.children,style=data.style,className=data.className,otherProps=_objectWithoutProperties(data,["disabled","value","title","children","style","className"]),selected=values.has(value),optionPrefixCls="".concat(itemPrefixCls,"-option"),optionClassName=classNames(itemPrefixCls,optionPrefixCls,className,(_classNames={},_defineProperty(_classNames,"".concat(optionPrefixCls,"-grouped"),groupOption),_defineProperty(_classNames,"".concat(optionPrefixCls,"-active"),activeIndex===itemIndex&&!disabled),_defineProperty(_classNames,"".concat(optionPrefixCls,"-disabled"),disabled),_defineProperty(_classNames,"".concat(optionPrefixCls,"-selected"),selected),_classNames)),mergedLabel=childrenAsData?children:label,content=mergedLabel||value,optionTitle="string"==typeof content||"number"==typeof content?content.toString():void 0;return void 0!==title&&(optionTitle=title),React.createElement("div",Object.assign({},otherProps,{"aria-selected":selected,className:optionClassName,title:optionTitle,onMouseMove:function onMouseMove(){activeIndex===itemIndex||disabled||setActive(itemIndex)},onClick:function onClick(){disabled||onSelectValue(value)},style:style}),React.createElement("div",{className:"".concat(optionPrefixCls,"-content")},content),React.isValidElement(menuItemSelectedIcon)||selected,(!menuItemSelectedIcon||"function"==typeof menuItemSelectedIcon||selected)&&React.createElement(TransBtn,{className:"".concat(itemPrefixCls,"-option-state"),customizeIcon:menuItemSelectedIcon,customizeIconProps:{isSelected:selected}},selected?"\u2713":null))}))},RefOptionList=React.forwardRef(OptionList);RefOptionList.displayName="OptionList";export default RefOptionList;