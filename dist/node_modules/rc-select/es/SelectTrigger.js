import"/node_modules/core-js/modules/es.object.assign.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import Trigger from"/node_modules/rc-trigger.js";import classNames from"/node_modules/classnames.js";var getBuiltInPlacements=function getBuiltInPlacements(dropdownMatchSelectWidth){var adjustX="number"==typeof dropdownMatchSelectWidth?1:0;return{bottomLeft:{points:["tl","bl"],offset:[0,4],overflow:{adjustX:adjustX,adjustY:1}},bottomRight:{points:["tr","br"],offset:[0,4],overflow:{adjustX:adjustX,adjustY:1}},topLeft:{points:["bl","tl"],offset:[0,-4],overflow:{adjustX:adjustX,adjustY:1}},topRight:{points:["br","tr"],offset:[0,-4],overflow:{adjustX:adjustX,adjustY:1}}}},SelectTrigger=function SelectTrigger(props,ref){var prefixCls=props.prefixCls,disabled=props.disabled,visible=props.visible,children=props.children,popupElement=props.popupElement,containerWidth=props.containerWidth,animation=props.animation,transitionName=props.transitionName,dropdownStyle=props.dropdownStyle,dropdownClassName=props.dropdownClassName,_props$direction=props.direction,direction=void 0===_props$direction?"ltr":_props$direction,_props$dropdownMatchS=props.dropdownMatchSelectWidth,dropdownMatchSelectWidth=void 0===_props$dropdownMatchS||_props$dropdownMatchS,dropdownRender=props.dropdownRender,dropdownAlign=props.dropdownAlign,getPopupContainer=props.getPopupContainer,empty=props.empty,getTriggerDOMNode=props.getTriggerDOMNode,restProps=_objectWithoutProperties(props,["prefixCls","disabled","visible","children","popupElement","containerWidth","animation","transitionName","dropdownStyle","dropdownClassName","direction","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","getPopupContainer","empty","getTriggerDOMNode"]),dropdownPrefixCls="".concat(prefixCls,"-dropdown"),popupNode=popupElement;dropdownRender&&(popupNode=dropdownRender(popupElement));var builtInPlacements=React.useMemo(function(){return getBuiltInPlacements(dropdownMatchSelectWidth)},[dropdownMatchSelectWidth]),mergedTransitionName=animation?"".concat(dropdownPrefixCls,"-").concat(animation):transitionName,popupRef=React.useRef(null);React.useImperativeHandle(ref,function(){return{getPopupElement:function getPopupElement(){return popupRef.current}}});var popupStyle=_objectSpread({minWidth:containerWidth},dropdownStyle);return"number"==typeof dropdownMatchSelectWidth?popupStyle.width=dropdownMatchSelectWidth:dropdownMatchSelectWidth&&(popupStyle.width=containerWidth),React.createElement(Trigger,Object.assign({},restProps,{showAction:[],hideAction:[],popupPlacement:"rtl"===direction?"bottomRight":"bottomLeft",builtinPlacements:builtInPlacements,prefixCls:dropdownPrefixCls,popupTransitionName:mergedTransitionName,popup:React.createElement("div",{ref:popupRef},popupNode),popupAlign:dropdownAlign,popupVisible:visible,getPopupContainer:getPopupContainer,popupClassName:classNames(dropdownClassName,_defineProperty({},"".concat(dropdownPrefixCls,"-empty"),empty)),popupStyle:popupStyle,getTriggerDOMNode:getTriggerDOMNode}),children)},RefSelectTrigger=React.forwardRef(SelectTrigger);RefSelectTrigger.displayName="SelectTrigger";export default RefSelectTrigger;