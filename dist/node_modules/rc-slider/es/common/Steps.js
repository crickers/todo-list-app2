import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.reverse.js";import"/node_modules/core-js/modules/es.array.sort.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import warning from"/node_modules/rc-util/es/warning.js";var calcPoints=function calcPoints(vertical,marks,dots,step,min,max){warning(!dots||0<step,"`Slider[step]` should be a positive number in order to make Slider[dots] work.");var points=Object.keys(marks).map(parseFloat).sort(function(a,b){return a-b});if(dots&&step)for(var i=min;i<=max;i+=step)-1===points.indexOf(i)&&points.push(i);return points},Steps=function Steps(_ref){var prefixCls=_ref.prefixCls,vertical=_ref.vertical,reverse=_ref.reverse,marks=_ref.marks,dots=_ref.dots,step=_ref.step,included=_ref.included,lowerBound=_ref.lowerBound,upperBound=_ref.upperBound,max=_ref.max,min=_ref.min,dotStyle=_ref.dotStyle,activeDotStyle=_ref.activeDotStyle,elements=calcPoints(vertical,marks,dots,step,min,max).map(function(point){var _classNames,offset="".concat(100*(Math.abs(point-min)/(max-min)),"%"),isActived=!included&&point===upperBound||included&&point<=upperBound&&point>=lowerBound,style=vertical?_objectSpread(_objectSpread({},dotStyle),{},_defineProperty({},reverse?"top":"bottom",offset)):_objectSpread(_objectSpread({},dotStyle),{},_defineProperty({},reverse?"right":"left",offset));isActived&&(style=_objectSpread(_objectSpread({},style),activeDotStyle));var pointClassName=classNames((_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-dot"),!0),_defineProperty(_classNames,"".concat(prefixCls,"-dot-active"),isActived),_defineProperty(_classNames,"".concat(prefixCls,"-dot-reverse"),reverse),_classNames));return React.createElement("span",{className:pointClassName,style:style,key:point})});return React.createElement("div",{className:"".concat(prefixCls,"-step")},elements)};export default Steps;