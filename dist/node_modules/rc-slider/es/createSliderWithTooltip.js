import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";import React from"c:\\node_modules\\react\\index.js";import Tooltip from"/node_modules/rc-slider/es/common/SliderTooltip.js";import Handle from"/node_modules/rc-slider/es/Handle.js";export default function createSliderWithTooltip(Component){var _a;return _a=function(_React$Component){function ComponentWrapper(){var _this;return _classCallCheck(this,ComponentWrapper),_this=_super.apply(this,arguments),_this.state={visibles:{}},_this.handleTooltipVisibleChange=function(index,visible){_this.setState(function(prevState){return{visibles:_objectSpread(_objectSpread({},prevState.visibles),{},_defineProperty({},index,visible))}})},_this.handleWithTooltip=function(_ref){var handleStyleWithIndex,value=_ref.value,dragging=_ref.dragging,index=_ref.index,disabled=_ref.disabled,restProps=_objectWithoutProperties(_ref,["value","dragging","index","disabled"]),_this$props=_this.props,tipFormatter=_this$props.tipFormatter,tipProps=_this$props.tipProps,handleStyle=_this$props.handleStyle,getTooltipContainer=_this$props.getTooltipContainer,_tipProps$prefixCls=tipProps.prefixCls,prefixCls=void 0===_tipProps$prefixCls?"rc-slider-tooltip":_tipProps$prefixCls,_tipProps$overlay=tipProps.overlay,overlay=void 0===_tipProps$overlay?tipFormatter(value):_tipProps$overlay,_tipProps$placement=tipProps.placement,placement=void 0===_tipProps$placement?"top":_tipProps$placement,_tipProps$visible=tipProps.visible,visible=void 0!==_tipProps$visible&&_tipProps$visible,restTooltipProps=_objectWithoutProperties(tipProps,["prefixCls","overlay","placement","visible"]);return handleStyleWithIndex=Array.isArray(handleStyle)?handleStyle[index]||handleStyle[0]:handleStyle,React.createElement(Tooltip,_extends({},restTooltipProps,{getTooltipContainer:getTooltipContainer,prefixCls:prefixCls,overlay:overlay,placement:placement,visible:!disabled&&(_this.state.visibles[index]||dragging)||visible,key:index}),React.createElement(Handle,_extends({},restProps,{style:_objectSpread({},handleStyleWithIndex),value:value,onMouseEnter:function onMouseEnter(){return _this.handleTooltipVisibleChange(index,!0)},onMouseLeave:function onMouseLeave(){return _this.handleTooltipVisibleChange(index,!1)}})))},_this}_inherits(ComponentWrapper,_React$Component);var _super=_createSuper(ComponentWrapper);return _createClass(ComponentWrapper,[{key:"render",value:function render(){return React.createElement(Component,_extends({},this.props,{handle:this.handleWithTooltip}))}}]),ComponentWrapper}(React.Component),_a.defaultProps={tipFormatter:function tipFormatter(value){return value},handleStyle:[{}],tipProps:{},getTooltipContainer:function getTooltipContainer(node){return node.parentNode}},_a}