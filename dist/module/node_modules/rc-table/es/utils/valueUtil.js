import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";var INTERNAL_KEY_PREFIX="RC_TABLE_KEY";function toArray(arr){return void 0===arr||null===arr?[]:Array.isArray(arr)?arr:[arr]}export function getPathValue(record,path){if(!path&&"number"!=typeof path)return record;for(var pathList=toArray(path),current=record,i=0;i<pathList.length;i+=1){if(!current)return null;var prop=pathList[i];current=current[prop]}return current}export function getColumnsKey(columns){var columnKeys=[],keys={};return columns.forEach(function(column){for(var _ref=column||{},key=_ref.key,dataIndex=_ref.dataIndex,mergedKey=key||toArray(dataIndex).join("-")||INTERNAL_KEY_PREFIX;keys[mergedKey];)mergedKey="".concat(mergedKey,"_next");keys[mergedKey]=!0,columnKeys.push(mergedKey)}),columnKeys}export function mergeObject(){function fillProps(obj,clone){clone&&Object.keys(clone).forEach(function(key){var value=clone[key];value&&"object"===_typeof(value)?(obj[key]=obj[key]||{},fillProps(obj[key],value)):obj[key]=value})}for(var merged={},_len=arguments.length,objects=Array(_len),_key=0;_key<_len;_key++)objects[_key]=arguments[_key];return objects.forEach(function(clone){fillProps(merged,clone)}),merged}export function validateValue(val){return null!==val&&val!==void 0}