import"/node_modules/core-js/modules/es.promise.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import{useRef,useState,useEffect}from"c:\\node_modules\\react\\index.js";export function useLayoutState(defaultState){var stateRef=useRef(defaultState),_useState=useState({}),_useState2=_slicedToArray(_useState,2),forceUpdate=_useState2[1],lastPromiseRef=useRef(null),updateBatchRef=useRef([]);return useEffect(function(){return function(){lastPromiseRef.current=null}},[]),[stateRef.current,function setFrameState(updater){updateBatchRef.current.push(updater);var promise=Promise.resolve();lastPromiseRef.current=promise,promise.then(function(){if(lastPromiseRef.current===promise){var prevBatch=updateBatchRef.current,prevState=stateRef.current;updateBatchRef.current=[],prevBatch.forEach(function(batchUpdater){stateRef.current=batchUpdater(stateRef.current)}),lastPromiseRef.current=null,prevState!==stateRef.current&&forceUpdate({})}})}]}export function useTimeoutLock(defaultState){function cleanUp(){window.clearTimeout(timeoutRef.current)}var frameRef=useRef(defaultState||null),timeoutRef=useRef();return useEffect(function(){return cleanUp},[]),[function setState(newState){frameRef.current=newState,cleanUp(),timeoutRef.current=window.setTimeout(function(){frameRef.current=null,timeoutRef.current=void 0},100)},function getState(){return frameRef.current}]}