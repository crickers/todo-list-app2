import"/node_modules/core-js/modules/es.array.reduce.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.array.splice.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _objectSpread from"/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import warning from"/node_modules/rc-util/es/warning.js";import toArray from"/node_modules/rc-util/es/Children/toArray.js";import{INTERNAL_COL_DEFINE}from"/node_modules/rc-table/es/utils/legacyUtil.js";export function convertChildrenToColumns(children){return toArray(children).filter(function(node){return React.isValidElement(node)}).map(function(_ref){var key=_ref.key,props=_ref.props,nodeChildren=props.children,restProps=_objectWithoutProperties(props,["children"]),column=_objectSpread({key:key},restProps);return nodeChildren&&(column.children=convertChildrenToColumns(nodeChildren)),column})}function flatColumns(columns){return columns.reduce(function(list,column){var fixed=column.fixed,parsedFixed=!0===fixed?"left":fixed,subColumns=column.children;return subColumns&&0<subColumns.length?[].concat(_toConsumableArray(list),_toConsumableArray(flatColumns(subColumns).map(function(subColum){return _objectSpread({fixed:parsedFixed},subColum)}))):[].concat(_toConsumableArray(list),[_objectSpread(_objectSpread({},column),{},{fixed:parsedFixed})])},[])}function warningFixed(flattenColumns){for(var col,allFixLeft=!0,i=0;i<flattenColumns.length;i+=1)if(col=flattenColumns[i],allFixLeft&&"left"!==col.fixed)allFixLeft=!1;else if(!allFixLeft&&"left"===col.fixed){warning(!1,"Index ".concat(i-1," of `columns` missing `fixed='left'` prop."));break}for(var _col,allFixRight=!0,_i=flattenColumns.length-1;0<=_i;_i-=1)if(_col=flattenColumns[_i],allFixRight&&"right"!==_col.fixed)allFixRight=!1;else if(!allFixRight&&"right"===_col.fixed){warning(!1,"Index ".concat(_i+1," of `columns` missing `fixed='right'` prop."));break}}function revertForRtl(columns){return columns.map(function(column){var fixed=column.fixed,restProps=_objectWithoutProperties(column,["fixed"]),parsedFixed=fixed;return"left"===fixed?parsedFixed="right":"right"===fixed&&(parsedFixed="left"),_objectSpread({fixed:parsedFixed},restProps)})}function useColumns(_ref2,transformColumns){var prefixCls=_ref2.prefixCls,columns=_ref2.columns,children=_ref2.children,expandable=_ref2.expandable,expandedKeys=_ref2.expandedKeys,getRowKey=_ref2.getRowKey,onTriggerExpand=_ref2.onTriggerExpand,expandIcon=_ref2.expandIcon,rowExpandable=_ref2.rowExpandable,expandIconColumnIndex=_ref2.expandIconColumnIndex,direction=_ref2.direction,expandRowByClick=_ref2.expandRowByClick,columnWidth=_ref2.columnWidth,baseColumns=React.useMemo(function(){return columns||convertChildrenToColumns(children)},[columns,children]),withExpandColumns=React.useMemo(function(){if(expandable){var _expandColumn,expandColIndex=expandIconColumnIndex||0,prevColumn=baseColumns[expandColIndex],expandColumn=(_expandColumn={},_defineProperty(_expandColumn,INTERNAL_COL_DEFINE,{className:"".concat(prefixCls,"-expand-icon-col")}),_defineProperty(_expandColumn,"title",""),_defineProperty(_expandColumn,"fixed",prevColumn?prevColumn.fixed:null),_defineProperty(_expandColumn,"className","".concat(prefixCls,"-row-expand-icon-cell")),_defineProperty(_expandColumn,"width",columnWidth),_defineProperty(_expandColumn,"render",function render(_,record,index){var rowKey=getRowKey(record,index),expanded=expandedKeys.has(rowKey),recordExpandable=!rowExpandable||rowExpandable(record),icon=expandIcon({prefixCls:prefixCls,expanded:expanded,expandable:recordExpandable,record:record,onExpand:onTriggerExpand});return expandRowByClick?React.createElement("span",{onClick:function onClick(e){return e.stopPropagation()}},icon):icon}),_expandColumn),cloneColumns=baseColumns.slice();return 0<=expandColIndex&&cloneColumns.splice(expandColIndex,0,expandColumn),cloneColumns}return baseColumns},[expandable,baseColumns,getRowKey,expandedKeys,expandIcon,direction]),mergedColumns=React.useMemo(function(){var finalColumns=withExpandColumns;return transformColumns&&(finalColumns=transformColumns(finalColumns)),finalColumns.length||(finalColumns=[{render:function render(){return null}}]),finalColumns},[transformColumns,withExpandColumns,direction]),flattenColumns=React.useMemo(function(){return"rtl"===direction?revertForRtl(flatColumns(mergedColumns)):flatColumns(mergedColumns)},[mergedColumns,direction]);return[mergedColumns,flattenColumns]}export default useColumns;