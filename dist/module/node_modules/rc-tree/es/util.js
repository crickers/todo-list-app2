import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.array.splice.js";import"/node_modules/core-js/modules/es.string.includes.js";import"/node_modules/core-js/modules/es.string.split.js";import"/node_modules/core-js/modules/es.string.starts-with.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import warning from"/node_modules/rc-util/es/warning.js";import TreeNode from"/node_modules/rc-tree/es/TreeNode.js";export function arrDel(list,value){var clone=list.slice(),index=clone.indexOf(value);return 0<=index&&clone.splice(index,1),clone}export function arrAdd(list,value){var clone=list.slice();return-1===clone.indexOf(value)&&clone.push(value),clone}export function posToArr(pos){return pos.split("-")}export function getPosition(level,index){return"".concat(level,"-").concat(index)}export function isTreeNode(node){return node&&node.type&&node.type.isTreeNode}export function getDragChildrenKeys(dragNodeKey,keyEntities){function dig(){var list=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];list.forEach(function(_ref){var key=_ref.key,children=_ref.children;dragChildrenKeys.push(key),dig(children)})}var dragChildrenKeys=[],entity=keyEntities[dragNodeKey];return dig(entity.children),dragChildrenKeys}export function isLastChild(treeNodeEntity){if(treeNodeEntity.parent){var posArr=posToArr(treeNodeEntity.pos);return+posArr[posArr.length-1]===treeNodeEntity.parent.children.length-1}return!1}export function isFirstChild(treeNodeEntity){var posArr=posToArr(treeNodeEntity.pos);return 0===+posArr[posArr.length-1]}export function calcDropPosition(event,targetNode,indent,startMousePosition,allowDrop,flattenedNodes,keyEntities,expandKeys,direction){var _abstractDropNodeEnti,clientX=event.clientX,clientY=event.clientY,_event$target$getBoun=event.target.getBoundingClientRect(),top=_event$target$getBoun.top,height=_event$target$getBoun.height,horizontalMouseOffset=("rtl"===direction?-1:1)*(((null===startMousePosition||void 0===startMousePosition?void 0:startMousePosition.x)||0)-clientX),rawDropLevelOffset=(horizontalMouseOffset-12)/indent,abstractDropNodeEntity=keyEntities[targetNode.props.eventKey];if(clientY<top+height/2){var nodeIndex=flattenedNodes.findIndex(function(flattenedNode){return flattenedNode.data.key===abstractDropNodeEntity.key}),prevNodeIndex=0>=nodeIndex?0:nodeIndex-1,prevNodeKey=flattenedNodes[prevNodeIndex].data.key;abstractDropNodeEntity=keyEntities[prevNodeKey]}for(var abstractDragOverEntity=abstractDropNodeEntity,dragOverNodeKey=abstractDropNodeEntity.key,dropPosition=0,dropLevelOffset=0,i=0;i<rawDropLevelOffset&&isLastChild(abstractDropNodeEntity);i+=1)abstractDropNodeEntity=abstractDropNodeEntity.parent,dropLevelOffset+=1;var abstractDropDataNode=abstractDropNodeEntity.node,dropAllowed=!0;return isFirstChild(abstractDropNodeEntity)&&0===abstractDropNodeEntity.level&&clientY<top+height/2&&allowDrop({dropNode:abstractDropDataNode,dropPosition:-1})&&abstractDropNodeEntity.key===targetNode.props.eventKey?dropPosition=-1:(abstractDragOverEntity.children||[]).length&&expandKeys.includes(dragOverNodeKey)?allowDrop({dropNode:abstractDropDataNode,dropPosition:0})?dropPosition=0:dropAllowed=!1:0===dropLevelOffset?-1.5<rawDropLevelOffset?allowDrop({dropNode:abstractDropDataNode,dropPosition:1})?dropPosition=1:dropAllowed=!1:allowDrop({dropNode:abstractDropDataNode,dropPosition:0})?dropPosition=0:allowDrop({dropNode:abstractDropDataNode,dropPosition:1})?dropPosition=1:dropAllowed=!1:allowDrop({dropNode:abstractDropDataNode,dropPosition:1})?dropPosition=1:dropAllowed=!1,{dropPosition:dropPosition,dropLevelOffset:dropLevelOffset,dropTargetKey:abstractDropNodeEntity.key,dropTargetPos:abstractDropNodeEntity.pos,dragOverNodeKey:dragOverNodeKey,dropContainerKey:0===dropPosition?null:(null===(_abstractDropNodeEnti=abstractDropNodeEntity.parent)||void 0===_abstractDropNodeEnti?void 0:_abstractDropNodeEnti.key)||null,dropAllowed:dropAllowed}}export function calcSelectedKeys(selectedKeys,props){if(selectedKeys){var multiple=props.multiple;return multiple?selectedKeys.slice():selectedKeys.length?[selectedKeys[0]]:selectedKeys}}var internalProcessProps=function internalProcessProps(props){return props};export function convertDataToTree(treeData,processor){if(!treeData)return[];var _ref2$processProps=(processor||{}).processProps,processProps=void 0===_ref2$processProps?internalProcessProps:_ref2$processProps,list=Array.isArray(treeData)?treeData:[treeData];return list.map(function(_ref3){var children=_ref3.children,props=_objectWithoutProperties(_ref3,["children"]),childrenNodes=convertDataToTree(children,processor);return React.createElement(TreeNode,processProps(props),childrenNodes)})}export function parseCheckedKeys(keys){if(!keys)return null;var keyProps;if(Array.isArray(keys))keyProps={checkedKeys:keys,halfCheckedKeys:void 0};else if("object"===_typeof(keys))keyProps={checkedKeys:keys.checked||void 0,halfCheckedKeys:keys.halfChecked||void 0};else return warning(!1,"`checkedKeys` is not an array or an object"),null;return keyProps}export function conductExpandParent(keyList,keyEntities){function conductUp(key){if(!expandedKeys.has(key)){var entity=keyEntities[key];if(entity){expandedKeys.add(key);var parent=entity.parent,node=entity.node;node.disabled||parent&&conductUp(parent.key)}}}var expandedKeys=new Set;return(keyList||[]).forEach(function(key){conductUp(key)}),_toConsumableArray(expandedKeys)}export function getDataAndAria(props){var omitProps={};return Object.keys(props).forEach(function(key){(key.startsWith("data-")||key.startsWith("aria-"))&&(omitProps[key]=props[key])}),omitProps}