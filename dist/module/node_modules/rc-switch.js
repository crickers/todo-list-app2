import"/node_modules/core-js/modules/es.object.assign.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import _objectWithoutProperties from"/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import useMergedState from"/node_modules/rc-util/es/hooks/useMergedState.js";import KeyCode from"/node_modules/rc-util/es/KeyCode.js";var Switch=React.forwardRef(function(_ref,ref){function triggerChange(newChecked,event){var mergedChecked=innerChecked;return disabled||(mergedChecked=newChecked,setInnerChecked(mergedChecked),null===onChange||void 0===onChange?void 0:onChange(mergedChecked,event)),mergedChecked}var _classNames,_ref$prefixCls=_ref.prefixCls,prefixCls=void 0===_ref$prefixCls?"rc-switch":_ref$prefixCls,className=_ref.className,checked=_ref.checked,defaultChecked=_ref.defaultChecked,disabled=_ref.disabled,loadingIcon=_ref.loadingIcon,checkedChildren=_ref.checkedChildren,unCheckedChildren=_ref.unCheckedChildren,onClick=_ref.onClick,onChange=_ref.onChange,onKeyDown=_ref.onKeyDown,restProps=_objectWithoutProperties(_ref,["prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown"]),_useMergedState=useMergedState(!1,{value:checked,defaultValue:defaultChecked}),_useMergedState2=_slicedToArray(_useMergedState,2),innerChecked=_useMergedState2[0],setInnerChecked=_useMergedState2[1],switchClassName=classNames(prefixCls,className,(_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-checked"),innerChecked),_defineProperty(_classNames,"".concat(prefixCls,"-disabled"),disabled),_classNames));return React.createElement("button",Object.assign({},restProps,{type:"button",role:"switch","aria-checked":innerChecked,disabled:disabled,className:switchClassName,ref:ref,onKeyDown:function onInternalKeyDown(e){e.which===KeyCode.LEFT?triggerChange(!1,e):e.which===KeyCode.RIGHT&&triggerChange(!0,e),null===onKeyDown||void 0===onKeyDown?void 0:onKeyDown(e)},onClick:function onInternalClick(e){var ret=triggerChange(!innerChecked,e);null===onClick||void 0===onClick?void 0:onClick(ret,e)}}),loadingIcon,React.createElement("span",{className:"".concat(prefixCls,"-inner")},innerChecked?checkedChildren:unCheckedChildren))});Switch.displayName="Switch";export default Switch;