import"/node_modules/core-js/modules/es.array.slice.js";import"/node_modules/core-js/modules/es.promise.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import RcUpload from"/node_modules/rc-upload.js";import classNames from"/node_modules/classnames.js";import Dragger from"/node_modules/antd/es/upload/Dragger.js";import UploadList from"/node_modules/antd/es/upload/UploadList.js";import{T,fileToObject,getFileItem,removeFileItem}from"/node_modules/antd/es/upload/utils.js";import LocaleReceiver from"/node_modules/antd/es/locale-provider/LocaleReceiver.js";import defaultLocale from"/node_modules/antd/es/locale/default.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import devWarning from"/node_modules/antd/es/_util/devWarning.js";import useForceUpdate from"/node_modules/antd/es/_util/hooks/useForceUpdate.js";import useFreshState from"/node_modules/antd/es/upload/useFreshState.js";var InternalUpload=function InternalUpload(props,ref){var _classNames2,fileListProp=props.fileList,defaultFileList=props.defaultFileList,onRemove=props.onRemove,showUploadList=props.showUploadList,listType=props.listType,onPreview=props.onPreview,onDownload=props.onDownload,onChange=props.onChange,previewFile=props.previewFile,disabled=props.disabled,propLocale=props.locale,iconRender=props.iconRender,isImageUrl=props.isImageUrl,progress=props.progress,customizePrefixCls=props.prefixCls,className=props.className,type=props.type,children=props.children,style=props.style,itemRender=props.itemRender,maxCount=props.maxCount,_React$useState=React.useState("drop"),_React$useState2=_slicedToArray(_React$useState,2),dragState=_React$useState2[0],setDragState=_React$useState2[1],forceUpdate=useForceUpdate(),_useFreshState=useFreshState(fileListProp||defaultFileList||[],fileListProp),_useFreshState2=_slicedToArray(_useFreshState,2),getFileList=_useFreshState2[0],setFileList=_useFreshState2[1],upload=React.useRef();React.useEffect(function(){devWarning("fileList"in props||!("value"in props),"Upload","`value` is not a valid prop, do you mean `fileList`?"),devWarning(!("transformFile"in props),"Upload","`transformFile` is deprecated. Please use `beforeUpload` directly.")},[]),React.useEffect(function(){var timestamp=Date.now();(fileListProp||[]).forEach(function(file,index){var _a;file.uid=null!==(_a=file.uid)&&void 0!==_a?_a:"__AUTO__".concat(timestamp,"_").concat(index,"__")})},[fileListProp]);var onInternalChange=function onInternalChange(info){var cloneList=_toConsumableArray(info.fileList);1===maxCount?cloneList=cloneList.slice(-1):maxCount&&(cloneList=cloneList.slice(0,maxCount)),setFileList(cloneList),null===onChange||void 0===onChange?void 0:onChange(_extends(_extends({},info),{fileList:cloneList}))},onStart=function onStart(file){var targetItem=fileToObject(file);targetItem.status="uploading";var nextFileList=getFileList().concat(),fileIndex=nextFileList.findIndex(function(_ref){var uid=_ref.uid;return uid===targetItem.uid});-1===fileIndex?nextFileList.push(targetItem):nextFileList[fileIndex]=targetItem,onInternalChange({file:targetItem,fileList:nextFileList})},onSuccess=function onSuccess(response,file,xhr){try{"string"==typeof response&&(response=JSON.parse(response))}catch(e){}var targetItem=getFileItem(file,getFileList());targetItem&&(targetItem.status="done",targetItem.response=response,targetItem.xhr=xhr,onInternalChange({file:_extends({},targetItem),fileList:getFileList().concat()}))},onProgress=function onProgress(e,file){var targetItem=getFileItem(file,getFileList());targetItem&&(targetItem.percent=e.percent,onInternalChange({event:e,file:_extends({},targetItem),fileList:getFileList().concat()}))},onError=function onError(error,response,file){var targetItem=getFileItem(file,getFileList());targetItem&&(targetItem.error=error,targetItem.response=response,targetItem.status="error",onInternalChange({file:_extends({},targetItem),fileList:getFileList().concat()}))},handleRemove=function handleRemove(file){var currentFile;Promise.resolve("function"==typeof onRemove?onRemove(file):onRemove).then(function(ret){var _a;if(!1!==ret){var fileList=getFileList(),removedFileList=removeFileItem(file,fileList);removedFileList&&(currentFile=_extends(_extends({},file),{status:"removed"}),null===fileList||void 0===fileList?void 0:fileList.forEach(function(item){var matchKey=void 0===currentFile.uid?"name":"uid";item[matchKey]===currentFile[matchKey]&&(item.status="removed")}),null===(_a=upload.current)||void 0===_a?void 0:_a.abort(currentFile),onInternalChange({file:currentFile,fileList:removedFileList}))}})},onFileDrop=function onFileDrop(e){setDragState(e.type)};React.useImperativeHandle(ref,function(){return{onStart:onStart,onSuccess:onSuccess,onProgress:onProgress,onError:onError,fileList:getFileList(),upload:upload.current,forceUpdate:forceUpdate}});var _React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,prefixCls=getPrefixCls("upload",customizePrefixCls),rcUploadProps=_extends(_extends({onStart:onStart,onError:onError,onProgress:onProgress,onSuccess:onSuccess},props),{prefixCls:prefixCls,beforeUpload:function beforeUpload(file,fileListArgs){var beforeUploadProp=props.beforeUpload;if(!beforeUploadProp)return!0;var result=beforeUploadProp(file,fileListArgs);if(!1===result){var uniqueList=[];return getFileList().concat(fileListArgs.map(fileToObject)).forEach(function(f){uniqueList.every(function(uf){return uf.uid!==f.uid})&&uniqueList.push(f)}),onInternalChange({file:file,fileList:uniqueList}),!1}return!(result&&result.then)||result},onChange:void 0});delete rcUploadProps.className,delete rcUploadProps.style,(!children||disabled)&&delete rcUploadProps.id;var renderUploadList=function renderUploadList(button){return showUploadList?React.createElement(LocaleReceiver,{componentName:"Upload",defaultLocale:defaultLocale.Upload},function(locale){var _ref2="boolean"==typeof showUploadList?{}:showUploadList,showRemoveIcon=_ref2.showRemoveIcon,showPreviewIcon=_ref2.showPreviewIcon,showDownloadIcon=_ref2.showDownloadIcon,removeIcon=_ref2.removeIcon,downloadIcon=_ref2.downloadIcon;return React.createElement(UploadList,{listType:listType,items:getFileList(!0),previewFile:previewFile,onPreview:onPreview,onDownload:onDownload,onRemove:handleRemove,showRemoveIcon:!disabled&&showRemoveIcon,showPreviewIcon:showPreviewIcon,showDownloadIcon:showDownloadIcon,removeIcon:removeIcon,downloadIcon:downloadIcon,iconRender:iconRender,locale:_extends(_extends({},locale),propLocale),isImageUrl:isImageUrl,progress:progress,appendAction:button,itemRender:itemRender})}):button};if("drag"===type){var _classNames,dragCls=classNames(prefixCls,(_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-drag"),!0),_defineProperty(_classNames,"".concat(prefixCls,"-drag-uploading"),getFileList().some(function(file){return"uploading"===file.status})),_defineProperty(_classNames,"".concat(prefixCls,"-drag-hover"),"dragover"===dragState),_defineProperty(_classNames,"".concat(prefixCls,"-disabled"),disabled),_defineProperty(_classNames,"".concat(prefixCls,"-rtl"),"rtl"===direction),_classNames),className);return React.createElement("span",null,React.createElement("div",{className:dragCls,onDrop:onFileDrop,onDragOver:onFileDrop,onDragLeave:onFileDrop,style:style},React.createElement(RcUpload,_extends({},rcUploadProps,{ref:upload,className:"".concat(prefixCls,"-btn")}),React.createElement("div",{className:"".concat(prefixCls,"-drag-container")},children))),renderUploadList())}var uploadButtonCls=classNames(prefixCls,(_classNames2={},_defineProperty(_classNames2,"".concat(prefixCls,"-select"),!0),_defineProperty(_classNames2,"".concat(prefixCls,"-select-").concat(listType),!0),_defineProperty(_classNames2,"".concat(prefixCls,"-disabled"),disabled),_defineProperty(_classNames2,"".concat(prefixCls,"-rtl"),"rtl"===direction),_classNames2)),uploadButton=React.createElement("div",{className:uploadButtonCls,style:children?void 0:{display:"none"}},React.createElement(RcUpload,_extends({},rcUploadProps,{ref:upload})));return"picture-card"===listType?React.createElement("span",{className:classNames("".concat(prefixCls,"-picture-card-wrapper"),className)},renderUploadList(uploadButton)):React.createElement("span",{className:className},uploadButton,renderUploadList())},Upload=React.forwardRef(InternalUpload);Upload.Dragger=Dragger,Upload.displayName="Upload",Upload.defaultProps={type:"select",multiple:!1,action:"",data:{},accept:"",beforeUpload:T,showUploadList:!0,listType:"text",className:"",disabled:!1,supportServerRender:!0};export default Upload;