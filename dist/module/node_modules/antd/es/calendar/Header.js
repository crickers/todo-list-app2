import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import Select from"/node_modules/antd/es/select.js";import{Group,Button}from"/node_modules/antd/es/radio.js";var YearSelectOffset=10,YearSelectTotal=20;function YearSelect(props){var fullscreen=props.fullscreen,validRange=props.validRange,generateConfig=props.generateConfig,locale=props.locale,prefixCls=props.prefixCls,value=props.value,_onChange=props.onChange,divRef=props.divRef,year=generateConfig.getYear(value),start=year-YearSelectOffset,end=start+YearSelectTotal;validRange&&(start=generateConfig.getYear(validRange[0]),end=generateConfig.getYear(validRange[1])+1);for(var suffix=locale&&"\u5E74"===locale.year?"\u5E74":"",options=[],index=start;index<end;index++)options.push({label:"".concat(index).concat(suffix),value:index});return React.createElement(Select,{size:fullscreen?void 0:"small",options:options,value:year,className:"".concat(prefixCls,"-year-select"),onChange:function onChange(numYear){var newDate=generateConfig.setYear(value,numYear);if(validRange){var _validRange=_slicedToArray(validRange,2),startDate=_validRange[0],endDate=_validRange[1],newYear=generateConfig.getYear(newDate),newMonth=generateConfig.getMonth(newDate);newYear===generateConfig.getYear(endDate)&&newMonth>generateConfig.getMonth(endDate)&&(newDate=generateConfig.setMonth(newDate,generateConfig.getMonth(endDate))),newYear===generateConfig.getYear(startDate)&&newMonth<generateConfig.getMonth(startDate)&&(newDate=generateConfig.setMonth(newDate,generateConfig.getMonth(startDate)))}_onChange(newDate)},getPopupContainer:function getPopupContainer(){return divRef.current}})}function MonthSelect(props){var prefixCls=props.prefixCls,fullscreen=props.fullscreen,validRange=props.validRange,value=props.value,generateConfig=props.generateConfig,locale=props.locale,_onChange2=props.onChange,divRef=props.divRef,month=generateConfig.getMonth(value),start=0,end=11;if(validRange){var _validRange2=_slicedToArray(validRange,2),rangeStart=_validRange2[0],rangeEnd=_validRange2[1],currentYear=generateConfig.getYear(value);generateConfig.getYear(rangeEnd)===currentYear&&(end=generateConfig.getMonth(rangeEnd)),generateConfig.getYear(rangeStart)===currentYear&&(start=generateConfig.getMonth(rangeStart))}for(var months=locale.shortMonths||generateConfig.locale.getShortMonths(locale.locale),options=[],index=start;index<=end;index+=1)options.push({label:months[index],value:index});return React.createElement(Select,{size:fullscreen?void 0:"small",className:"".concat(prefixCls,"-month-select"),value:month,options:options,onChange:function onChange(newMonth){_onChange2(generateConfig.setMonth(value,newMonth))},getPopupContainer:function getPopupContainer(){return divRef.current}})}function ModeSwitch(props){var prefixCls=props.prefixCls,locale=props.locale,mode=props.mode,fullscreen=props.fullscreen,onModeChange=props.onModeChange;return React.createElement(Group,{onChange:function onChange(_ref){var value=_ref.target.value;onModeChange(value)},value:mode,size:fullscreen?void 0:"small",className:"".concat(prefixCls,"-mode-switch")},React.createElement(Button,{value:"month"},locale.month),React.createElement(Button,{value:"year"},locale.year))}function CalendarHeader(props){var prefixCls=props.prefixCls,fullscreen=props.fullscreen,mode=props.mode,onChange=props.onChange,onModeChange=props.onModeChange,divRef=React.useRef(null),sharedProps=_extends(_extends({},props),{onChange:onChange,fullscreen:fullscreen,divRef:divRef});return React.createElement("div",{className:"".concat(prefixCls,"-header"),ref:divRef},React.createElement(YearSelect,sharedProps),"month"===mode&&React.createElement(MonthSelect,sharedProps),React.createElement(ModeSwitch,_extends({},sharedProps,{onModeChange:onModeChange})))}export default CalendarHeader;