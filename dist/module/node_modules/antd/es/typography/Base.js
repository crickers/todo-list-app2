import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.slice.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _typeof from"/node_modules/@babel/runtime/helpers/esm/typeof.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import toArray from"/node_modules/rc-util/es/Children/toArray.js";import copy from"/node_modules/copy-to-clipboard.js";import omit from"/node_modules/rc-util/es/omit.js";import EditOutlined from"/node_modules/@ant-design/icons/es/icons/EditOutlined.js";import CheckOutlined from"/node_modules/@ant-design/icons/es/icons/CheckOutlined.js";import CopyOutlined from"/node_modules/@ant-design/icons/es/icons/CopyOutlined.js";import ResizeObserver from"/node_modules/rc-resize-observer.js";import{configConsumerProps,ConfigContext}from"/node_modules/antd/es/config-provider.js";import LocaleReceiver from"/node_modules/antd/es/locale-provider/LocaleReceiver.js";import devWarning from"/node_modules/antd/es/_util/devWarning.js";import TransButton from"/node_modules/antd/es/_util/transButton.js";import raf from"/node_modules/antd/es/_util/raf.js";import{isStyleSupport}from"/node_modules/antd/es/_util/styleChecker.js";import Tooltip from"/node_modules/antd/es/tooltip.js";import Typography from"/node_modules/antd/es/typography/Typography.js";import Editable from"/node_modules/antd/es/typography/Editable.js";import measure from"/node_modules/antd/es/typography/util.js";var isLineClampSupport=isStyleSupport("webkitLineClamp"),isTextOverflowSupport=isStyleSupport("textOverflow");function wrapperDecorations(_ref,content){function wrap(needed,tag){needed&&(currentContent=React.createElement(tag,{},currentContent))}var mark=_ref.mark,code=_ref.code,underline=_ref.underline,del=_ref["delete"],strong=_ref.strong,keyboard=_ref.keyboard,currentContent=content;return wrap(strong,"strong"),wrap(underline,"u"),wrap(del,"del"),wrap(code,"code"),wrap(mark,"mark"),wrap(keyboard,"kbd"),currentContent}var ELLIPSIS_STR="...",Base=function(_React$Component){function Base(){var _this;return _classCallCheck(this,Base),_this=_super.apply(this,arguments),_this.contentRef=React.createRef(),_this.state={edit:!1,copied:!1,ellipsisText:"",ellipsisContent:null,isEllipsis:!1,expanded:!1,clientRendered:!1},_this.getPrefixCls=function(){var customizePrefixCls=_this.props.prefixCls,getPrefixCls=_this.context.getPrefixCls;return getPrefixCls("typography",customizePrefixCls)},_this.onExpandClick=function(e){var _this$getEllipsis=_this.getEllipsis(),onExpand=_this$getEllipsis.onExpand;_this.setState({expanded:!0}),onExpand&&onExpand(e)},_this.onEditClick=function(){_this.triggerEdit(!0)},_this.onEditChange=function(value){var _this$getEditable=_this.getEditable(),onChange=_this$getEditable.onChange;onChange&&onChange(value),_this.triggerEdit(!1)},_this.onEditCancel=function(){_this.triggerEdit(!1)},_this.onCopyClick=function(e){e.preventDefault();var _this$props=_this.props,children=_this$props.children,copyable=_this$props.copyable,copyConfig=_extends({},"object"===_typeof(copyable)?copyable:null);void 0===copyConfig.text&&(copyConfig.text=children+""),copy(copyConfig.text||""),_this.setState({copied:!0},function(){copyConfig.onCopy&&copyConfig.onCopy(),_this.copyId=window.setTimeout(function(){_this.setState({copied:!1})},3e3)})},_this.setEditRef=function(node){_this.editIcon=node},_this.triggerEdit=function(edit){var _this$getEditable2=_this.getEditable(),onStart=_this$getEditable2.onStart;edit&&onStart&&onStart(),_this.setState({edit:edit},function(){!edit&&_this.editIcon&&_this.editIcon.focus()})},_this.resizeOnNextFrame=function(){raf.cancel(_this.rafId),_this.rafId=raf(function(){_this.syncEllipsis()})},_this}_inherits(Base,_React$Component);var _super=_createSuper(Base);return _createClass(Base,[{key:"componentDidMount",value:function componentDidMount(){this.setState({clientRendered:!0}),this.resizeOnNextFrame()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){var children=this.props.children,ellipsis=this.getEllipsis(),prevEllipsis=this.getEllipsis(prevProps);(children!==prevProps.children||ellipsis.rows!==prevEllipsis.rows)&&this.resizeOnNextFrame()}},{key:"componentWillUnmount",value:function componentWillUnmount(){window.clearTimeout(this.copyId),raf.cancel(this.rafId)}},{key:"getEditable",value:function getEditable(props){var edit=this.state.edit,_ref2=props||this.props,editable=_ref2.editable;return editable?_extends({editing:edit},"object"===_typeof(editable)?editable:null):{editing:edit}}},{key:"getEllipsis",value:function getEllipsis(props){var _ref3=props||this.props,ellipsis=_ref3.ellipsis;return ellipsis?_extends({rows:1,expandable:!1},"object"===_typeof(ellipsis)?ellipsis:null):{}}},{key:"canUseCSSEllipsis",value:function canUseCSSEllipsis(){var clientRendered=this.state.clientRendered,_this$props2=this.props,editable=_this$props2.editable,copyable=_this$props2.copyable,_this$getEllipsis2=this.getEllipsis(),rows=_this$getEllipsis2.rows,expandable=_this$getEllipsis2.expandable,suffix=_this$getEllipsis2.suffix,onEllipsis=_this$getEllipsis2.onEllipsis,tooltip=_this$getEllipsis2.tooltip;return!(suffix||tooltip)&&!(editable||copyable||expandable||!clientRendered||onEllipsis)&&(1===rows?isTextOverflowSupport:isLineClampSupport)}},{key:"syncEllipsis",value:function syncEllipsis(){var _this$state=this.state,ellipsisText=_this$state.ellipsisText,isEllipsis=_this$state.isEllipsis,expanded=_this$state.expanded,_this$getEllipsis3=this.getEllipsis(),rows=_this$getEllipsis3.rows,suffix=_this$getEllipsis3.suffix,onEllipsis=_this$getEllipsis3.onEllipsis,children=this.props.children;if(rows&&!(0>rows)&&this.contentRef.current&&!expanded&&!this.canUseCSSEllipsis()){devWarning(toArray(children).every(function(child){return"string"==typeof child}),"Typography","`ellipsis` should use string as children only.");var _measure=measure(this.contentRef.current,{rows:rows,suffix:suffix},children,this.renderOperations(!0),ELLIPSIS_STR),content=_measure.content,text=_measure.text,ellipsis=_measure.ellipsis;(ellipsisText!==text||isEllipsis!==ellipsis)&&(this.setState({ellipsisText:text,ellipsisContent:content,isEllipsis:ellipsis}),isEllipsis!==ellipsis&&onEllipsis&&onEllipsis(ellipsis))}}},{key:"renderExpand",value:function renderExpand(forceRender){var _this$getEllipsis4=this.getEllipsis(),expandable=_this$getEllipsis4.expandable,symbol=_this$getEllipsis4.symbol,_this$state2=this.state,expanded=_this$state2.expanded,isEllipsis=_this$state2.isEllipsis;if(!expandable)return null;if(!forceRender&&(expanded||!isEllipsis))return null;var expandContent;return expandContent=symbol?symbol:this.expandStr,React.createElement("a",{key:"expand",className:"".concat(this.getPrefixCls(),"-expand"),onClick:this.onExpandClick,"aria-label":this.expandStr},expandContent)}},{key:"renderEdit",value:function renderEdit(){var editable=this.props.editable;if(editable){var icon=editable.icon,tooltip=editable.tooltip,title=toArray(tooltip)[0]||this.editStr,ariaLabel="string"==typeof title?title:"";return React.createElement(Tooltip,{key:"edit",title:!1===tooltip?"":title},React.createElement(TransButton,{ref:this.setEditRef,className:"".concat(this.getPrefixCls(),"-edit"),onClick:this.onEditClick,"aria-label":ariaLabel},icon||React.createElement(EditOutlined,{role:"button"})))}}},{key:"renderCopy",value:function renderCopy(){var copied=this.state.copied,copyable=this.props.copyable;if(copyable){var prefixCls=this.getPrefixCls(),tooltips=copyable.tooltips,tooltipNodes=toArray(tooltips);0===tooltipNodes.length&&(tooltipNodes=[this.copyStr,this.copiedStr]);var title=copied?tooltipNodes[1]:tooltipNodes[0],ariaLabel="string"==typeof title?title:"",icons=toArray(copyable.icon);return React.createElement(Tooltip,{key:"copy",title:!1===tooltips?"":title},React.createElement(TransButton,{className:classNames("".concat(prefixCls,"-copy"),copied&&"".concat(prefixCls,"-copy-success")),onClick:this.onCopyClick,"aria-label":ariaLabel},copied?icons[1]||React.createElement(CheckOutlined,null):icons[0]||React.createElement(CopyOutlined,null)))}}},{key:"renderEditInput",value:function renderEditInput(){var _this$props3=this.props,children=_this$props3.children,className=_this$props3.className,style=_this$props3.style,direction=this.context.direction,_this$getEditable3=this.getEditable(),maxLength=_this$getEditable3.maxLength,autoSize=_this$getEditable3.autoSize;return React.createElement(Editable,{value:"string"==typeof children?children:"",onSave:this.onEditChange,onCancel:this.onEditCancel,prefixCls:this.getPrefixCls(),className:className,style:style,direction:direction,maxLength:maxLength,autoSize:autoSize})}},{key:"renderOperations",value:function renderOperations(forceRenderExpanded){return[this.renderExpand(forceRenderExpanded),this.renderEdit(),this.renderCopy()].filter(function(node){return node})}},{key:"renderContent",value:function renderContent(){var _this2=this,_this$state3=this.state,ellipsisContent=_this$state3.ellipsisContent,isEllipsis=_this$state3.isEllipsis,expanded=_this$state3.expanded,_a=this.props,component=_a.component,children=_a.children,className=_a.className,type=_a.type,disabled=_a.disabled,style=_a.style,restProps=__rest(_a,["component","children","className","type","disabled","style"]),direction=this.context.direction,_this$getEllipsis5=this.getEllipsis(),rows=_this$getEllipsis5.rows,suffix=_this$getEllipsis5.suffix,tooltip=_this$getEllipsis5.tooltip,prefixCls=this.getPrefixCls(),textProps=omit(restProps,["prefixCls","editable","copyable","ellipsis","mark","code","delete","underline","strong","keyboard"].concat(_toConsumableArray(configConsumerProps))),cssEllipsis=this.canUseCSSEllipsis(),cssLineClamp=rows&&1<rows&&cssEllipsis,textNode=children;if(rows&&isEllipsis&&!expanded&&!cssEllipsis){var title=restProps.title,restContent=title||"";title||"string"!=typeof children&&"number"!=typeof children||(restContent=children+""),restContent=null===restContent||void 0===restContent?void 0:restContent.slice(((ellipsisContent||"")+"").length),textNode=React.createElement(React.Fragment,null,ellipsisContent,React.createElement("span",{title:restContent,"aria-hidden":"true"},ELLIPSIS_STR),suffix),tooltip&&(textNode=React.createElement(Tooltip,{title:!0===tooltip?children:tooltip},React.createElement("span",null,textNode)))}else textNode=React.createElement(React.Fragment,null,children,suffix);return textNode=wrapperDecorations(this.props,textNode),React.createElement(LocaleReceiver,{componentName:"Text"},function(_ref4){var _classNames,edit=_ref4.edit,copyStr=_ref4.copy,copied=_ref4.copied,expand=_ref4.expand;return _this2.editStr=edit,_this2.copyStr=copyStr,_this2.copiedStr=copied,_this2.expandStr=expand,React.createElement(ResizeObserver,{onResize:_this2.resizeOnNextFrame,disabled:!rows},React.createElement(Typography,_extends({className:classNames((_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-").concat(type),type),_defineProperty(_classNames,"".concat(prefixCls,"-disabled"),disabled),_defineProperty(_classNames,"".concat(prefixCls,"-ellipsis"),rows),_defineProperty(_classNames,"".concat(prefixCls,"-ellipsis-single-line"),1===rows&&cssEllipsis),_defineProperty(_classNames,"".concat(prefixCls,"-ellipsis-multiple-line"),cssLineClamp),_classNames),className),style:_extends(_extends({},style),{WebkitLineClamp:cssLineClamp?rows:void 0}),component:component,ref:_this2.contentRef,direction:direction},textProps),textNode,_this2.renderOperations()))})}},{key:"render",value:function render(){var _this$getEditable4=this.getEditable(),editing=_this$getEditable4.editing;return editing?this.renderEditInput():this.renderContent()}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(nextProps){var children=nextProps.children,editable=nextProps.editable;return devWarning(!editable||"string"==typeof children,"Typography","When `editable` is enabled, the `children` should use string."),{}}}]),Base}(React.Component);Base.contextType=ConfigContext,Base.defaultProps={children:""};export default Base;