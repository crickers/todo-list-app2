import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.sort.js";import"/node_modules/core-js/modules/es.array.splice.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import omit from"/node_modules/rc-util/es/omit.js";import Checkbox from"/node_modules/antd/es/checkbox/Checkbox.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";export var GroupContext=React.createContext(null);var CheckboxGroup=function CheckboxGroup(_a){var defaultValue=_a.defaultValue,children=_a.children,_a$options=_a.options,options=void 0===_a$options?[]:_a$options,customizePrefixCls=_a.prefixCls,className=_a.className,style=_a.style,onChange=_a.onChange,restProps=__rest(_a,["defaultValue","children","options","prefixCls","className","style","onChange"]),_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,_React$useState=React.useState(restProps.value||defaultValue||[]),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1],_React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),registeredValues=_React$useState4[0],setRegisteredValues=_React$useState4[1];React.useEffect(function(){"value"in restProps&&setValue(restProps.value||[])},[restProps.value]);var getOptions=function getOptions(){return options.map(function(option){return"string"==typeof option?{label:option,value:option}:option})},toggleOption=function toggleOption(option){var optionIndex=value.indexOf(option.value),newValue=_toConsumableArray(value);if(-1===optionIndex?newValue.push(option.value):newValue.splice(optionIndex,1),"value"in restProps||setValue(newValue),onChange){var opts=getOptions();onChange(newValue.filter(function(val){return-1!==registeredValues.indexOf(val)}).sort(function(a,b){var indexA=opts.findIndex(function(opt){return opt.value===a}),indexB=opts.findIndex(function(opt){return opt.value===b});return indexA-indexB}))}},prefixCls=getPrefixCls("checkbox",customizePrefixCls),groupPrefixCls="".concat(prefixCls,"-group"),domProps=omit(restProps,["value","disabled"]);options&&0<options.length&&(children=getOptions().map(function(option){return React.createElement(Checkbox,{prefixCls:prefixCls,key:option.value.toString(),disabled:"disabled"in option?option.disabled:restProps.disabled,value:option.value,checked:-1!==value.indexOf(option.value),onChange:option.onChange,className:"".concat(groupPrefixCls,"-item"),style:option.style},option.label)}));var context={toggleOption:toggleOption,value:value,disabled:restProps.disabled,name:restProps.name,registerValue:function registerValue(val){setRegisteredValues(function(prevValues){return[].concat(_toConsumableArray(prevValues),[val])})},cancelValue:function cancelValue(val){setRegisteredValues(function(prevValues){return prevValues.filter(function(v){return v!==val})})}},classString=classNames(groupPrefixCls,_defineProperty({},"".concat(groupPrefixCls,"-rtl"),"rtl"===direction),className);return React.createElement("div",_extends({className:classString,style:style},domProps),React.createElement(GroupContext.Provider,{value:context},children))};export default React.memo(CheckboxGroup);