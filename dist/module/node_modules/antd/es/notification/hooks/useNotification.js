import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import useRCNotification from"/node_modules/rc-notification/es/useNotification.js";import{ConfigConsumer}from"/node_modules/antd/es/config-provider.js";export default function createUseNotification(getNotificationInstance,getRCNoticeProps){return function useNotification(){function notify(args){var customizePrefixCls=args.prefixCls,mergedPrefixCls=getPrefixCls("notification",customizePrefixCls);getNotificationInstance(_extends(_extends({},args),{prefixCls:mergedPrefixCls}),function(_ref){var prefixCls=_ref.prefixCls,instance=_ref.instance;innerInstance=instance,hookNotify(getRCNoticeProps(args,prefixCls))})}var getPrefixCls,innerInstance=null,_useRCNotification=useRCNotification({add:function add(noticeProps,holderCallback){null===innerInstance||void 0===innerInstance?void 0:innerInstance.component.add(noticeProps,holderCallback)}}),_useRCNotification2=_slicedToArray(_useRCNotification,2),hookNotify=_useRCNotification2[0],holder=_useRCNotification2[1],hookApiRef=React.useRef({});return hookApiRef.current.open=notify,["success","info","warning","error"].forEach(function(type){hookApiRef.current[type]=function(args){return hookApiRef.current.open(_extends(_extends({},args),{type:type}))}}),[hookApiRef.current,React.createElement(ConfigConsumer,{key:"holder"},function(context){return getPrefixCls=context.getPrefixCls,holder})]}}