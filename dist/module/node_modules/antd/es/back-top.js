import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import CSSMotion from"/node_modules/rc-motion.js";import addEventListener from"/node_modules/rc-util/es/Dom/addEventListener.js";import useMergedState from"/node_modules/rc-util/es/hooks/useMergedState.js";import classNames from"/node_modules/classnames.js";import omit from"/node_modules/rc-util/es/omit.js";import VerticalAlignTopOutlined from"/node_modules/@ant-design/icons/es/icons/VerticalAlignTopOutlined.js";import{throttleByAnimationFrame}from"/node_modules/antd/es/_util/throttleByAnimationFrame.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import getScroll from"/node_modules/antd/es/_util/getScroll.js";import scrollTo from"/node_modules/antd/es/_util/scrollTo.js";import{cloneElement}from"/node_modules/antd/es/_util/reactNode.js";var BackTop=function BackTop(props){var _useMergedState=useMergedState(!1,{value:props.visible}),_useMergedState2=_slicedToArray(_useMergedState,2),visible=_useMergedState2[0],setVisible=_useMergedState2[1],ref=React.createRef(),scrollEvent=React.useRef(),getDefaultTarget=function getDefaultTarget(){return ref.current&&ref.current.ownerDocument?ref.current.ownerDocument:window},handleScroll=throttleByAnimationFrame(function(e){var visibilityHeight=props.visibilityHeight,scrollTop=getScroll(e.target,!0);setVisible(scrollTop>visibilityHeight)}),bindScrollEvent=function bindScrollEvent(){var target=props.target,container=(target||getDefaultTarget)();scrollEvent.current=addEventListener(container,"scroll",function(e){handleScroll(e)}),handleScroll({target:container})};React.useEffect(function(){return bindScrollEvent(),function(){scrollEvent.current&&scrollEvent.current.remove(),handleScroll.cancel()}},[props.target]);var _React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,customizePrefixCls=props.prefixCls,_props$className=props.className,className=void 0===_props$className?"":_props$className,prefixCls=getPrefixCls("back-top",customizePrefixCls),classString=classNames(prefixCls,_defineProperty({},"".concat(prefixCls,"-rtl"),"rtl"===direction),className),divProps=omit(props,["prefixCls","className","children","visibilityHeight","target","visible"]);return React.createElement("div",_extends({},divProps,{className:classString,onClick:function scrollToTop(e){var onClick=props.onClick,target=props.target,_props$duration=props.duration,duration=void 0===_props$duration?450:_props$duration;scrollTo(0,{getContainer:target||getDefaultTarget,duration:duration}),"function"==typeof onClick&&onClick(e)},ref:ref}),function renderChildren(_ref){var prefixCls=_ref.prefixCls,children=props.children,defaultElement=React.createElement("div",{className:"".concat(prefixCls,"-content")},React.createElement("div",{className:"".concat(prefixCls,"-icon")},React.createElement(VerticalAlignTopOutlined,null)));return React.createElement(CSSMotion,{visible:visible,motionName:"fade",removeOnLeave:!0},function(_ref2){var motionClassName=_ref2.className;return React.createElement("div",null,cloneElement(children||defaultElement,function(_ref3){var className=_ref3.className;return{className:classNames(motionClassName,className)}}))})}({prefixCls:prefixCls}))};BackTop.defaultProps={visibilityHeight:400};export default React.memo(BackTop);