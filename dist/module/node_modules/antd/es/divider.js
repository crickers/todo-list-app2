import"/node_modules/core-js/modules/es.array.index-of.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import{ConfigConsumer}from"/node_modules/antd/es/config-provider.js";var Divider=function Divider(props){return React.createElement(ConfigConsumer,null,function(_ref){var _classNames,getPrefixCls=_ref.getPrefixCls,direction=_ref.direction,customizePrefixCls=props.prefixCls,_props$type=props.type,type=void 0===_props$type?"horizontal":_props$type,_props$orientation=props.orientation,orientation=void 0===_props$orientation?"center":_props$orientation,className=props.className,children=props.children,dashed=props.dashed,plain=props.plain,restProps=__rest(props,["prefixCls","type","orientation","className","children","dashed","plain"]),prefixCls=getPrefixCls("divider",customizePrefixCls),orientationPrefix=0<orientation.length?"-".concat(orientation):orientation,hasChildren=!!children,classString=classNames(prefixCls,"".concat(prefixCls,"-").concat(type),(_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-with-text"),hasChildren),_defineProperty(_classNames,"".concat(prefixCls,"-with-text").concat(orientationPrefix),hasChildren),_defineProperty(_classNames,"".concat(prefixCls,"-dashed"),!!dashed),_defineProperty(_classNames,"".concat(prefixCls,"-plain"),!!plain),_defineProperty(_classNames,"".concat(prefixCls,"-rtl"),"rtl"===direction),_classNames),className);return React.createElement("div",_extends({className:classString},restProps,{role:"separator"}),children&&React.createElement("span",{className:"".concat(prefixCls,"-inner-text")},children))})};export default Divider;