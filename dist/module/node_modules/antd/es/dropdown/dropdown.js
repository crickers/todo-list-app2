import"/node_modules/core-js/modules/es.array.index-of.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import React from"c:\\node_modules\\react\\index.js";import RcDropdown from"/node_modules/rc-dropdown.js";import classNames from"/node_modules/classnames.js";import RightOutlined from"/node_modules/@ant-design/icons/es/icons/RightOutlined.js";import DropdownButton from"/node_modules/antd/es/dropdown/dropdown-button.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import devWarning from"/node_modules/antd/es/_util/devWarning.js";import{tuple}from"/node_modules/antd/es/_util/type.js";import{cloneElement}from"/node_modules/antd/es/_util/reactNode.js";var Placements=tuple("topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight"),Dropdown=function Dropdown(props){var alignPoint,_React$useContext=React.useContext(ConfigContext),getContextPopupContainer=_React$useContext.getPopupContainer,getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,renderOverlay=function renderOverlay(prefixCls){var overlayNode,overlay=props.overlay;overlayNode="function"==typeof overlay?overlay():overlay,overlayNode=React.Children.only("string"==typeof overlayNode?React.createElement("span",null,overlayNode):overlayNode);var overlayProps=overlayNode.props;devWarning(!overlayProps.mode||"vertical"===overlayProps.mode,"Dropdown","mode=\"".concat(overlayProps.mode,"\" is not supported for Dropdown's Menu."));var _overlayProps$selecta=overlayProps.selectable,selectable=void 0!==_overlayProps$selecta&&_overlayProps$selecta,_overlayProps$focusab=overlayProps.focusable,focusable=void 0===_overlayProps$focusab||_overlayProps$focusab,expandIcon=React.createElement("span",{className:"".concat(prefixCls,"-menu-submenu-arrow")},React.createElement(RightOutlined,{className:"".concat(prefixCls,"-menu-submenu-arrow-icon")})),fixedModeOverlay="string"==typeof overlayNode.type?overlayNode:cloneElement(overlayNode,{mode:"vertical",selectable:selectable,focusable:focusable,expandIcon:expandIcon});return fixedModeOverlay},arrow=props.arrow,customizePrefixCls=props.prefixCls,children=props.children,trigger=props.trigger,disabled=props.disabled,getPopupContainer=props.getPopupContainer,overlayClassName=props.overlayClassName,prefixCls=getPrefixCls("dropdown",customizePrefixCls),child=React.Children.only(children),dropdownTrigger=cloneElement(child,{className:classNames("".concat(prefixCls,"-trigger"),_defineProperty({},"".concat(prefixCls,"-rtl"),"rtl"===direction),child.props.className),disabled:disabled}),overlayClassNameCustomized=classNames(overlayClassName,_defineProperty({},"".concat(prefixCls,"-rtl"),"rtl"===direction)),triggerActions=disabled?[]:trigger;return triggerActions&&-1!==triggerActions.indexOf("contextMenu")&&(alignPoint=!0),React.createElement(RcDropdown,_extends({arrow:arrow,alignPoint:alignPoint},props,{overlayClassName:overlayClassNameCustomized,prefixCls:prefixCls,getPopupContainer:getPopupContainer||getContextPopupContainer,transitionName:function getTransitionName(){var _props$placement=props.placement,placement=void 0===_props$placement?"":_props$placement,transitionName=props.transitionName;return void 0===transitionName?0<=placement.indexOf("top")?"slide-down":"slide-up":transitionName}(),trigger:triggerActions,overlay:function overlay(){return renderOverlay(prefixCls)},placement:function getPlacement(){var placement=props.placement;return void 0===placement?"rtl"===direction?"bottomRight":"bottomLeft":placement}()}),dropdownTrigger)};Dropdown.Button=DropdownButton,Dropdown.defaultProps={mouseEnterDelay:.15,mouseLeaveDelay:.1};export default Dropdown;