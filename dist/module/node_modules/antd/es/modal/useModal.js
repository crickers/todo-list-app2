import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";import usePatchElement from"/node_modules/antd/es/_util/hooks/usePatchElement.js";import HookModal from"/node_modules/antd/es/modal/useModal/HookModal.js";import{withConfirm,withInfo,withSuccess,withError,withWarn}from"/node_modules/antd/es/modal/confirm.js";var uuid=0,ElementsHolder=React.memo(React.forwardRef(function(_props,ref){var _usePatchElement=usePatchElement(),_usePatchElement2=_slicedToArray(_usePatchElement,2),elements=_usePatchElement2[0],patchElement=_usePatchElement2[1];return React.useImperativeHandle(ref,function(){return{patchElement:patchElement}},[]),React.createElement(React.Fragment,null,elements)}));export default function useModal(){var holderRef=React.useRef(null),getConfirmFunc=React.useCallback(function(withFunc){return function hookConfirm(config){var _a;uuid+=1;var closeFunc,modalRef=React.createRef(),modal=React.createElement(HookModal,{key:"modal-".concat(uuid),config:withFunc(config),ref:modalRef,afterClose:function afterClose(){closeFunc()}});return closeFunc=null===(_a=holderRef.current)||void 0===_a?void 0:_a.patchElement(modal),{destroy:function destroy(){modalRef.current&&modalRef.current.destroy()},update:function update(newConfig){modalRef.current&&modalRef.current.update(newConfig)}}}},[]),fns=React.useMemo(function(){return{info:getConfirmFunc(withInfo),success:getConfirmFunc(withSuccess),error:getConfirmFunc(withError),warning:getConfirmFunc(withWarn),confirm:getConfirmFunc(withConfirm)}},[]);return[fns,React.createElement(ElementsHolder,{ref:holderRef})]}