import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import React from"c:\\node_modules\\react\\index.js";import omit from"/node_modules/rc-util/es/omit.js";import RcSteps from"/node_modules/rc-steps.js";import CheckOutlined from"/node_modules/@ant-design/icons/es/icons/CheckOutlined.js";import CloseOutlined from"/node_modules/@ant-design/icons/es/icons/CloseOutlined.js";import classNames from"/node_modules/classnames.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import Progress from"/node_modules/antd/es/progress.js";import useBreakpoint from"/node_modules/antd/es/grid/hooks/useBreakpoint.js";var Steps=function Steps(props){var _classNames,percent=props.percent,size=props.size,className=props.className,direction=props.direction,responsive=props.responsive,_useBreakpoint=useBreakpoint(),xs=_useBreakpoint.xs,_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,rtlDirection=_React$useContext.direction,getDirection=React.useCallback(function(){return responsive&&xs?"vertical":direction},[xs,direction]),prefixCls=getPrefixCls("steps",props.prefixCls),iconPrefix=getPrefixCls("",props.iconPrefix),stepsClassName=classNames((_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-rtl"),"rtl"===rtlDirection),_defineProperty(_classNames,"".concat(prefixCls,"-with-progress"),percent!==void 0),_classNames),className),icons={finish:React.createElement(CheckOutlined,{className:"".concat(prefixCls,"-finish-icon")}),error:React.createElement(CloseOutlined,{className:"".concat(prefixCls,"-error-icon")})};return React.createElement(RcSteps,_extends({icons:icons},omit(props,["percent"]),{direction:getDirection(),stepIcon:function stepIconRender(_ref){var node=_ref.node,status=_ref.status;if("process"===status&&percent!==void 0){var progressWidth="small"===size?32:40,iconWithProgress=React.createElement("div",{className:"".concat(prefixCls,"-progress-icon")},React.createElement(Progress,{type:"circle",percent:percent,width:progressWidth,strokeWidth:4,format:function format(){return null}}),node);return iconWithProgress}return node},prefixCls:prefixCls,iconPrefix:iconPrefix,className:stepsClassName}))};Steps.Step=RcSteps.Step,Steps.defaultProps={current:0};export default Steps;