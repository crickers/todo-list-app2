import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.iterator.js";import"/node_modules/core-js/modules/esnext.set.add-all.js";import"/node_modules/core-js/modules/esnext.set.delete-all.js";import"/node_modules/core-js/modules/esnext.set.difference.js";import"/node_modules/core-js/modules/esnext.set.every.js";import"/node_modules/core-js/modules/esnext.set.filter.js";import"/node_modules/core-js/modules/esnext.set.find.js";import"/node_modules/core-js/modules/esnext.set.intersection.js";import"/node_modules/core-js/modules/esnext.set.is-disjoint-from.js";import"/node_modules/core-js/modules/esnext.set.is-subset-of.js";import"/node_modules/core-js/modules/esnext.set.is-superset-of.js";import"/node_modules/core-js/modules/esnext.set.join.js";import"/node_modules/core-js/modules/esnext.set.map.js";import"/node_modules/core-js/modules/esnext.set.reduce.js";import"/node_modules/core-js/modules/esnext.set.some.js";import"/node_modules/core-js/modules/esnext.set.symmetric-difference.js";import"/node_modules/core-js/modules/esnext.set.union.js";import"/node_modules/core-js/modules/web.dom-collections.iterator.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import debounce from"/node_modules/lodash/debounce.js";import{conductExpandParent}from"/node_modules/rc-tree/es/util.js";import{convertDataToEntities,convertTreeToData}from"/node_modules/rc-tree/es/utils/treeUtil.js";import FileOutlined from"/node_modules/@ant-design/icons/es/icons/FileOutlined.js";import FolderOpenOutlined from"/node_modules/@ant-design/icons/es/icons/FolderOpenOutlined.js";import FolderOutlined from"/node_modules/@ant-design/icons/es/icons/FolderOutlined.js";import{ConfigContext}from"/node_modules/antd/es/config-provider.js";import Tree from"/node_modules/antd/es/tree/Tree.js";import{calcRangeKeys,convertDirectoryKeysToNodes}from"/node_modules/antd/es/tree/utils/dictUtil.js";function getIcon(props){var isLeaf=props.isLeaf,expanded=props.expanded;return isLeaf?React.createElement(FileOutlined,null):expanded?React.createElement(FolderOpenOutlined,null):React.createElement(FolderOutlined,null)}function getTreeData(_ref){var treeData=_ref.treeData,children=_ref.children;return treeData||convertTreeToData(children)}var DirectoryTree=function DirectoryTree(_a,ref){var defaultExpandAll=_a.defaultExpandAll,defaultExpandParent=_a.defaultExpandParent,defaultExpandedKeys=_a.defaultExpandedKeys,props=__rest(_a,["defaultExpandAll","defaultExpandParent","defaultExpandedKeys"]),lastSelectedKey=React.useRef(),cachedSelectedKeys=React.useRef(),treeRef=React.createRef();React.useImperativeHandle(ref,function(){return treeRef.current});var _React$useState=React.useState(props.selectedKeys||props.defaultSelectedKeys||[]),_React$useState2=_slicedToArray(_React$useState,2),selectedKeys=_React$useState2[0],setSelectedKeys=_React$useState2[1],_React$useState3=React.useState(function getInitExpandedKeys(){var initExpandedKeys,_convertDataToEntitie=convertDataToEntities(getTreeData(props)),keyEntities=_convertDataToEntitie.keyEntities;return initExpandedKeys=defaultExpandAll?Object.keys(keyEntities):defaultExpandParent?conductExpandParent(props.expandedKeys||defaultExpandedKeys,keyEntities):props.expandedKeys||defaultExpandedKeys,initExpandedKeys}()),_React$useState4=_slicedToArray(_React$useState3,2),expandedKeys=_React$useState4[0],setExpandedKeys=_React$useState4[1];React.useEffect(function(){"selectedKeys"in props&&setSelectedKeys(props.selectedKeys)},[props.selectedKeys]),React.useEffect(function(){"expandedKeys"in props&&setExpandedKeys(props.expandedKeys)},[props.expandedKeys]);var onDebounceExpand=debounce(function expandFolderNode(event,node){var isLeaf=node.isLeaf;isLeaf||event.shiftKey||event.metaKey||event.ctrlKey||treeRef.current.onNodeExpand(event,node)},200,{leading:!0}),onExpand=function onExpand(keys,info){return"expandedKeys"in props||setExpandedKeys(keys),props.onExpand?props.onExpand(keys,info):void 0},onSelect=function onSelect(keys,event){var newSelectedKeys,multiple=props.multiple,node=event.node,nativeEvent=event.nativeEvent,_node$key=node.key,key=void 0===_node$key?"":_node$key,treeData=getTreeData(props),newEvent=_extends(_extends({},event),{selected:!0}),ctrlPick=nativeEvent.ctrlKey||nativeEvent.metaKey,shiftPick=nativeEvent.shiftKey;multiple&&ctrlPick?(newSelectedKeys=keys,lastSelectedKey.current=key,cachedSelectedKeys.current=newSelectedKeys,newEvent.selectedNodes=convertDirectoryKeysToNodes(treeData,newSelectedKeys)):multiple&&shiftPick?(newSelectedKeys=Array.from(new Set([].concat(_toConsumableArray(cachedSelectedKeys.current||[]),_toConsumableArray(calcRangeKeys({treeData:treeData,expandedKeys:expandedKeys,startKey:key,endKey:lastSelectedKey.current}))))),newEvent.selectedNodes=convertDirectoryKeysToNodes(treeData,newSelectedKeys)):(newSelectedKeys=[key],lastSelectedKey.current=key,cachedSelectedKeys.current=newSelectedKeys,newEvent.selectedNodes=convertDirectoryKeysToNodes(treeData,newSelectedKeys)),props.onSelect&&props.onSelect(newSelectedKeys,newEvent),"selectedKeys"in props||setSelectedKeys(newSelectedKeys)},_React$useContext=React.useContext(ConfigContext),getPrefixCls=_React$useContext.getPrefixCls,direction=_React$useContext.direction,customizePrefixCls=props.prefixCls,className=props.className,otherProps=__rest(props,["prefixCls","className"]),prefixCls=getPrefixCls("tree",customizePrefixCls),connectClassName=classNames("".concat(prefixCls,"-directory"),_defineProperty({},"".concat(prefixCls,"-directory-rtl"),"rtl"===direction),className);return React.createElement(Tree,_extends({icon:getIcon,ref:treeRef,blockNode:!0},otherProps,{prefixCls:prefixCls,className:connectClassName,expandedKeys:expandedKeys,selectedKeys:selectedKeys,onSelect:onSelect,onClick:function onClick(event,node){var expandAction=props.expandAction;"click"===expandAction&&onDebounceExpand(event,node),props.onClick&&props.onClick(event,node)},onDoubleClick:function onDoubleClick(event,node){var expandAction=props.expandAction;"doubleClick"===expandAction&&onDebounceExpand(event,node),props.onDoubleClick&&props.onDoubleClick(event,node)},onExpand:onExpand}))},ForwardDirectoryTree=React.forwardRef(DirectoryTree);ForwardDirectoryTree.displayName="DirectoryTree",ForwardDirectoryTree.defaultProps={showIcon:!0,expandAction:"click"};export default ForwardDirectoryTree;