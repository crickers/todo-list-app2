import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.array.splice.js";import _toConsumableArray from"/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";var Record;(function(Record){Record[Record.None=0]="None",Record[Record.Start=1]="Start",Record[Record.End=2]="End"})(Record||(Record={}));function traverseNodesKey(treeData,callback){treeData.forEach(function processNode(dataNode){var key=dataNode.key,children=dataNode.children;!1!==callback(key,dataNode)&&traverseNodesKey(children||[],callback)})}export function calcRangeKeys(_ref){function matchKey(key){return key===startKey||key===endKey}var treeData=_ref.treeData,expandedKeys=_ref.expandedKeys,startKey=_ref.startKey,endKey=_ref.endKey,keys=[],record=Record.None;return startKey&&startKey===endKey?[startKey]:startKey&&endKey?(traverseNodesKey(treeData,function(key){if(record===Record.End)return!1;if(!matchKey(key))record===Record.Start&&keys.push(key);else if(keys.push(key),record===Record.None)record=Record.Start;else if(record===Record.Start)return record=Record.End,!1;return-1!==expandedKeys.indexOf(key)}),keys):[]}export function convertDirectoryKeysToNodes(treeData,keys){var restKeys=_toConsumableArray(keys),nodes=[];return traverseNodesKey(treeData,function(key,node){var index=restKeys.indexOf(key);return-1!==index&&(nodes.push(node),restKeys.splice(index,1)),!!restKeys.length}),nodes}