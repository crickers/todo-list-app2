import"/node_modules/core-js/modules/es.array.index-of.js";import"/node_modules/core-js/modules/es.regexp.to-string.js";import _defineProperty from"/node_modules/@babel/runtime/helpers/esm/defineProperty.js";import _extends from"/node_modules/@babel/runtime/helpers/esm/extends.js";import _classCallCheck from"/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";import _createClass from"/node_modules/@babel/runtime/helpers/esm/createClass.js";import _assertThisInitialized from"/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js";import _inherits from"/node_modules/@babel/runtime/helpers/esm/inherits.js";import _createSuper from"/node_modules/@babel/runtime/helpers/esm/createSuper.js";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t};import React from"c:\\node_modules\\react\\index.js";import classNames from"/node_modules/classnames.js";import omit from"/node_modules/rc-util/es/omit.js";import CloseOutlined from"/node_modules/@ant-design/icons/es/icons/CloseOutlined.js";import CheckOutlined from"/node_modules/@ant-design/icons/es/icons/CheckOutlined.js";import CheckCircleFilled from"/node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js";import CloseCircleFilled from"/node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js";import{ConfigConsumer}from"/node_modules/antd/es/config-provider.js";import{tuple}from"/node_modules/antd/es/_util/type.js";import devWarning from"/node_modules/antd/es/_util/devWarning.js";import Line from"/node_modules/antd/es/progress/Line.js";import Circle from"/node_modules/antd/es/progress/Circle.js";import Steps from"/node_modules/antd/es/progress/Steps.js";import{validProgress,getSuccessPercent}from"/node_modules/antd/es/progress/utils.js";var ProgressTypes=tuple("line","circle","dashboard"),ProgressStatuses=tuple("normal","exception","active","success"),Progress=function(_React$Component){function Progress(){var _this;return _classCallCheck(this,Progress),_this=_super.apply(this,arguments),_this.renderProgress=function(_ref){var _classNames,getPrefixCls=_ref.getPrefixCls,direction=_ref.direction,_assertThisInitialize=_assertThisInitialized(_this),props=_assertThisInitialize.props,customizePrefixCls=props.prefixCls,className=props.className,size=props.size,type=props.type,steps=props.steps,showInfo=props.showInfo,strokeColor=props.strokeColor,restProps=__rest(props,["prefixCls","className","size","type","steps","showInfo","strokeColor"]),prefixCls=getPrefixCls("progress",customizePrefixCls),progressStatus=_this.getProgressStatus(),progressInfo=_this.renderProcessInfo(prefixCls,progressStatus);devWarning(!("successPercent"in props),"Progress","`successPercent` is deprecated. Please use `success.percent` instead.");var progress;"line"===type?progress=steps?React.createElement(Steps,_extends({},_this.props,{strokeColor:"string"==typeof strokeColor?strokeColor:void 0,prefixCls:prefixCls,steps:steps}),progressInfo):React.createElement(Line,_extends({},_this.props,{prefixCls:prefixCls,direction:direction}),progressInfo):("circle"===type||"dashboard"===type)&&(progress=React.createElement(Circle,_extends({},_this.props,{prefixCls:prefixCls,progressStatus:progressStatus}),progressInfo));var classString=classNames(prefixCls,(_classNames={},_defineProperty(_classNames,"".concat(prefixCls,"-").concat("dashboard"===type&&"circle"||steps&&"steps"||type),!0),_defineProperty(_classNames,"".concat(prefixCls,"-status-").concat(progressStatus),!0),_defineProperty(_classNames,"".concat(prefixCls,"-show-info"),showInfo),_defineProperty(_classNames,"".concat(prefixCls,"-").concat(size),size),_defineProperty(_classNames,"".concat(prefixCls,"-rtl"),"rtl"===direction),_classNames),className);return React.createElement("div",_extends({},omit(restProps,["status","format","trailColor","strokeWidth","width","gapDegree","gapPosition","strokeLinecap","percent","success","successPercent"]),{className:classString}),progress)},_this}_inherits(Progress,_React$Component);var _super=_createSuper(Progress);return _createClass(Progress,[{key:"getPercentNumber",value:function getPercentNumber(){var _this$props$percent=this.props.percent,percent=void 0===_this$props$percent?0:_this$props$percent,successPercent=getSuccessPercent(this.props);return parseInt(void 0===successPercent?percent.toString():successPercent.toString(),10)}},{key:"getProgressStatus",value:function getProgressStatus(){var status=this.props.status;return 0>ProgressStatuses.indexOf(status)&&100<=this.getPercentNumber()?"success":status||"normal"}},{key:"renderProcessInfo",value:function renderProcessInfo(prefixCls,progressStatus){var _this$props=this.props,showInfo=_this$props.showInfo,format=_this$props.format,type=_this$props.type,percent=_this$props.percent,successPercent=getSuccessPercent(this.props);if(!showInfo)return null;var text,textFormatter=format||function(percentNumber){return"".concat(percentNumber,"%")},isLineType="line"===type;return format||"exception"!==progressStatus&&"success"!==progressStatus?text=textFormatter(validProgress(percent),validProgress(successPercent)):"exception"===progressStatus?text=isLineType?React.createElement(CloseCircleFilled,null):React.createElement(CloseOutlined,null):"success"==progressStatus&&(text=isLineType?React.createElement(CheckCircleFilled,null):React.createElement(CheckOutlined,null)),React.createElement("span",{className:"".concat(prefixCls,"-text"),title:"string"==typeof text?text:void 0},text)}},{key:"render",value:function render(){return React.createElement(ConfigConsumer,null,this.renderProgress)}}]),Progress}(React.Component);export{Progress as default};Progress.defaultProps={type:"line",percent:0,showInfo:!0,trailColor:null,size:"default",gapDegree:void 0,strokeLinecap:"round"};