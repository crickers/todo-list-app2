import _slicedToArray from"/node_modules/@babel/runtime/helpers/esm/slicedToArray.js";import React from"c:\\node_modules\\react\\index.js";export default function useControlledState(defaultStateValue,option){function triggerChange(newValue){setInnerValue(newValue),mergedValue!==newValue&&onChange&&onChange(newValue,mergedValue)}var _ref=option||{},defaultValue=_ref.defaultValue,value=_ref.value,onChange=_ref.onChange,postState=_ref.postState,_React$useState=React.useState(function(){return void 0===value?void 0===defaultValue?"function"==typeof defaultStateValue?defaultStateValue():defaultStateValue:"function"==typeof defaultValue?defaultValue():defaultValue:value}),_React$useState2=_slicedToArray(_React$useState,2),innerValue=_React$useState2[0],setInnerValue=_React$useState2[1],mergedValue=void 0===value?innerValue:value;postState&&(mergedValue=postState(mergedValue));var firstRenderRef=React.useRef(!0);return React.useEffect(function(){return firstRenderRef.current?void(firstRenderRef.current=!1):void(void 0===value&&setInnerValue(value))},[value]),[mergedValue,triggerChange]}